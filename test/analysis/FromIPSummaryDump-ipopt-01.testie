%require -q
click-buildtool provides FromIPSummaryDump
printf '\xd4\xc3\xb2\xa1\x02\x00\x04\x00\x00\x00\x00\x00\x00\x00\x00\x00\xd0\x07\x00\x00\x01\x00\x00\x00' > TESTDUMP
tcpdump -r TESTDUMP >/dev/null 2>&1

%script

# read from a hand-written IPSummaryDump file; check headers, emit to a dump
click -e "
FromIPSummaryDump(IN1, STOP true, ZERO true)
	-> SetIPChecksum
	-> SetTCPChecksum
	-> CheckIPHeader
	-> CheckTCPHeader
	-> ToDump(OUT1, ENCAP IP);
"

# use tcpdump to verify dump
tcpdump -nn -t -v -r OUT1 > OUT2

# read from dump to verify ToIPSummaryDump
# NB: ToIPSummaryDump's ip_opt option DOES NOT write nop and eol
click -e "
FromDump(OUT1, FORCE_IP true, STOP true)
	-> ToIPSummaryDump(OUT3, FIELDS src sport dst dport proto ip_opt);
"

# go to and from a binary dump to test that
click -e "
FromDump(OUT1, FORCE_IP true, STOP true)
	-> ToIPSummaryDump(OUT4, BINARY true, FIELDS src sport dst dport proto ip_opt);
" 

click -e "FromIPSummaryDump(OUT4, STOP true)
	-> ToIPSummaryDump(OUT5, FIELDS src sport dst dport proto ip_opt);"

%file IN1
!data src sport dst dport proto ip_opt
18.26.4.44 30 10.0.0.4 40 T .
18.26.4.44 30 10.0.0.4 40 T nop;nop;eol
18.26.4.44 20 10.0.0.8 80 T ssrr{128.4.45.60,128.4.49.61^1.1.1.1,2.2.2.2}
18.26.4.44 20 10.0.0.8 80 T ssrr{128.4.45.60,128.4.49.61,^1.1.1.1,2.2.2.2}
18.26.4.44 10 10.0.0.8 80 T rr{2.3.4.5}+3
18.26.4.44 11 10.0.0.8 80 T rr{}+1
18.26.4.44 12 10.0.0.1 80 T ts{1.0.0.1=!8320,1.0.0.2=8321}++5
18.26.4.44 12 10.0.0.1 80 T ts.ip{1.0.0.1=!8320,1.0.0.2=8321}++5
18.26.4.44 13 10.0.0.1 80 T ts.3{1.0.0.1=1,^1.0.0.3,1.0.0.4=?}+1
18.26.4.44 13 10.0.0.1 80 T ts.preip{1.0.0.1=1^1.0.0.3,1.0.0.4=?}+1
18.26.4.44 14 10.0.0.1 80 T ts{1,10000,!45}+2
18.26.4.44 15 10.0.0.1 80 T ts{1,10000,!45^0,0};rr{}+1
18.26.4.44 15 10.0.0.1 80 T ts{1,10000,!45,^0,0}

%file OUT1 OUT4

%info

Note the {{.*?}} checks in place of real TCP checksums -- tcpdump 3.8.x
calculates TCP checksums incorrectly in the presence of EOL/NOP IP options.

%cut %expect OUT2

Cut because of arbitrary tcpdump format changes.

IP (tos 0x0, id 0, offset 0, flags [none], proto: TCP (6), length: 40) 18.26.4.44.30 > 10.0.0.4.40: . [tcp sum ok] win 0
IP (tos 0x0, id 0, offset 0, flags [none], proto: TCP (6), length: 44, optlength: 4 ( NOP NOP EOL-1 )) 18.26.4.44.30 > 10.0.0.4.40: . [{{.*?}}] win 0
IP (tos 0x0, id 0, offset 0, flags [none], proto: TCP (6), length: 60, optlength: 20 ( SSRR{128.4.45.60 128.4.49.61#1.1.1.1 2.2.2.2} EOL )) 18.26.4.44.20 > 10.0.0.8.80: . [tcp sum ok] win 0
IP (tos 0x0, id 0, offset 0, flags [none], proto: TCP (6), length: 60, optlength: 20 ( SSRR{128.4.45.60 128.4.49.61#1.1.1.1 2.2.2.2} EOL )) 18.26.4.44.20 > 10.0.0.8.80: . [tcp sum ok] win 0
IP (tos 0x0, id 0, offset 0, flags [none], proto: TCP (6), length: 60, optlength: 20 ( RR{2.3.4.5#0.0.0.0 0.0.0.0 0.0.0.0} EOL )) 18.26.4.44.10 > 10.0.0.8.80: . [{{.*?}}] win 0
IP (tos 0x0, id 0, offset 0, flags [none], proto: TCP (6), length: 48, optlength: 8 ( RR{#0.0.0.0} EOL )) 18.26.4.44.11 > 10.0.0.8.80: . [{{.*?}}] win 0
IP (tos 0x0, id 0, offset 0, flags [none], proto: TCP (6), length: 60, optlength: 20 ( TS{TS+ADDR -2147475328@1.0.0.1 8321@1.0.0.2 ^  [5 hops not recorded]}  )) 18.26.4.44.12 > 10.0.0.1.80: . [{{.*?}}] win 0
IP (tos 0x0, id 0, offset 0, flags [none], proto: TCP (6), length: 60, optlength: 20 ( TS{TS+ADDR -2147475328@1.0.0.1 8321@1.0.0.2 ^  [5 hops not recorded]}  )) 18.26.4.44.12 > 10.0.0.1.80: . [{{.*?}}] win 0
IP (tos 0x0, id 0, offset 0, flags [none], proto: TCP (6), length: 76, optlength: 36 ( TS{PRESPEC 1@1.0.0.1 ^ 0@1.0.0.3 0@1.0.0.4 0@0.0.0.0} )) 18.26.4.44.13 > 10.0.0.1.80: . [{{.*?}}] win 0
IP (tos 0x0, id 0, offset 0, flags [none], proto: TCP (6), length: 76, optlength: 36 ( TS{PRESPEC 1@1.0.0.1 ^ 0@1.0.0.3 0@1.0.0.4 0@0.0.0.0} )) 18.26.4.44.13 > 10.0.0.1.80: . [{{.*?}}] win 0
IP (tos 0x0, id 0, offset 0, flags [none], proto: TCP (6), length: 64, optlength: 24 ( TS{TSONLY 1@ 10000@ -2147483603@ ^ 0@ 0@} )) 18.26.4.44.14 > 10.0.0.1.80: . [{{.*?}}] win 0
IP (tos 0x0, id 0, offset 0, flags [none], proto: TCP (6), length: 72, optlength: 32 ( TS{TSONLY 1@ 10000@ -2147483603@ ^ 0@ 0@} RR{#0.0.0.0} EOL )) 18.26.4.44.15 > 10.0.0.1.80: . [{{.*?}}] win 0
IP (tos 0x0, id 0, offset 0, flags [none], proto: TCP (6), length: 64, optlength: 24 ( TS{TSONLY 1@ 10000@ -2147483603@ ^ 0@ 0@} )) 18.26.4.44.15 > 10.0.0.1.80: . [{{.*?}}] win 0

%cut %expect -a OUT2
18.26.4.44.30 > 10.0.0.4.40: . [tcp sum ok] win 0 [ttl 0] (id 0, len 40)
18.26.4.44.30 > 10.0.0.4.40: . [tcp sum ok] win 0 [ttl 0] (id 0, len 44, optlen=4 NOP NOP EOL-1)
18.26.4.44.20 > 10.0.0.8.80: . [tcp sum ok] win 0 [ttl 0] (id 0, len 60, optlen=20 SSRR{128.4.45.60 128.4.49.61#1.1.1.1 2.2.2.2} EOL)
18.26.4.44.20 > 10.0.0.8.80: . [tcp sum ok] win 0 [ttl 0] (id 0, len 60, optlen=20 SSRR{128.4.45.60 128.4.49.61#1.1.1.1 2.2.2.2} EOL)
18.26.4.44.10 > 10.0.0.8.80: . [tcp sum ok] win 0 [ttl 0] (id 0, len 60, optlen=20 RR{2.3.4.5#0.0.0.0 0.0.0.0 0.0.0.0} EOL)
18.26.4.44.11 > 10.0.0.8.80: . [tcp sum ok] win 0 [ttl 0] (id 0, len 48, optlen=8 RR{#0.0.0.0} EOL)
18.26.4.44.12 > 10.0.0.1.80: . [tcp sum ok] win 0 [ttl 0] (id 0, len 60, optlen=20 TS{TS+ADDR -2147475328@1.0.0.1 8321@1.0.0.2 ^  [5 hops not recorded]} )
18.26.4.44.12 > 10.0.0.1.80: . [tcp sum ok] win 0 [ttl 0] (id 0, len 60, optlen=20 TS{TS+ADDR -2147475328@1.0.0.1 8321@1.0.0.2 ^  [5 hops not recorded]} )
18.26.4.44.13 > 10.0.0.1.80: . [tcp sum ok] win 0 [ttl 0] (id 0, len 76, optlen=36 TS{PRESPEC 1@1.0.0.1 ^ 0@1.0.0.3 0@1.0.0.4 0@0.0.0.0})
18.26.4.44.13 > 10.0.0.1.80: . [tcp sum ok] win 0 [ttl 0] (id 0, len 76, optlen=36 TS{PRESPEC 1@1.0.0.1 ^ 0@1.0.0.3 0@1.0.0.4 0@0.0.0.0})
18.26.4.44.14 > 10.0.0.1.80: . [tcp sum ok] win 0 [ttl 0] (id 0, len 64, optlen=24 TS{TSONLY 1@ 10000@ -2147483603@ ^ 0@ 0@})
18.26.4.44.15 > 10.0.0.1.80: . [tcp sum ok] win 0 [ttl 0] (id 0, len 72, optlen=32 TS{TSONLY 1@ 10000@ -2147483603@ ^ 0@ 0@} RR{#0.0.0.0} EOL)
18.26.4.44.15 > 10.0.0.1.80: . [tcp sum ok] win 0 [ttl 0] (id 0, len 64, optlen=24 TS{TSONLY 1@ 10000@ -2147483603@ ^ 0@ 0@})

%expect OUT3 OUT5
18.26.4.44 30 10.0.0.4 40 T .
18.26.4.44 30 10.0.0.4 40 T .
18.26.4.44 20 10.0.0.8 80 T ssrr{128.4.45.60,128.4.49.61^1.1.1.1,2.2.2.2}
18.26.4.44 20 10.0.0.8 80 T ssrr{128.4.45.60,128.4.49.61^1.1.1.1,2.2.2.2}
18.26.4.44 10 10.0.0.8 80 T rr{2.3.4.5}+3
18.26.4.44 11 10.0.0.8 80 T rr{}+1
18.26.4.44 12 10.0.0.1 80 T ts.ip{1.0.0.1=!8320,1.0.0.2=8321^}++5
18.26.4.44 12 10.0.0.1 80 T ts.ip{1.0.0.1=!8320,1.0.0.2=8321^}++5
18.26.4.44 13 10.0.0.1 80 T ts.preip{1.0.0.1=1^1.0.0.3,1.0.0.4,0.0.0.0}
18.26.4.44 13 10.0.0.1 80 T ts.preip{1.0.0.1=1^1.0.0.3,1.0.0.4,0.0.0.0}
18.26.4.44 14 10.0.0.1 80 T ts{1,10000,!45}+2
18.26.4.44 15 10.0.0.1 80 T ts{1,10000,!45}+2;rr{}+1
18.26.4.44 15 10.0.0.1 80 T ts{1,10000,!45}+2

%ignorex
!.*

%eof
