%script

clicktest_subtest 1

click-align -e "
fd::FromDevice(eth3, true) -> cl::Classifier(12/0800, -);
cl[0] -> st::Strip(14)->chip::CheckIPHeader();
cl[1] -> d1::Discard;
chip[0]-> ust::Unstrip(14)-> th::ToHost();
chip[1]-> d2::Discard;
"

clicktest_subtest 2

click-align -e "
fd::FromDevice(eth3, true) -> cl::Classifier(12/0800, -);
cl[0] -> chip::CheckIPHeader(14);
cl[1] -> d1::Discard;
chip[0]-> th::ToHost();
chip[1]-> d2::Discard;
"

clicktest_subtest 3

click-align -e "
fd::FromDevice(eth3, true) -> cl::Classifier(12/0800, -);
cl[0] -> chip::CheckIPHeader2(OFFSET 14);
cl[1] -> d1::Discard;
chip[0]-> th::ToHost();
chip[1]-> d2::Discard;
"

clicktest_subtest 4

click-align -e "
fd::FromDevice(eth3, true) -> st::Strip(14)->chip::CheckIPHeader();

chip[0]-> ust::Unstrip(14)->mip::MarkIPHeader(14)->ipcl_0::IPClassifier(dst 10.0.0.0/8, -);
chip[1]->d1::Discard;

ipcl_0[0]->a::Align(4, 0)->th::ToHost();
ipcl_0[1]->d2::Discard;
"

clicktest_subtest 5

click-align -e "
fd::FromDevice(eth3, true) -> fst::Strip(1) -> a1::Align(4, 2) -> st::Strip(14)->chip::CheckIPHeader();

chip[0]-> ust::Unstrip(14)->mip::MarkIPHeader(14)->ipcl_0::IPClassifier(dst 10.0.0.0/8, -);
chip[1]->d1::Discard;

ipcl_0[0]->a::Align(4, 0)->th::ToHost();
ipcl_0[1]->d2::Discard;
"

%expect stdout
fd :: FromDevice(eth3, true);
cl :: Classifier(12/0800, -);
st :: Strip(14);
chip :: CheckIPHeader;
d1 :: Discard;
ust :: Unstrip(14);
th :: ToHost;
d2 :: Discard;
AlignmentInfo@click_align@{{\d+}} :: AlignmentInfo(cl  4 2,
  chip  4 0);
fd -> cl
    -> st
    -> chip
    -> ust
    -> th;
cl [1] -> d1;
chip [1] -> d2;

fd :: FromDevice(eth3, true);
cl :: Classifier(12/0800, -);
chip :: CheckIPHeader(14);
d1 :: Discard;
th :: ToHost;
d2 :: Discard;
AlignmentInfo@click_align@{{\d+}} :: AlignmentInfo(cl  4 2,
  chip  4 2);
fd -> cl
    -> chip
    -> th;
cl [1] -> d1;
chip [1] -> d2;

fd :: FromDevice(eth3, true);
cl :: Classifier(12/0800, -);
chip :: CheckIPHeader2(OFFSET 14);
d1 :: Discard;
th :: ToHost;
d2 :: Discard;
AlignmentInfo@click_align@{{\d+}} :: AlignmentInfo(cl  4 2,
  chip  4 2);
fd -> cl
    -> chip
    -> th;
cl [1] -> d1;
chip [1] -> d2;

fd :: FromDevice(eth3, true);
st :: Strip(14);
chip :: CheckIPHeader;
ust :: Unstrip(14);
mip :: MarkIPHeader(14);
ipcl_0 :: IPClassifier(dst 10.0.0.0/8, -);
d1 :: Discard;
th :: ToHost;
d2 :: Discard;
AlignmentInfo@click_align@{{\d+}} :: AlignmentInfo(chip  4 0);
fd -> st
    -> chip
    -> ust
    -> mip
    -> ipcl_0
    -> th;
chip [1] -> d1;
ipcl_0 [1] -> d2;

fd :: FromDevice(eth3, true);
fst :: Strip(1);
a1 :: Align(4, 2);
st :: Strip(14);
chip :: CheckIPHeader;
ust :: Unstrip(14);
mip :: MarkIPHeader(14);
ipcl_0 :: IPClassifier(dst 10.0.0.0/8, -);
d1 :: Discard;
th :: ToHost;
d2 :: Discard;
AlignmentInfo@click_align@{{\d+}} :: AlignmentInfo(chip  4 0);
fd -> fst
    -> a1
    -> st
    -> chip
    -> ust
    -> mip
    -> ipcl_0
    -> th;
chip [1] -> d1;
ipcl_0 [1] -> d2;

%ignorex
#.*
