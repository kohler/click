diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/Makefile.in ns-2.30/Makefile.in
--- ns-2.30-pure/Makefile.in	2006-09-24 22:11:19.000000000 -0700
+++ ns-2.30/Makefile.in	2007-09-11 21:04:07.000000000 -0700
@@ -58,7 +58,7 @@
 LDFLAGS	= @LDFLAGS@
 LDOUT	= -o $(BLANK)
 
-DEFINE	= -DTCP_DELAY_BIND_ALL -DNO_TK @V_DEFINE@ @V_DEFINES@ @DEFS@ -DNS_DIFFUSION -DSMAC_NO_SYNC -DCPP_NAMESPACE=@CPP_NAMESPACE@ -DUSE_SINGLE_ADDRESS_SPACE -Drng_test
+DEFINE	= -DTCP_DELAY_BIND_ALL -DNO_TK @V_DEFINE@ @V_DEFINES@ @DEFS@ -DNS_DIFFUSION -DSMAC_NO_SYNC -DCPP_NAMESPACE=@CPP_NAMESPACE@ -DUSE_SINGLE_ADDRESS_SPACE -Drng_test -DALLOW_RANDOM
 
 INCLUDES = \
 	-I. \
@@ -155,7 +155,7 @@
 
 OBJ_CC = \
 	tools/random.o tools/rng.o tools/ranvar.o common/misc.o common/timer-handler.o \
-	common/scheduler.o common/object.o common/packet.o \
+	common/scheduler.o common/object.o common/packet.o common/rawpacket.o \
 	common/ip.o routing/route.o common/connector.o common/ttl.o \
 	trace/trace.o trace/trace-ip.o \
 	classifier/classifier.o classifier/classifier-addr.o \
@@ -167,6 +167,7 @@
 	classifier/classifier-mac.o \
 	classifier/classifier-qs.o \
 	classifier/classifier-port.o src_rtg/classifier-sr.o \
+	classifier/classifier-ext.o classifier/classifier-click.o \
         src_rtg/sragent.o src_rtg/hdr_src.o adc/ump.o \
 	qs/qsagent.o qs/hdr_qs.o \
 	apps/app.o apps/telnet.o tcp/tcplib-telnet.o \
@@ -200,7 +201,7 @@
 	sctp/sctpDebug.o \
 	tools/integrator.o tools/queue-monitor.o \
 	tools/flowmon.o tools/loss-monitor.o \
-	queue/queue.o queue/drop-tail.o \
+	queue/queue.o queue/drop-tail.o queue/clickqueue.o \
 	adc/simple-intserv-sched.o queue/red.o \
 	queue/semantic-packetqueue.o queue/semantic-red.o \
 	tcp/ack-recons.o \
@@ -228,14 +229,15 @@
 	common/pkt-counter.o \
 	common/Decapsulator.o common/Encapsulator.o \
 	common/encap.o \
-	mac/channel.o mac/mac.o mac/ll.o mac/mac-802_11.o \
+	mac/channel.o mac/mac.o mac/ll.o mac/ll-ext.o mac/mac-802_11.o \
 	mac/mac-802_3.o mac/mac-tdma.o mac/smac.o \
 	mobile/mip.o mobile/mip-reg.o mobile/gridkeeper.o \
 	mobile/propagation.o mobile/tworayground.o \
-	mobile/antenna.o mobile/omni-antenna.o \
+	mobile/antenna.o mobile/omni-antenna.o mobile/uni-antenna.o \
+	mobile/pattern-antenna.o \
 	mobile/shadowing.o mobile/shadowing-vis.o mobile/dumb-agent.o \
 	common/bi-connector.o common/node.o \
-	common/mobilenode.o \
+	common/mobilenode.o common/clicknode.o \
 	mac/arp.o mobile/god.o mobile/dem.o \
 	mobile/topography.o mobile/modulation.o \
 	queue/priqueue.o queue/dsr-priqueue.o \
@@ -299,6 +301,7 @@
 	pgm/classifier-pgm.o pgm/pgm-agent.o pgm/pgm-sender.o \
 	pgm/pgm-receiver.o mcast/rcvbuf.o \
 	mcast/classifier-lms.o mcast/lms-agent.o mcast/lms-receiver.o \
+	routing/extrouter.o routing/extclickrouter.o \
 	mcast/lms-sender.o \
 	queue/delayer.o \
 	xcp/xcpq.o xcp/xcp.o xcp/xcp-end-sys.o \
@@ -462,6 +465,7 @@
 	tcl/lib/ns-srcrt.tcl \
 	tcl/mcast/ns-lms.tcl \
 	tcl/lib/ns-qsnode.tcl \
+	tcl/lib/ns-clicknode.tcl \
 	@V_NS_TCL_LIB_STL@
 
 $(GEN_DIR)ns_tcl.cc: $(NS_TCL_LIB)
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/apps/udp.cc ns-2.30/apps/udp.cc
--- ns-2.30-pure/apps/udp.cc	2006-09-24 22:10:59.000000000 -0700
+++ ns-2.30/apps/udp.cc	2007-09-11 21:04:07.000000000 -0700
@@ -104,7 +104,8 @@
 		if (flags && (0 ==strcmp(flags, "NEW_BURST")))
 			rh->flags() |= RTP_M;
 		p->setdata(data);
-		target_->recv(p);
+		//target_->recv(p);
+		Agent::send(p,0);
 	}
 	n = nbytes % size_;
 	if (n > 0) {
@@ -119,7 +120,8 @@
 		if (flags && (0 == strcmp(flags, "NEW_BURST")))
 			rh->flags() |= RTP_M;
 		p->setdata(data);
-		target_->recv(p);
+		//target_->recv(p);
+		Agent::send(p,0);
 	}
 	idle();
 }
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/classifier/classifier-click.cc ns-2.30/classifier/classifier-click.cc
--- ns-2.30-pure/classifier/classifier-click.cc	1969-12-31 16:00:00.000000000 -0800
+++ ns-2.30/classifier/classifier-click.cc	2007-09-11 22:34:32.000000000 -0700
@@ -0,0 +1,730 @@
+/*
+ * classifier-click classifier file for nsclick
+ */
+
+/*****************************************************************************
+ *  Copyright 2002, Univerity of Colorado at Boulder.                        *
+ *                                                                           *
+ *                        All Rights Reserved                                *
+ *                                                                           *
+ *  Permission to use, copy, modify, and distribute this software and its    *
+ *  documentation for any purpose other than its incorporation into a        *
+ *  commercial product is hereby granted without fee, provided that the      *
+ *  above copyright notice appear in all copies and that both that           *
+ *  copyright notice and this permission notice appear in supporting         *
+ *  documentation, and that the name of the University not be used in        *
+ *  advertising or publicity pertaining to distribution of the software      *
+ *  without specific, written prior permission.                              *
+ *                                                                           *
+ *  UNIVERSITY OF COLORADO DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS      *
+ *  SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND        *
+ *  FITNESS FOR ANY PARTICULAR PURPOSE.  IN NO EVENT SHALL THE UNIVERSITY    *
+ *  OF COLORADO BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL         *
+ *  DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA       *
+ *  OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER        *
+ *  TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR         *
+ *  PERFORMANCE OF THIS SOFTWARE.                                            *
+ *                                                                           *
+ ****************************************************************************/
+/*
+ *	Modified by Nicolas Letor to support wifi elements.
+ * 	Performance Analysis of Telecommunication Systems (PATS) research group,
+ * 	Interdisciplinary Institute for Broadband Technology (IBBT) & Universiteit Antwerpen.
+ */
+#include "config.h"
+#include <stdlib.h>
+#include <ctype.h>
+#include <sys/time.h>
+#include <unistd.h>
+//#include <stl.h>
+//#include <hash_map.h>
+#include <map>
+#include <string>
+#include <stdarg.h>
+
+#include "agent.h"
+#include "packet.h"
+#include "rawpacket.h"
+#include "ip.h"
+#include "extrouter.h"
+#include "classifier.h"
+#include "classifier-ext.h"
+#include "mobilenode.h"
+#include "clicknode.h"
+#include "address.h"
+#include <click/simclick.h>
+#include "scheduler.h"
+#include "classifier-click.h"
+#include "ll-ext.h"
+#include "clickqueue.h"
+
+#include "packet_anno.h"
+
+static class ClickClassifierClass : public TclClass {
+public:
+  ClickClassifierClass() : TclClass("Classifier/Ext/Click") {}
+  TclObject* create(int, const char*const*) {
+    return (new ClickClassifier());
+  }
+} class_click_classifier;
+
+
+void
+ClickEventHandler::handle(Event* event) {
+    // XXX dangerous downcast - should use RTTI
+    // XXX multithreading!
+    ClickEvent* cevent = (ClickEvent*) event;
+    cevent->simnode_->curtime = cevent->when_;
+    //fprintf(stderr,"Should be calling simclick_click_run: %lf\n",event->time_);
+    simclick_click_run(cevent->simnode_);
+    delete cevent;
+}
+
+map<MACAddr,int> ClickClassifier::global_mactonodemap_;
+map<MACAddr,int> ClickClassifier::global_mactonsmacmap_;
+map<u_int32_t,int> ClickClassifier::global_ipmap_;
+
+ClickClassifier::ClickClassifier() {
+  extrouter_ = this;
+  click_initialized_ = false;
+}
+
+int
+ClickClassifier::command(int argc, const char*const* argv)
+{
+  Tcl& tcl = Tcl::instance();
+  if (2 == argc) {
+    if (strcmp(argv[1], "getnodename") == 0) {
+      // getnodename
+      tcl.resultf(nodename_.c_str());
+      return TCL_OK;
+    }
+    if (strcmp(argv[1], "runclick") == 0) {
+      // runclick
+      if (click_initialized_) {
+	  simclick_node_t::curtime = GetSimTime();
+	  simclick_click_run(this);
+      }
+      return TCL_OK;
+    }
+  }
+  else if (3 == argc) {
+    if(strcmp(argv[1], "loadclick") == 0) {
+	simclick_node_t::curtime = GetSimTime();
+	if (simclick_click_create(this, argv[2]) >= 0) {
+	    click_initialized_ = true;
+	    simclick_click_run(this);
+	}
+
+      return TCL_OK;
+    }
+    if (strcmp(argv[1], "getip") == 0) {
+      // getip <ifname>
+      int theif = GetIFID(argv[2]);
+      //fprintf(stderr,"get ipaddr is %s\n",ifipaddrs_[theif].c_str());
+      tcl.resultf(ifipaddrs_[theif].c_str());
+      return TCL_OK;
+    }
+    if (strcmp(argv[1], "getmac") == 0) {
+      // getmac <ifname>
+      int theif = GetIFID(argv[2]);
+      //fprintf(stderr,"get macaddr is %s\n",ifmacaddrs_[theif].c_str());
+      tcl.resultf(ifmacaddrs_[theif].c_str());
+      return TCL_OK;
+    }
+    if (strcmp(argv[1], "setnodename") == 0) {
+      // setnodename <ifname>
+      nodename_ = argv[2];
+      return TCL_OK;
+    }
+    if (strcmp(argv[1], "setnodeaddr") == 0) {
+      // setnodeaddr <nodeaddress>
+      nodeaddr_ =  Address::instance().str2addr(argv[2]);
+      return TCL_OK;
+    }
+    //mvhaen -- meant to set the trace file
+    if (strcmp(argv[1], "tracetarget") == 0) {
+      logtarget_ = ( CMUTrace* ) TclObject::lookup(argv[2]);
+      if (logtarget_ == 0)
+          return TCL_ERROR;
+      return TCL_OK;
+    }
+  }
+  else if (4 == argc) {
+    if(strcmp(argv[1], "setip") == 0) {
+      // setip <ifname> <ipaddr>
+      int theif = GetIFID(argv[2]);
+      ifipaddrs_[theif] = string(argv[3]);
+      //fprintf(stderr,"ipaddr is %s\n",ifipaddrs_[theif].c_str());
+      // Also save the binary form of this IP address in a static
+      // (i.e. simulator global) hash map of IP addresses to ns-2
+      // addresses. This lets us track map IP to ns-2 address when
+      // we might need it.
+      global_ipmap_[inet_addr(argv[3])] = nodeaddr_;
+      return TCL_OK;
+    }
+    else if(strcmp(argv[1], "setmac") == 0) {
+      // setmac <ifname> <macaddr>
+      int theif = GetIFID(argv[2]);
+      ifmacaddrs_[theif] = string(argv[3]);
+
+      //fprintf(stderr,"macaddr is %s\n",ifmacaddrs_[theif].c_str());
+
+      // Also save the binary form of this MAC address in a static
+      // (i.e. simulator global) hash map of MAC addresses to ns-2
+      // addresses. This lets us set the destination address in the
+      // ns-2 packet header.
+      MACAddr thismacaddr = MACAddr(string(argv[3]));
+      global_mactonodemap_[thismacaddr] = nodeaddr_;
+      LL* mylink = (LL*) slot_[theif];
+      global_mactonsmacmap_[thismacaddr] = mylink->macDA();
+      return TCL_OK;
+    }
+    else if (strcmp(argv[1], "readhandler") == 0) {
+      char* readreturn = 0;
+      simclick_node_t::curtime = GetSimTime();
+      readreturn = simclick_click_read_handler(this,argv[2],argv[3],0,0);
+      //fprintf(stderr, "readhandler: %s\n",clickretc);
+      if (readreturn) {
+	tcl.resultf("%s", readreturn);
+	free(readreturn);
+	readreturn = 0;
+      }
+      else {
+	tcl.resultf("");
+      }
+      return TCL_OK;
+    }
+  } else if (argc == 5) {
+    if (strcmp(argv[1], "writehandler") == 0) {
+      int clickret;
+      simclick_node_t::curtime = GetSimTime();
+      clickret = simclick_click_write_handler(this, argv[2], argv[3], argv[4]);
+      //fprintf(stderr, "writehandler: %i\n",clickret);
+      tcl.resultf("%i", clickret);
+      return TCL_OK;
+    }
+  }
+
+  return ExtClassifier::command(argc, argv);
+}
+
+
+ClickClassifier::~ClickClassifier() {
+}
+
+int
+ClickClassifier::route(Packet* p) {
+  int result = 0;
+  if (click_initialized_) {
+    unsigned char* data = NULL;
+    int len = ((PacketData*)(p->userdata()))->size();
+    simclick_simpacketinfo simpinfo;
+    hdr_cmn* chdr = HDR_CMN(p);
+    int ifid = chdr->iface_;
+    hdr_ip* iphdr = hdr_ip::access(p);
+    simpinfo.id = chdr->uid();
+    simpinfo.fid = iphdr->flowid();
+    hdr_raw* rhdr = hdr_raw::access(p);
+    int nssubtype = rhdr->subtype;
+    int clicktype = GetClickPacketType(nssubtype);
+    simpinfo.simtype = rhdr->ns_type;
+    unsigned char* pdat = p->accessdata();
+    data = new unsigned char[len];
+	memcpy(data,pdat,len);
+	
+    /*
+     * XXX Destroy packet for now. This may change if we wind
+     * up having to track and reuse ns packets after they've gone through
+     * click.
+     */
+    Packet::free(p);
+    p = NULL;
+
+    simclick_node_t::curtime = GetSimTime();
+    //fprintf(stderr,"Sending packet up to click...\n");
+    simclick_click_send(this,ifid,clicktype,data,len,&simpinfo);
+    delete[] data;
+    data = 0;
+  }
+  else {
+    fprintf(stderr,"No click upcall set!\n");
+  }
+  return result;
+}
+
+string
+ClickClassifier::GetIPAddr(int ifid) {
+  return ifipaddrs_[ifid];
+}
+
+string
+ClickClassifier::GetMACAddr(int ifid) {
+  return ifmacaddrs_[ifid];
+}
+
+string
+ClickClassifier::GetNodeName() {
+  return nodename_;
+}
+
+int
+ClickClassifier::GetNodeAddr()
+{
+  return nodeaddr_;
+}
+
+int
+ClickClassifier::GetIFID(const char *ifname) const
+{
+    int r = -1;
+
+    /*
+     * Provide a mapping between a textual interface name
+     * and the id numbers used. This is mostly for the
+     * benefit of click scripts, i.e. you can still refer to
+     * an interface as, say, /dev/eth0.
+     */
+    if (strstr(ifname, "tap") || strstr(ifname, "tun")) {
+	/*
+	 * A tapX or tunX interface goes to and from the kernel -
+	 * always IFID_KERNELTAP
+	 */
+	r = ExtRouter::IFID_KERNELTAP;
+    } else if (const char *devname = strstr(ifname, "eth")) {
+	/*
+	 * Anything with an "eth" followed by a number is
+	 * a regular interface. Add the number to IFID_FIRSTIF
+	 * to get the handle.
+	 */
+	while (*devname && !isdigit((unsigned char) *devname))
+	    devname++;
+	if (*devname)
+	    r = atoi(devname) + ExtRouter::IFID_FIRSTIF;
+    } else if (const char *devname = strstr(ifname, "drop")) {
+	/*
+	 * Anything with an "drop" followed by a number is
+	 * a special interface on which we place packets that
+	 * get dropped due to MAC layer feedback. Add the number to
+	 * IFID_FIRSTIFDROP to get the handle.
+	 */
+	while (*devname && !isdigit((unsigned char) *devname))
+	    devname++;
+	if (*devname)
+	    r = atoi(devname) + ExtRouter::IFID_FIRSTIFDROP;
+    }
+
+    return r;
+}
+
+/*
+ * Click service methods
+ */
+extern "C" {
+
+static int simstrlcpy(char *buf, int len, const string &s) {
+    if (len) {
+	len--;
+	if ((unsigned) len > s.length())
+	    len = s.length();
+	s.copy(buf, len);
+	buf[len] = '\0';
+    }
+    return 0;
+}
+
+int simclick_sim_command(simclick_node_t *simnode, int cmd, ...)
+{
+    ClickClassifier *cc = static_cast<ClickClassifier *>(simnode);
+    Tcl &tcl = Tcl::instance();
+    va_list val;
+    va_start(val, cmd);
+    int r;
+
+    switch (cmd) {
+	
+      case SIMCLICK_VERSION:
+	r = 0;
+	break;
+
+      case SIMCLICK_SUPPORTS: {
+	  int othercmd = va_arg(val, int);
+	  r = othercmd >= 0 && othercmd <= SIMCLICK_CHANGE_CHANNEL;
+	  break;
+      }
+
+      case SIMCLICK_IFID_FROM_NAME: {
+	  const char *ifname = va_arg(val, const char *);
+	  r = cc->GetIFID(ifname);
+	  break;
+      }
+
+      case SIMCLICK_IPADDR_FROM_NAME: {
+	  const char *ifname = va_arg(val, const char *);
+	  char *buf = va_arg(val, char *);
+	  int len = va_arg(val, int);
+	  int ifid = cc->GetIFID(ifname);
+	  r = simstrlcpy(buf, len, cc->GetIPAddr(ifid));
+	  break;
+      }
+
+      case SIMCLICK_MACADDR_FROM_NAME: {
+	  const char *ifname = va_arg(val, const char *);
+	  char *buf = va_arg(val, char *);
+	  int len = va_arg(val, int);
+	  int ifid = cc->GetIFID(ifname);
+	  r = simstrlcpy(buf, len, cc->GetMACAddr(ifid));
+	  break;
+      }
+
+      case SIMCLICK_SCHEDULE: {
+	  const struct timeval *when = va_arg(val, const struct timeval *);
+	  double simtime = when->tv_sec + (when->tv_usec / 1.0e6);
+	  double simdelay = simtime - Scheduler::instance().clock();
+	  ClickEvent *ev = new ClickEvent;
+	  ev->simnode_ = simnode;
+	  ev->when_ = *when;
+	  Scheduler::instance().schedule(&cc->cevhandler_, ev, simdelay);
+	  r = 0;
+	  break;
+      }
+
+      case SIMCLICK_GET_NODE_NAME: {
+	  char *buf = va_arg(val, char *);
+	  int len = va_arg(val, int);
+	  r = simstrlcpy(buf, len, cc->GetNodeName());
+	  break;
+      }
+
+      case SIMCLICK_IF_READY: {
+	  int ifid = va_arg(val, int);
+	  r = cc->IFReady(ifid);
+	  break;
+      }
+
+      case SIMCLICK_TRACE: {
+	  const char *event = va_arg(val, const char *);
+	  cc->trace("%s", event);
+	  r = 1;
+	  break;
+      }
+
+      case SIMCLICK_GET_NODE_ID:
+	r = cc->GetNodeAddr();
+	break;
+
+      case SIMCLICK_GET_NEXT_PKT_ID:
+	r = cc->GetNextPktID();
+	break;
+
+      case SIMCLICK_CHANGE_CHANNEL: {
+	  int ifid = va_arg(val, int);
+	  int channelid = va_arg(val, int);
+	  char work[128];
+	  sprintf(work, "SwitchChannel %i %i %i", cc->GetNodeAddr(), ifid, channelid);
+	  tcl.eval(work);
+	  r = 0;
+	  break;
+      }
+
+      default:
+	r = -1;
+	break;
+	
+    }
+    
+    va_end(val);
+    return r;
+}
+
+int
+simclick_sim_send(simclick_node_t *simnode,
+		  int ifid,int type, const unsigned char* data,int len,
+		  simclick_simpacketinfo* pinfo) {
+
+  if (NULL == simnode) {
+    return -1;
+  }
+
+  /*
+   * Bail out if we get a bad ifid
+   */
+  if (ExtRouter::IFID_LASTIF < ifid) {
+    return -1;
+  }
+  /*
+   * XXX should probably use RTTI typesafe casts if they are now
+   * reliably implemented across the compilers/platforms we want
+   * to run on.
+   */
+  ClickClassifier* theclassifier = static_cast<ClickClassifier*>(simnode);
+
+  return theclassifier->send_to_if(ifid,type,data,len,pinfo);
+}
+
+}
+
+int
+ClickClassifier::send_to_if(int ifid,int type,const unsigned char* data,
+			 int len,simclick_simpacketinfo* pinfo) {
+  int result = 0;
+
+  /*
+   * Package raw data into an ns-2 format raw packet, then send
+   * it on down the line.
+   */
+
+  Packet* pkt = MakeRawPacket(type,ifid,data,len,pinfo);
+  //fprintf(stderr,"simclickid == %d\n",simclickid);
+  recv(pkt,0);
+
+  return result;
+}
+
+int
+ClickClassifier::IFReady(int ifid) {
+  NsObject* target = NULL;
+  int ready = 0;
+
+  // XXX assumes direct ifid->slot mapping
+  if (ExtRouter::IFID_KERNELTAP == ifid) {
+    return 1;
+  }
+
+  target = slot_[ifid];
+  if (target) {
+    LLExt* llext = (LLExt*) target;
+    ready = llext->ready();
+  }
+  else {
+    ready = 0;
+    fprintf(stderr,"ERROR: network interface does not exist\n");
+  }
+
+  return ready;
+}
+
+int
+ClickClassifier::GetNSSubtype(int type) {
+  switch (type) {
+  case SIMCLICK_PTYPE_ETHER:
+    return hdr_raw::ETHERNET;
+
+  case SIMCLICK_PTYPE_IP:
+    return hdr_raw::IP;
+
+  default:
+    return hdr_raw::NONE;
+  }
+
+  return hdr_raw::NONE;
+}
+
+int
+ClickClassifier::GetClickPacketType(int nssubtype) {
+  switch (nssubtype) {
+  case hdr_raw::ETHERNET:
+    return SIMCLICK_PTYPE_ETHER;
+
+  case hdr_raw::IP:
+    return SIMCLICK_PTYPE_IP;
+
+  case hdr_raw::MADWIFI:
+    return SIMCLICK_PTYPE_ETHER;
+  
+  default:
+    return SIMCLICK_PTYPE_UNKNOWN;
+  }
+
+  return SIMCLICK_PTYPE_UNKNOWN;
+}
+
+// XXX 
+// Normally I'd bitterly complain about code like this. However,
+// I don't really want to worry about annoying differences
+// between IP header files across different platforms, and I
+// want to get this code up and running ASAP. So... I'm defining
+// a few things here to handle the minimal packet cracking I
+// need to do to create raw packets. If more complicated
+// packet munging is called for, something better should be created.
+#define NS_ETHER_OFFSET_DADDR 0
+#define NS_ETHER_OFFSET_SADDR 6
+#define NS_ETHER_HEADER_SIZE 14
+#define NS_80211_OFFSET_DADDR 4
+#define NS_80211_OFFSET_SADDR 10
+
+void
+ClickClassifier::LinkLayerFailedCallback(Packet* p, void* arg) {
+  // Hit the callback and then free the packet
+  ((ClickClassifier*)arg)->LinkLayerFailed(p);
+  Packet::free(p);
+}
+
+void
+ClickClassifier::LinkLayerFailed(Packet* p) {
+  //fprintf(stderr,"XXX Lost a packet!!!\n");
+  if (click_initialized_) {
+    unsigned char* data = NULL;
+    int len = ((PacketData*)(p->userdata()))->size();
+    simclick_simpacketinfo simpinfo;
+    hdr_cmn* chdr = HDR_CMN(p);
+    int ifid = chdr->iface_ + IFID_LASTIF;
+    hdr_ip* iphdr = hdr_ip::access(p);
+    simpinfo.id = chdr->uid();
+    simpinfo.fid = iphdr->flowid();
+    hdr_raw* rhdr = hdr_raw::access(p);
+    int nssubtype = rhdr->subtype;
+    int clicktype = GetClickPacketType(nssubtype);
+    unsigned char* pdat = p->accessdata();
+    data = new unsigned char[len];
+    memcpy(data,pdat,len);
+    simclick_node_t::curtime = GetSimTime();
+    //fprintf(stderr,"Sending packet up to click...\n");
+    simclick_click_send(this,ifid,clicktype,data,len,&simpinfo);
+    delete[] data;
+    data = 0;
+  }
+  else {
+    fprintf(stderr,"No click upcall set!\n");
+  }
+}
+
+Packet*
+ClickClassifier::MakeRawPacket(int type,int ifid,const unsigned char* data,
+			       int len,simclick_simpacketinfo* pinfo){
+  Packet* pkt = Packet::alloc(len);
+  /*
+   * Shovel raw data into packet
+   */
+  hdr_raw* rhdr = hdr_raw::access(pkt);
+  // nletor -- check if it is a wireless packet and threat it accordingly
+  click_wifi_extra *ceh = (click_wifi_extra *) data;
+  if (ceh->magic == WIFI_EXTRA_MAGIC) {
+	rhdr->subtype = hdr_raw::MADWIFI;  
+  } else {
+  rhdr->subtype = GetNSSubtype(type);
+  }
+  unsigned char* pdat = pkt->accessdata();
+  memcpy(pdat,data,len);
+
+  /*
+   * Set some of the packet header stuff ns-2 wants
+   */
+  struct hdr_cmn* chdr = HDR_CMN(pkt);
+  chdr->iface() = ifid;
+  chdr->ptype() = PT_RAW;
+  chdr->size() = len;
+  if (pinfo->id >= 0) {
+    chdr->uid() = pinfo->id;
+  }
+  else {
+    chdr->uid() = Agent::getnextuid();
+  }
+  rhdr->ns_type = (-1 == pinfo->simtype) ? PT_RAW : pinfo->simtype;
+  chdr->xmit_failure_ = LinkLayerFailedCallback;
+  chdr->xmit_failure_data_ = (void*)this;
+
+  hdr_ip* iphdr = hdr_ip::access(pkt);
+  iphdr->flowid() = 0;
+  if (pinfo->fid >= 0) {
+    iphdr->flowid() = pinfo->fid;
+  }
+
+  /*
+   * A packet coming in from click on the kernel tap device is
+   * considered to be going up into the node, on any other device
+   * going down out of it.
+   */
+  if (ExtRouter::IFID_KERNELTAP == ifid) {
+    chdr->direction() = hdr_cmn::UP;
+  }
+  else {
+    chdr->direction() = hdr_cmn::DOWN;
+    // Going out to a network adapter, and we're already 
+    // ethernet encapsulated. The ns-2 interface code will
+    // tack on ethernet header overhead as well, so we subtract
+    // it out of our simulated size here to avoid actual packet
+    // size inflation
+    if (hdr_raw::ETHERNET == rhdr->subtype) {
+      chdr->size() -= NS_ETHER_HEADER_SIZE;
+    } else if (hdr_raw::MADWIFI == rhdr->subtype) {	
+	  // nsmadwifi
+		chdr->size() -= sizeof(click_wifi_extra);
+		chdr->size() -= sizeof(click_wifi);
+    }
+  }
+
+  // If we've got ethernet encapsulation, translate mac address
+  // to ns address. Otherwise we're SOL.
+  struct hdr_mac* mhdr = HDR_MAC(pkt);
+  if (hdr_raw::ETHERNET == rhdr->subtype) {
+    MACAddr dmac(data + NS_ETHER_OFFSET_DADDR);
+    MACAddr smac(data + NS_ETHER_OFFSET_SADDR);
+    if (dmac.is_broadcast()) {
+      mhdr->macDA_ = MAC_BROADCAST;
+    }
+    else {
+      mhdr->macDA_ = global_mactonsmacmap_[dmac];
+      //fprintf(stderr,"XXX using real MAC: %s -> %d\n",dmac.to_string().c_str(),mhdr->macDA_);
+    }
+    mhdr->macSA_ = global_mactonsmacmap_[smac];
+    chdr->next_hop_ = global_mactonodemap_[dmac];
+    chdr->prev_hop_ = global_mactonodemap_[smac];
+  } else if (hdr_raw::MADWIFI == rhdr->subtype) {
+  	//TODO
+	MACAddr dmac(data + NS_ETHER_OFFSET_DADDR + sizeof(click_wifi_extra) + 4); // destination address (STA,AP whatever)
+    MACAddr smac(data + NS_ETHER_OFFSET_SADDR + sizeof(click_wifi_extra) + 4); // source address (STA,AP whatever)
+	if (dmac.is_broadcast()) {
+      mhdr->macDA_ = MAC_BROADCAST;
+    } else {
+      mhdr->macDA_ = global_mactonsmacmap_[dmac];
+    }
+    mhdr->macSA_ = global_mactonsmacmap_[smac];
+    chdr->next_hop_ = global_mactonodemap_[dmac];
+    chdr->prev_hop_ = global_mactonodemap_[smac];
+	  
+  } else {
+    //fprintf(stderr,"XXX using broadcast mac XXX\n");
+    mhdr->macDA_ = MAC_BROADCAST;
+  }
+
+  // Got an IP packet? Must have come from click, and therefore
+  // the next hop is us.
+  if ((ExtRouter::IFID_KERNELTAP == ifid) && (hdr_raw::IP == rhdr->subtype)) {
+    chdr->next_hop() = nodeaddr_;
+  }
+
+  return pkt;
+}
+
+struct timeval
+ClickClassifier::GetSimTime() {
+  struct timeval curtime;
+  double ns2time = Scheduler::instance().clock();
+  double fracp,intp;
+  fracp = modf(ns2time,&intp);
+  curtime.tv_sec = (long) intp;
+  curtime.tv_usec = (long) (fracp * 1.0e6 + 0.5); 
+  return curtime;
+}
+
+void
+ClickClassifier::trace(char* fmt, ...)
+{
+	va_list ap;
+
+	if ( !logtarget_ ) {
+		printf( "ClickClassifier: need to configure tracetarget\n" );
+		return ;
+	}
+	va_start( ap, fmt );
+	vsprintf( logtarget_->pt_->buffer(), fmt, ap );
+	logtarget_->pt_->dump();
+	va_end( ap );
+}
+
+int
+ClickClassifier::GetNextPktID()
+{
+	return Agent::getnextuid();
+}
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/classifier/classifier-click.h ns-2.30/classifier/classifier-click.h
--- ns-2.30-pure/classifier/classifier-click.h	1969-12-31 16:00:00.000000000 -0800
+++ ns-2.30/classifier/classifier-click.h	2007-09-11 22:10:24.000000000 -0700
@@ -0,0 +1,169 @@
+/*
+ *
+ * This might not seem like a regular classifier, and it isn't.
+ * It essentially has a fixed interface ID which it sends along
+ * with its packet to the ClickNode it lives on, the idea being
+ * that the Click subsystem will be the thing which actually
+ * does the classifying, not the classifier.
+ */
+
+/*****************************************************************************
+ *  Copyright 2002, Univerity of Colorado at Boulder.                        *
+ *                                                                           *
+ *                        All Rights Reserved                                *
+ *                                                                           *
+ *  Permission to use, copy, modify, and distribute this software and its    *
+ *  documentation for any purpose other than its incorporation into a        *
+ *  commercial product is hereby granted without fee, provided that the      *
+ *  above copyright notice appear in all copies and that both that           *
+ *  copyright notice and this permission notice appear in supporting         *
+ *  documentation, and that the name of the University not be used in        *
+ *  advertising or publicity pertaining to distribution of the software      *
+ *  without specific, written prior permission.                              *
+ *                                                                           *
+ *  UNIVERSITY OF COLORADO DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS      *
+ *  SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND        *
+ *  FITNESS FOR ANY PARTICULAR PURPOSE.  IN NO EVENT SHALL THE UNIVERSITY    *
+ *  OF COLORADO BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL         *
+ *  DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA       *
+ *  OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER        *
+ *  TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR         *
+ *  PERFORMANCE OF THIS SOFTWARE.                                            *
+ *                                                                           *
+ ****************************************************************************/
+
+#ifndef ns_classifier_click_h
+#define ns_classifier_click_h
+
+#include "object.h"
+#include "cmu-trace.h"
+
+class Packet;
+
+
+class ClickEvent : public Event {
+ public:
+  simclick_node_t *simnode_;
+  // Store an extra copy of the call time in sec/usec format.
+  // This is to sidestep some roundoff errors which occured
+  // when going back and forth between sec/usec and doubles.
+  struct timeval when_;
+};
+
+class ClickEventHandler : public Handler {
+ public:
+  virtual void handle(Event* event);
+};
+
+class MACAddr {
+ public:
+  MACAddr() {
+    memset(macaddr_,0,6);
+  }
+  explicit MACAddr(const string straddr) {
+      unsigned crap[6];
+      sscanf(straddr.c_str(), "%02X:%02X:%02X:%02X:%02X:%02X", &crap[0],
+	     &crap[1], &crap[2], &crap[3], &crap[4], &crap[5]);
+      for (int i = 0; i < 6; i++)
+	  macaddr_[i] = crap[i];
+  }  
+  explicit MACAddr(const unsigned char* rawaddr) {
+    memcpy(macaddr_,rawaddr,6);
+  }
+  bool operator==(const MACAddr& rhs) const {
+    return(0 == memcmp(macaddr_,rhs.macaddr_,6));
+  }
+
+  bool is_broadcast() {
+    for (int i=0;i<6;i++) {
+      if (macaddr_[i] != 0xff) {
+	return false;
+      }
+    }
+    return true;
+  }
+
+  string to_string() {
+    char tmp[64];
+    sprintf(tmp, "%02X:%02X:%02X:%02X:%02X:%02X", macaddr_[0],
+	   macaddr_[1], macaddr_[2], macaddr_[3], macaddr_[4],
+	   macaddr_[5]);
+
+    return string(tmp);
+  }
+  unsigned char macaddr_[6];
+};
+
+namespace std {
+template<>
+struct less<MACAddr> {
+  bool operator()(const MACAddr& l, const MACAddr& r) const {
+    // Treat MAC as a big old integer...
+    uint32_t leftu = *((uint32_t*)(l.macaddr_));
+    uint32_t rightu = *((uint32_t*)(r.macaddr_));
+    uint16_t leftl = *((uint16_t*)(l.macaddr_+4));
+    uint16_t rightl = *((uint16_t*)(r.macaddr_+4));
+    
+    // Check the upper bytes first, if those are equal check lower
+    if (leftu < rightu) {
+      return true;
+    }
+    else if (leftu == rightu) {
+      return (leftl < rightl);
+    }
+    return false;
+  }
+};
+}
+
+class ClickClassifier : public ExtClassifier, public ExtRouter,
+    public simclick_node_t {
+ public:
+  ClickClassifier();
+  virtual ~ClickClassifier();
+  virtual int command(int argc, const char*const* argv);
+  
+  /*
+   * Stuff to handle click requests
+   */
+ public:
+  virtual int send_to_if(int ifid,int type,const unsigned char* data,
+			 int len,simclick_simpacketinfo* pinfo);
+  ClickEventHandler cevhandler_;
+
+  // ExtRouter method
+  virtual int route(Packet* p);
+
+  string GetIPAddr(int ifid);
+  string GetMACAddr(int ifid);
+  string GetNodeName();
+  int GetNodeAddr(); /// ToNSTrace
+  int IFReady(int ifid);
+  static void LinkLayerFailedCallback(Packet* p, void* arg);
+  void LinkLayerFailed(Packet* p);
+  void trace(char* fmt, ...); /// ToNSTrace
+  int GetNextPktID(); /// ToNSTrace
+  int GetIFID(const char *) const;
+ protected:
+  int GetNSSubtype(int clicktype);
+  int GetClickPacketType(int nssubtype);
+  struct timeval GetSimTime();
+  Packet* MakeRawPacket(int type,int ifid,const unsigned char* data,int len,
+			simclick_simpacketinfo* pinfo);
+  typedef map<int,string> STRmap;
+  map<int,string> ifipaddrs_;
+  map<int,string> ifmacaddrs_;
+  static map<MACAddr,int> global_mactonodemap_;
+  static map<MACAddr,int> global_mactonsmacmap_;
+  static map<u_int32_t,int> global_ipmap_;
+  string nodename_;
+  int nodeaddr_;
+  bool click_initialized_;
+
+
+
+  //mvhaen -- meant to allow a click router to add to an ns2 trace file.
+  Trace *logtarget_;
+};
+
+#endif
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/classifier/classifier-ext.cc ns-2.30/classifier/classifier-ext.cc
--- ns-2.30-pure/classifier/classifier-ext.cc	1969-12-31 16:00:00.000000000 -0800
+++ ns-2.30/classifier/classifier-ext.cc	2007-09-11 21:04:07.000000000 -0700
@@ -0,0 +1,160 @@
+/*
+ * classifier-ext.cc
+ * Base external router classifier
+ */
+
+/*****************************************************************************
+ *  Copyright 2002, Univerity of Colorado at Boulder.                        *
+ *                                                                           *
+ *                        All Rights Reserved                                *
+ *                                                                           *
+ *  Permission to use, copy, modify, and distribute this software and its    *
+ *  documentation for any purpose other than its incorporation into a        *
+ *  commercial product is hereby granted without fee, provided that the      *
+ *  above copyright notice appear in all copies and that both that           *
+ *  copyright notice and this permission notice appear in supporting         *
+ *  documentation, and that the name of the University not be used in        *
+ *  advertising or publicity pertaining to distribution of the software      *
+ *  without specific, written prior permission.                              *
+ *                                                                           *
+ *  UNIVERSITY OF COLORADO DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS      *
+ *  SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND        *
+ *  FITNESS FOR ANY PARTICULAR PURPOSE.  IN NO EVENT SHALL THE UNIVERSITY    *
+ *  OF COLORADO BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL         *
+ *  DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA       *
+ *  OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER        *
+ *  TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR         *
+ *  PERFORMANCE OF THIS SOFTWARE.                                            *
+ *                                                                           *
+ ****************************************************************************/
+
+#include <stdlib.h>
+#include "config.h"
+#include "packet.h"
+#include "ip.h"
+#include "extrouter.h"
+#include "classifier.h"
+#include "classifier-hash.h"
+#include "classifier-ext.h"
+
+
+static class ExtClassifierClass : public TclClass {
+public:
+  ExtClassifierClass() : TclClass("Classifier/Ext") {}
+  TclObject* create(int, const char*const*) {
+    return (new ExtClassifier());
+  }
+} class_ext_classifier;
+
+
+ExtClassifier::ExtClassifier() {
+  extrouter_ = NULL;
+}
+
+ExtClassifier::~ExtClassifier() {
+}
+
+int ExtClassifier::command(int argc, const char*const* argv) {
+  int result = TCL_OK;
+  Tcl& tcl = Tcl::instance();
+
+  result = Classifier::command(argc,argv);
+  return result;
+}
+
+void ExtClassifier::recv(Packet* p, Handler* h) {
+  /*
+   * Use the interface and direction to decide what to do. If the
+   * packet is going down and came from an agent, it needs to
+   * go to the external router for processing. If coming up
+   * from the external router it needs to be sent to the appropriate
+   * local agent for processing. Otherwise, it just goes either down
+   * to the ns network interface or up to the external router.
+   */
+  struct hdr_cmn* hdr = HDR_CMN(p);
+  int extid = hdr->iface();
+  if (hdr_cmn::DOWN == hdr->direction()) {
+    if (ExtRouter::IFID_KERNELTAP == extid) {
+      /*
+       * Packet came from an agent - needs to go to the external router
+       */
+      //fprintf(stderr,"To external router\n");
+      if (NULL != extrouter_) {
+	extrouter_->route(p);
+      }
+      else {
+	fprintf(stderr,"No external router set!\n");
+      }
+    }
+    else {
+      /*
+       * Packet came from the external router - needs to go to the net
+       */
+      int cl = classify(p);
+      if ((cl >= 0) && (cl <= maxslot_)) {
+	NsObject* target = NULL;
+	target = slot_[cl];
+	if (NULL == target) {
+	  /*
+	   * "Drop" the packet
+	   */
+	  //puts("Dropping the packet");
+	  Packet::free(p);
+	}
+	else {
+	  //puts("Sending packet out!!!");
+	  target->recv(p,h);
+	}
+      }
+      else {
+	fprintf(stderr,"Invalid slot: %d maxslot is %d\n",cl,maxslot_);
+      }
+    }
+  }
+  else if (hdr_cmn::UP == hdr->direction()) {
+    if (ExtRouter::IFID_KERNELTAP == extid) {
+      /*
+       * Packet came from the external router - needs to go to an agent.
+       */
+      NsObject* target = NULL;
+      target = slot_[0];
+      if (NULL == target) {
+	/*
+	 * "Drop" the packet
+	 */
+	//fprintf(stderr,"Dropping the packet\n");
+	Packet::free(p);
+      }
+      else {
+	//fprintf(stderr,"Packet going to agent\n");
+	target->recv(p,h);
+      }
+
+      //fprintf(stderr,"Hey! Send packets to agents!\n");
+    }
+    else {
+      /*
+       * Packet came from the net - needs to go to the external router
+       */
+      if (NULL != extrouter_) {
+	extrouter_->route(p);
+      }
+    }
+  }
+  else {
+    fprintf(stderr,"No packet direction set...");
+  }
+}
+
+int
+ExtClassifier::classify(Packet* p) {
+  struct hdr_cmn* hdr = HDR_CMN(p);
+  int extid = hdr->iface();
+
+  /*
+   * Simple  mapping between extid and slot number.
+   * No real reason to make things more complicated right now.
+   */
+  int slot = extid;
+  return slot;
+}
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/classifier/classifier-ext.h ns-2.30/classifier/classifier-ext.h
--- ns-2.30-pure/classifier/classifier-ext.h	1969-12-31 16:00:00.000000000 -0800
+++ ns-2.30/classifier/classifier-ext.h	2007-09-11 21:04:07.000000000 -0700
@@ -0,0 +1,57 @@
+/*
+ *
+ * This classifier is intended for use with external routers bolted
+ * on to ns-2, e.g. Click. It uses a combination of the packet direction
+ * and interface ID to decide where to send stuff.
+ */
+
+/*****************************************************************************
+ *  Copyright 2002, Univerity of Colorado at Boulder.                        *
+ *                                                                           *
+ *                        All Rights Reserved                                *
+ *                                                                           *
+ *  Permission to use, copy, modify, and distribute this software and its    *
+ *  documentation for any purpose other than its incorporation into a        *
+ *  commercial product is hereby granted without fee, provided that the      *
+ *  above copyright notice appear in all copies and that both that           *
+ *  copyright notice and this permission notice appear in supporting         *
+ *  documentation, and that the name of the University not be used in        *
+ *  advertising or publicity pertaining to distribution of the software      *
+ *  without specific, written prior permission.                              *
+ *                                                                           *
+ *  UNIVERSITY OF COLORADO DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS      *
+ *  SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND        *
+ *  FITNESS FOR ANY PARTICULAR PURPOSE.  IN NO EVENT SHALL THE UNIVERSITY    *
+ *  OF COLORADO BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL         *
+ *  DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA       *
+ *  OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER        *
+ *  TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR         *
+ *  PERFORMANCE OF THIS SOFTWARE.                                            *
+ *                                                                           *
+ ****************************************************************************/
+
+#ifndef ns_classifier_ext_h
+#define ns_classifier_ext_h
+
+#include "object.h"
+
+class Packet;
+
+class ExtClassifier : public Classifier {
+ public:
+	ExtClassifier();
+	virtual ~ExtClassifier();
+	
+	virtual void recv(Packet* p, Handler* h);
+
+	void setExtRouter(ExtRouter* ext) {extrouter_ = ext;}
+	ExtRouter* getExtRouter() {return extrouter_;}
+
+	virtual int classify(Packet*);
+
+ protected:
+	virtual int command(int argc, const char*const* argv);
+	ExtRouter* extrouter_;
+};
+
+#endif
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/classifier/packet_anno.h ns-2.30/classifier/packet_anno.h
--- ns-2.30-pure/classifier/packet_anno.h	1969-12-31 16:00:00.000000000 -0800
+++ ns-2.30/classifier/packet_anno.h	2007-09-11 21:04:07.000000000 -0700
@@ -0,0 +1,17 @@
+#ifndef PACKET_ANNO_H
+#define PACKET_ANNO_H
+
+/* Define macros for declaring packed structures. */
+#ifdef __GNUC__
+#define CLICK_PACKED_STRUCTURE(open, close) open close __attribute__((packed))
+#define CLICK_SIZE_PACKED_STRUCTURE(open, close) open close __attribute__((packed))
+#define CLICK_SIZE_PACKED_ATTRIBUTE __attribute__((packed))
+#else
+#define CLICK_PACKED_STRUCTURE(open, close) _Cannot_pack_structure__Use_GCC
+#define CLICK_SIZE_PACKED_STRUCTURE(open, close) open close
+#define CLICK_SIZE_PACKED_ATTRIBUTE
+#endif
+
+#include <clicknet/wifi.h>
+
+#endif /* PACKET_ANNO_H */
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/common/agent.cc ns-2.30/common/agent.cc
--- ns-2.30-pure/common/agent.cc	2006-09-24 22:11:00.000000000 -0700
+++ ns-2.30/common/agent.cc	2007-09-11 21:04:07.000000000 -0700
@@ -43,6 +43,7 @@
 #include "config.h"
 #include "agent.h"
 #include "ip.h"
+#include "tcp.h"
 #include "flags.h"
 #include "address.h"
 #include "app.h"
@@ -51,7 +52,14 @@
 #include "nix/nixnode.h"
 #endif //HAVE_STL
 
+#include "rawpacket.h"
+#include "extrouter.h"
 
+#include <click/config.h>
+#include <click/confparse.hh>
+#include <clicknet/ip.h>
+#include <clicknet/tcp.h>
+#include <clicknet/udp.h>
 
 #ifndef min
 #define min(a, b) (((a) < (b)) ? (a) : (b))
@@ -70,7 +78,7 @@
 Agent::Agent(packet_t pkttype) : 
 	size_(0), type_(pkttype), 
 	channel_(0), traceName_(NULL),
-	oldValueList_(NULL), app_(0), et_(0)
+	oldValueList_(NULL), app_(0), rawcvt_(false), et_(0)
 {
 }
 
@@ -170,6 +178,24 @@
 		} else if (strcmp(argv[1], "set_pkttype") == 0) {
 			set_pkttype(packet_t(atoi(argv[2])));
 			return (TCL_OK);
+		} else if (strcmp(argv[1], "set-srcip") == 0) {
+			if (!Click::cp_ip_address(Click::String(argv[2]), (unsigned char *) &srcip_))
+				return TCL_ERROR;
+			return (TCL_OK);
+		} else if (strcmp(argv[1], "set-srcport") == 0) {
+			srcport_ = atoi(argv[2]);
+			return (TCL_OK);
+		}
+		else if (strcmp(argv[1], "set-destip") == 0) {
+			if (!Click::cp_ip_address(Click::String(argv[2]), (unsigned char *) &destip_))
+				return TCL_ERROR;
+			return (TCL_OK);
+		} else if (strcmp(argv[1], "set-destport") == 0) {
+			destport_ = atoi(argv[2]);
+			return (TCL_OK);
+		} else if (strcmp(argv[1],"rawconvert") == 0) {
+			rawcvt_ = atoi(argv[2]);
+			return(TCL_OK);
 		}
 	}
 	else if (argc == 4) {	
@@ -438,10 +464,140 @@
 {
 }
 
+bool
+Agent::toraw(Packet* p) {
+	// XXX What about AppData and other such junk? Need to
+	// figure out if anyone actually sends payloads.
+	// XXX What about TCP option headers? Won't work with SACK right now
+	bool result = false;
+	struct hdr_tcp* htcp = HDR_TCP(p);
+	struct hdr_ip* hip = HDR_IP(p);
+	struct hdr_cmn* hcmn = HDR_CMN(p);
+	struct hdr_raw* hraw = hdr_raw::access(p);
+	int packetlen = sizeof(click_ip) + hcmn->size_;
+	int paylen = hcmn->size_;
+	unsigned char* pdat = 0;
+
+	// build packet length
+	if (hcmn->ptype_ == PT_ACK || hcmn->ptype_ == PT_TCP)
+		packetlen += sizeof(click_tcp);
+	else if (hcmn->ptype_ == PT_CBR)
+		packetlen += sizeof(click_udp);
+	else
+		return false;
+
+	// build packet
+	p->allocdata(packetlen);
+	pdat = p->accessdata();
+	memset(pdat, 0, packetlen);
+
+	// build IP header
+	click_ip *ip = (click_ip *) pdat;
+	ip->ip_v = 4;
+	ip->ip_hl = sizeof(click_ip) >> 2;
+	ip->ip_len = htons(packetlen);
+	ip->ip_id = htons(ipseq_);
+	ip->ip_p = (hcmn->ptype_ == PT_CBR ? IP_PROTO_UDP : IP_PROTO_TCP);
+	ip->ip_src.s_addr = srcip_;
+	ip->ip_dst.s_addr = destip_;
+	ip->ip_tos = 0;
+	ip->ip_off = 0;
+	ip->ip_ttl = hip->ttl_;
+	ip->ip_sum = 0;
+#if HAVE_FAST_CHECKSUM
+	ip->ip_sum = ip_fast_csum((unsigned char *)ip, sizeof(click_ip) >> 2);
+#else
+	ip->ip_sum = click_in_cksum((unsigned char *)ip, sizeof(click_ip));
+#endif
+
+	// build TCP/UDP header and payload
+	if (paylen > 0)
+		memset(pdat + (packetlen - paylen), 'A', paylen);
+	
+	if (hcmn->ptype_ == PT_CBR) {
+		click_udp *udp = (click_udp *) (ip + 1);
+		udp->uh_sport = htons(srcport_);
+		udp->uh_dport = htons(destport_);
+		uint16_t len = packetlen - sizeof(click_ip);
+		udp->uh_ulen = htons(len); 
+		udp->uh_sum = 0;
+		unsigned csum = click_in_cksum((unsigned char *)udp, len);
+		udp->uh_sum = click_in_cksum_pseudohdr(csum, ip, len);
+	} else {
+		click_tcp *tcp = (click_tcp *) (ip + 1);
+		tcp->th_sport = htons(srcport_);
+		tcp->th_dport = htons(destport_);
+		tcp->th_seq = htonl(htcp->seqno_);
+		tcp->th_ack = htonl(htcp->ackno_);
+		tcp->th_flags2 = 0;
+		tcp->th_off = sizeof(click_tcp) >> 2;
+		tcp->th_flags = htcp->tcp_flags_;
+		if (hcmn->ptype_ == PT_ACK)
+			tcp->th_flags |= TH_ACK;
+		tcp->th_win = 0; /* XXX */
+		tcp->th_urp = 0;
+		tcp->th_sum = 0;
+		uint16_t len = packetlen - sizeof(click_ip);
+		unsigned csum = click_in_cksum((unsigned char *)tcp, len);
+		tcp->th_sum = click_in_cksum_pseudohdr(csum, ip, len);
+	}
+
+	hcmn->direction() = hdr_cmn::DOWN;
+	hcmn->iface() = ExtRouter::IFID_KERNELTAP;
+	hraw->subtype = hdr_raw::IP;
+	hraw->ns_type = hcmn->ptype();
+	hcmn->ptype() = PT_RAW;
+	hcmn->size() = packetlen;
+	ipseq_++;
+
+	return result;
+}
+
+bool
+Agent::fromraw(Packet* p) {
+	struct hdr_tcp* htcp = HDR_TCP(p);
+	struct hdr_ip* hip = HDR_IP(p);
+	struct hdr_cmn* hcmn = HDR_CMN(p);
+	struct hdr_flags* hflg = hdr_flags::access(p);
+	struct click_ip* ip = 0;
+	struct click_tcp* tcp = 0;
+	struct click_udp* udp = 0;
+	unsigned char* pdat = 0;
+	bool result = false;
+
+	if (PT_RAW != hcmn->ptype()) return false;
+
+	pdat = p->accessdata();
+	ip = (click_ip*)pdat;
+
+	switch (ip->ip_p) {
+	case IPPROTO_TCP:
+		tcp = (click_tcp*)(pdat + (ip->ip_hl << 2));
+		htcp->seqno_ = ntohl(tcp->th_seq);
+		htcp->ackno_ = ntohl(tcp->th_ack);
+		htcp->tcp_flags_ = tcp->th_flags;
+		htcp->hlen_ = (ip->ip_hl << 2) + (tcp->th_off << 2);
+		hcmn->ptype_ = (tcp->th_flags & TH_ACK) ? PT_ACK : PT_TCP;
+		result = true;
+		break;
+	case IPPROTO_UDP:
+		hcmn->ptype_ = PT_CBR;
+		result = true;
+		break;
+	default:
+		result = false;
+		break;
+	}
+
+	return result;
+}
+
 void Agent::recv(Packet* p, Handler*)
 {
-	if (app_)
+	if (app_) {
+		if (rawcvt_) fromraw(p);
 		app_->recv(hdr_cmn::access(p)->size());
+	}
 	/*
 	 * didn't expect packet (or we're a null agent?)
 	 */
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/common/agent.h ns-2.30/common/agent.h
--- ns-2.30-pure/common/agent.h	2006-09-24 22:10:59.000000000 -0700
+++ ns-2.30/common/agent.h	2007-09-11 21:04:07.000000000 -0700
@@ -43,6 +43,7 @@
 #include "ns-process.h"
 #include "app.h"
 //#include "basetrace.h"
+
 #define TIME_FORMAT "%.15g"
 // TIME_FORMAT is in basetrace.h, but including that header leads to problems
 
@@ -77,7 +78,14 @@
 	//added for edrop tracing - ratul
 	void recvOnly(Packet *) {};
 
-	void send(Packet* p, Handler* h) { target_->recv(p, h); }
+	void send(Packet* p, Handler* h) { 
+	  if (rawcvt_) toraw(p);
+	  target_->recv(p, h);
+	}
+
+        bool toraw(Packet* p);
+	bool fromraw(Packet* p);
+
 	virtual void timeout(int tno);
 
 	virtual void sendmsg(int sz, AppData*, const char* flags = 0);
@@ -102,6 +110,7 @@
 	inline nsaddr_t& dport() { return dst_.port_; }
 	void set_pkttype(packet_t pkttype) { type_ = pkttype; }
 	inline packet_t get_pkttype() { return type_; }
+	static int getnextuid() { return uidcnt_++; }
 
  protected:
 	int command(int argc, const char*const* argv);
@@ -135,6 +144,18 @@
 	OldValue *oldValueList_; 
 
 	Application *app_;		// ptr to application for callback
+	
+	// If this is set to "true" convert packets to and from
+	// raw format as they go to and from attached applications.
+	bool rawcvt_;
+	
+	// We also need to keep src and dest ip and port addresses
+	// around if we're going to use raw packets.
+	u_int16_t ipseq_;
+	u_long srcip_;
+	u_short srcport_;
+	u_long destip_;
+	u_short destport_;
 
 	virtual void trace(TracedVar *v);
 	void deleteAgentTrace();
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/common/clicknode.cc ns-2.30/common/clicknode.cc
--- ns-2.30-pure/common/clicknode.cc	1969-12-31 16:00:00.000000000 -0800
+++ ns-2.30/common/clicknode.cc	2007-09-11 21:04:07.000000000 -0700
@@ -0,0 +1,132 @@
+/*
+ * clicknode.cc 
+ * Base class for nsclick nodes.
+ *
+ * XXX Should probably move a bunch of the functionality in this
+ * class to a superclass, i.e. something called ExtNode, since a lot
+ * of this should work with most Ext routing stuff, not just click.
+ *
+ */
+
+/*****************************************************************************
+ *  Copyright 2002, Univerity of Colorado at Boulder.                        *
+ *                                                                           *
+ *                        All Rights Reserved                                *
+ *                                                                           *
+ *  Permission to use, copy, modify, and distribute this software and its    *
+ *  documentation for any purpose other than its incorporation into a        *
+ *  commercial product is hereby granted without fee, provided that the      *
+ *  above copyright notice appear in all copies and that both that           *
+ *  copyright notice and this permission notice appear in supporting         *
+ *  documentation, and that the name of the University not be used in        *
+ *  advertising or publicity pertaining to distribution of the software      *
+ *  without specific, written prior permission.                              *
+ *                                                                           *
+ *  UNIVERSITY OF COLORADO DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS      *
+ *  SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND        *
+ *  FITNESS FOR ANY PARTICULAR PURPOSE.  IN NO EVENT SHALL THE UNIVERSITY    *
+ *  OF COLORADO BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL         *
+ *  DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA       *
+ *  OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER        *
+ *  TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR         *
+ *  PERFORMANCE OF THIS SOFTWARE.                                            *
+ *                                                                           *
+ ****************************************************************************/
+
+#include <math.h>
+#include <stdlib.h>
+#include <string.h>
+#include <ctype.h>
+
+#include "connector.h"
+#include "delay.h"
+#include "packet.h"
+#include "agent.h"
+#include "rawpacket.h"
+#include "random.h"
+#include "trace.h"
+#include "address.h"
+
+#include "arp.h"
+#include "topography.h"
+#include "ll.h"
+#include "mac.h"
+#include "propagation.h"
+#include "mobilenode.h"
+#include "phy.h"
+#include "wired-phy.h"
+#include "god.h"
+#include "extrouter.h"
+#include "extclickrouter.h"
+#include <sys/time.h>
+#include <click/simclick.h>
+#include "clicknode.h"
+
+
+static class ClickNodeClass : public TclClass {
+public:
+  ClickNodeClass() : TclClass("Node/MobileNode/ClickNode") {}
+  TclObject* create(int, const char*const*) {
+    ClickNode* thenode = new ClickNode;
+    if (!thenode) {
+      return NULL;
+    }
+
+    /*
+     * Do post-constructor initialization.
+     */
+    int result = thenode->cinit();
+    if (0 > result) {
+      delete thenode;
+      thenode = NULL;
+    }
+
+    return thenode;
+  }
+} class_clicknode;
+
+
+ClickNode::ClickNode(void) {
+}
+
+int
+ClickNode::cinit() {
+  int result = 0;
+  return result;
+}
+
+int
+ClickNode::command(int argc, const char*const* argv)
+{
+  Tcl& tcl = Tcl::instance();
+  if (2 == argc) {
+  }
+  else if (3 == argc) {
+    if(strcmp(argv[1], "addif") == 0) {
+      Phy* phyp = (Phy*)TclObject::lookup(argv[2]);
+      if(phyp == 0) {
+	return TCL_ERROR;
+      }
+      phyp->insertnode(&ifhead_);
+      phyp->setnode(this);
+      return TCL_OK;
+    }
+  }
+  else if (4 == argc) {
+  }
+  else if (5 == argc) {
+  }
+
+  return MobileNode::command(argc, argv);
+}
+
+
+/* ======================================================================
+   Other class functions
+   ====================================================================== */
+void
+ClickNode::dump(void) {
+  printf("Dumping a clicknode...\n");
+}
+
+
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/common/clicknode.h ns-2.30/common/clicknode.h
--- ns-2.30-pure/common/clicknode.h	1969-12-31 16:00:00.000000000 -0800
+++ ns-2.30/common/clicknode.h	2007-09-11 21:04:07.000000000 -0700
@@ -0,0 +1,64 @@
+/*
+ * clicknode.h
+ *
+ */
+
+/*****************************************************************************
+ *  Copyright 2002, Univerity of Colorado at Boulder.                        *
+ *                                                                           *
+ *                        All Rights Reserved                                *
+ *                                                                           *
+ *  Permission to use, copy, modify, and distribute this software and its    *
+ *  documentation for any purpose other than its incorporation into a        *
+ *  commercial product is hereby granted without fee, provided that the      *
+ *  above copyright notice appear in all copies and that both that           *
+ *  copyright notice and this permission notice appear in supporting         *
+ *  documentation, and that the name of the University not be used in        *
+ *  advertising or publicity pertaining to distribution of the software      *
+ *  without specific, written prior permission.                              *
+ *                                                                           *
+ *  UNIVERSITY OF COLORADO DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS      *
+ *  SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND        *
+ *  FITNESS FOR ANY PARTICULAR PURPOSE.  IN NO EVENT SHALL THE UNIVERSITY    *
+ *  OF COLORADO BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL         *
+ *  DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA       *
+ *  OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER        *
+ *  TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR         *
+ *  PERFORMANCE OF THIS SOFTWARE.                                            *
+ *                                                                           *
+ ****************************************************************************/
+
+#ifndef __ns_clicknode_h__
+#define __ns_clicknode_h__
+
+#include "object.h"
+#include "trace.h"
+#include "lib/bsd-list.h"
+#include "node.h"
+
+class ClickNode : public MobileNode
+{
+
+public:
+  ClickNode();
+  virtual int cinit();
+  virtual int command(int argc, const char*const* argv);
+  inline ClickNode* nextnode() { return link_.le_next; }
+  
+  void dump(void);
+  
+private:
+
+  /*
+   * A global list of click nodes
+   */
+  LIST_ENTRY(ClickNode) link_;
+  
+  /*
+   * Trace Target
+   */
+  Trace* log_target_;
+
+};
+
+#endif
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/common/packet-stamp.h ns-2.30/common/packet-stamp.h
--- ns-2.30-pure/common/packet-stamp.h	2006-09-24 22:11:00.000000000 -0700
+++ ns-2.30/common/packet-stamp.h	2007-09-11 21:04:07.000000000 -0700
@@ -22,7 +22,8 @@
 class PacketStamp {
 public:
 
-  PacketStamp() : ant(0), node(0), Pr(-1), lambda(-1) { }
+  PacketStamp() : ant(0), node(0), Pr(-1), lambda(-1),PrLevel(-1),rate(0) { }
+  void clear() { ant = 0; node = 0; Pr = -1; lambda = -1; PrLevel = -1; rate = 0;}
 
   void init(const PacketStamp *s) {
 	  Antenna* ant;
@@ -33,6 +34,8 @@
 	  
 	  //Antenna *ant = (s->ant) ? s->ant->copy(): 0;
 	  stamp(s->node, ant, s->Pr, s->lambda);
+	  PrLevel = s->PrLevel;
+	  rate = s->rate;
   }
 
   void stamp(MobileNode *n, Antenna *a, double xmitPr, double lam) {
@@ -45,7 +48,11 @@
   inline Antenna * getAntenna() {return ant;}
   inline MobileNode * getNode() {return node;}
   inline double getTxPr() {return Pr;}
+  inline void setPrLevel(int p){PrLevel = p;}
+  inline int getPrLevel(){return PrLevel;}
   inline double getLambda() {return lambda;}
+  inline void setRate(double r){rate =r;}
+  inline double getRate(){return rate;}
 
   /* WILD HACK: The following two variables are a wild hack.
      They will go away in the next release...
@@ -60,6 +67,8 @@
   MobileNode	*node;
   double        Pr;		// power pkt sent with
   double        lambda;         // wavelength of signal
+  int 			PrLevel;	// nletor -- madwifi powerlevel set by TxPower element
+  double		rate;	// nletor -- transmission rate of packet
 };
 
 #endif /* !_cmu_packetstamp_h_ */
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/common/packet.h ns-2.30/common/packet.h
--- ns-2.30-pure/common/packet.h	2006-09-24 22:11:00.000000000 -0700
+++ ns-2.30/common/packet.h	2007-09-11 21:04:07.000000000 -0700
@@ -170,6 +170,9 @@
 	// Bell Labs Traffic Trace Type (PackMime OL)
 	PT_BLTRACE, 
 
+	// nsclick RAW packet
+	PT_RAW,
+
 	// insert new packet types here
 	PT_NTYPE // This MUST be the LAST one
 };
@@ -177,6 +180,7 @@
 class p_info {
 public:
 	p_info() {
+		name_[PT_RAW] = "raw";
 		name_[PT_TCP]= "tcp";
 		name_[PT_UDP]= "udp";
 		name_[PT_CBR]= "cbr";
@@ -539,6 +543,7 @@
 inline void Packet::init(Packet* p)
 {
 	bzero(p->bits_, hdrlen_);
+	p->txinfo_.clear();
 }
 
 inline Packet* Packet::alloc()
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/common/rawpacket.cc ns-2.30/common/rawpacket.cc
--- ns-2.30-pure/common/rawpacket.cc	1969-12-31 16:00:00.000000000 -0800
+++ ns-2.30/common/rawpacket.cc	2007-09-11 21:04:07.000000000 -0700
@@ -0,0 +1,205 @@
+/*
+ * rawpacket.cc
+ * Main file for the raw packet type
+ *
+ */
+
+/*****************************************************************************
+ *  Copyright 2002, Univerity of Colorado at Boulder.                        *
+ *                                                                           *
+ *                        All Rights Reserved                                *
+ *                                                                           *
+ *  Permission to use, copy, modify, and distribute this software and its    *
+ *  documentation for any purpose other than its incorporation into a        *
+ *  commercial product is hereby granted without fee, provided that the      *
+ *  above copyright notice appear in all copies and that both that           *
+ *  copyright notice and this permission notice appear in supporting         *
+ *  documentation, and that the name of the University not be used in        *
+ *  advertising or publicity pertaining to distribution of the software      *
+ *  without specific, written prior permission.                              *
+ *                                                                           *
+ *  UNIVERSITY OF COLORADO DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS      *
+ *  SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND        *
+ *  FITNESS FOR ANY PARTICULAR PURPOSE.  IN NO EVENT SHALL THE UNIVERSITY    *
+ *  OF COLORADO BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL         *
+ *  DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA       *
+ *  OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER        *
+ *  TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR         *
+ *  PERFORMANCE OF THIS SOFTWARE.                                            *
+ *                                                                           *
+ ****************************************************************************/
+
+#include <stdio.h>
+#include "agent.h"
+#include "packet.h"
+#include "rawpacket.h"
+#include "extrouter.h"
+
+#include <click/config.h>
+#include <click/confparse.hh>
+#include <clicknet/ip.h>
+#include <clicknet/udp.h>
+
+int hdr_raw::offset_;
+
+/*
+ * RawHeaderClass based on the ping example in the ns-2 tutorial.
+ */
+static class RawHeaderClass : public PacketHeaderClass {
+public:
+  RawHeaderClass() : PacketHeaderClass("PacketHeader/Raw",sizeof(hdr_raw)){
+    bind_offset(&hdr_raw::offset_);
+  }
+} class_rawhdr;
+
+static class RawClass : public TclClass {
+public:
+  RawClass() : TclClass("Agent/Raw") {}
+  TclObject* create(int,const char*const*) {
+    return (new RawAgent());
+  }
+} class_raw;
+  
+
+RawAgent::RawAgent() : Agent(PT_RAW) {
+  ipseq_ = 0;
+}
+
+int RawAgent::command(int argc,const char*const* argv) {
+  if (argc == 2) {
+    if (strcmp(argv[1], "send") == 0) {
+      char* testmsg = "Howdy Howdy Howdy\n";
+      send_udp_str(srcip_,srcport_,destip_,destport_,testmsg);
+      return (TCL_OK);
+    }
+  }
+  else if (argc == 3) {
+    if (strcmp(argv[1], "send") == 0) {
+      const char* testmsg = argv[2];
+      send_udp_str(srcip_,srcport_,destip_,destport_,testmsg);
+      return (TCL_OK);
+    }
+    if (strcmp(argv[1], "set-srcip") == 0) {
+	if (!Click::cp_ip_address(Click::String(argv[2]), (unsigned char *) &srcip_))
+	    return TCL_ERROR;
+	return (TCL_OK);
+    }
+    if (strcmp(argv[1], "set-srcport") == 0) {
+      srcport_ = atoi(argv[2]);
+      return (TCL_OK);
+    }
+    if (strcmp(argv[1], "set-destip") == 0) {
+	if (!Click::cp_ip_address(Click::String(argv[2]), (unsigned char *) &destip_))
+	    return TCL_ERROR;
+	return (TCL_OK);
+    }
+    if (strcmp(argv[1], "set-destport") == 0) {
+      destport_ = atoi(argv[2]);
+      return (TCL_OK);
+    }
+  }
+  else if (argc == 7) {
+    if (strcmp(argv[1],"send-udp") == 0) {
+      // saddr,sport,daddr,dport,payload
+      // For right now only text strings can be sent
+      // as payload.
+	u_long saddr, daddr;
+	if (!Click::cp_ip_address(Click::String(argv[2]), (unsigned char *) &saddr)
+	    || !Click::cp_ip_address(Click::String(argv[4]), (unsigned char *) &daddr))
+	    return TCL_ERROR;
+      u_short sport = atoi(argv[3]);
+      u_short dport = atoi(argv[5]);
+      send_udp_str(saddr,sport,daddr,dport,argv[6]);
+      // return TCL_OK, so the calling function knows that the
+      // command has been processed
+      return (TCL_OK);
+    }
+  }
+
+  // If the command hasn't been processed by RawAgent()::command,
+  // call the command() function for the base class
+  return (Agent::command(argc, argv));
+}
+
+void
+RawAgent::sendmsg(int nbytes, const char *flags) {
+  // Make a string full of 'A's and use it for the payload
+  char* stuff = new char[nbytes];
+  memset(stuff,'A',nbytes);
+  send_udp(srcip_,srcport_,destip_,destport_,stuff,nbytes);
+  delete[] stuff;
+  stuff = 0;
+}
+
+void
+RawAgent::send_udp_str(u_long saddr,u_short sport,u_long daddr,u_short dport,
+		       const char* payload) {
+  send_udp(saddr,sport,daddr,dport,payload,strlen(payload));
+}
+
+void
+RawAgent::send_udp(u_long saddr,u_short sport,u_long daddr,u_short dport,
+		   const char* payload,int paylen) {
+    int packetlen = paylen + sizeof(click_ip) + sizeof(click_udp);
+    Packet* pkt = allocpkt(packetlen);
+    hdr_cmn* hcmn = HDR_CMN(pkt);
+    hcmn->direction() = hdr_cmn::DOWN;
+    hcmn->iface() = ExtRouter::IFID_KERNELTAP;
+    hcmn->ptype() = PT_RAW;
+    hcmn->size() = packetlen;
+    // Access the raw header for the new packet:
+    hdr_raw* hdr = hdr_raw::access(pkt);
+    hdr->subtype = hdr_raw::IP;
+    hdr->ns_type = PT_RAW;
+    unsigned char* pdat = pkt->accessdata();
+    memset(pdat,0,packetlen);
+
+    click_ip *ip = reinterpret_cast<click_ip *>(pdat);
+    click_udp *udp = reinterpret_cast<click_udp *>(ip + 1);
+
+    // set up IP header
+    ip->ip_v = 4;
+    ip->ip_hl = sizeof(click_ip) >> 2;
+    ip->ip_len = htons(packetlen);
+    ip->ip_id = htons(ipseq_);
+    ip->ip_p = IP_PROTO_UDP;
+    ip->ip_src.s_addr = saddr;
+    ip->ip_dst.s_addr = daddr;
+    ip->ip_tos = 0;
+    ip->ip_off = 0;
+    ip->ip_ttl = 255;
+
+    ip->ip_sum = 0;
+#if HAVE_FAST_CHECKSUM
+    ip->ip_sum = ip_fast_csum((unsigned char *)ip, sizeof(click_ip) >> 2);
+#else
+    ip->ip_sum = click_in_cksum((unsigned char *)ip, sizeof(click_ip));
+#endif
+    
+    // set up UDP header
+    udp->uh_sport = htons(sport);
+    udp->uh_dport = htons(dport);
+    uint16_t len = packetlen - sizeof(click_ip);
+    udp->uh_ulen = htons(len);
+    udp->uh_sum = 0;
+    unsigned csum = click_in_cksum((unsigned char *)udp, len);
+    udp->uh_sum = click_in_cksum_pseudohdr(csum, ip, len);
+  
+    // Send the packet
+    send(pkt, 0);
+    ipseq_++;
+}
+
+void RawAgent::recv(Packet* pkt, Handler*)
+{
+  // Access the raw header for the received packet
+  hdr_raw* hdr = hdr_raw::access(pkt);
+
+  if (hdr_raw::PSTRING == hdr->subtype) {
+    unsigned char* pdat = pkt->accessdata();
+    unsigned int len = pdat[0];
+
+    // Shovel the string to the screen...
+    fwrite(pdat+1,sizeof(char),len,stdout);
+  }
+}
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/common/rawpacket.h ns-2.30/common/rawpacket.h
--- ns-2.30-pure/common/rawpacket.h	1969-12-31 16:00:00.000000000 -0800
+++ ns-2.30/common/rawpacket.h	2007-09-11 21:04:07.000000000 -0700
@@ -0,0 +1,91 @@
+/*
+ * rawpacket.h
+ *
+ */
+
+/*****************************************************************************
+ *  Copyright 2002, Univerity of Colorado at Boulder.                        *
+ *                                                                           *
+ *                        All Rights Reserved                                *
+ *                                                                           *
+ *  Permission to use, copy, modify, and distribute this software and its    *
+ *  documentation for any purpose other than its incorporation into a        *
+ *  commercial product is hereby granted without fee, provided that the      *
+ *  above copyright notice appear in all copies and that both that           *
+ *  copyright notice and this permission notice appear in supporting         *
+ *  documentation, and that the name of the University not be used in        *
+ *  advertising or publicity pertaining to distribution of the software      *
+ *  without specific, written prior permission.                              *
+ *                                                                           *
+ *  UNIVERSITY OF COLORADO DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS      *
+ *  SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND        *
+ *  FITNESS FOR ANY PARTICULAR PURPOSE.  IN NO EVENT SHALL THE UNIVERSITY    *
+ *  OF COLORADO BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL         *
+ *  DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA       *
+ *  OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER        *
+ *  TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR         *
+ *  PERFORMANCE OF THIS SOFTWARE.                                            *
+ *                                                                           *
+ ****************************************************************************/
+
+/*
+ * Raw packet type. 
+ */
+struct hdr_raw {
+  /*
+   * This indicates the actual type of the stuff in the
+   * packet. The actual packet stuff is pointed to by 
+   * the data thing.
+   */
+  int subtype;
+
+  /*
+   * Not many raw subtypes defined so far.
+   */
+  enum {
+    NONE,
+    PSTRING,
+    IP,
+    ETHERNET,
+    MADWIFI
+  };
+
+  /*
+   * This is the equivalent packet type in ns-2. Sometimes we
+   * want to maintain the raw packet data _and_ the ns-2 headers
+   * for that particular type in parallel, e.g. so we can use
+   * the existing ns-2 trace printing routines. However, we
+   * still want to keep the packet type as PT_RAW, so we store
+   * the ns-2 type in this field.
+   */
+  int ns_type;
+ 
+  /* Packet header access functions */
+  static int offset_;
+  inline static int& offset() { return offset_; }
+  inline static hdr_raw* access(const Packet* p) {
+    return (hdr_raw*) p->access(offset_);
+  }
+};
+
+/*
+ * The base RawAgent class
+ */
+class RawAgent : public Agent {
+ public:
+  RawAgent();
+  int command(int argc,const char*const* argv);
+  void recv(Packet*, Handler*);
+  virtual void sendmsg(int nbytes, const char *flags = 0);
+ protected:
+  void send_udp_str(u_long saddr,u_short sport,u_long daddr,u_short dport,
+		    const char* payload);
+  void send_udp(u_long saddr,u_short sport,u_long daddr,u_short dport,
+		const char* payload,int paylen);
+
+  u_int16_t ipseq_;
+  u_long srcip_;
+  u_short srcport_;
+  u_long destip_;
+  u_short destport_;
+};
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/conf/configure.in.click ns-2.30/conf/configure.in.click
--- ns-2.30-pure/conf/configure.in.click	1969-12-31 16:00:00.000000000 -0800
+++ ns-2.30/conf/configure.in.click	2007-09-11 21:04:07.000000000 -0700
@@ -0,0 +1,29 @@
+dnl autoconf rules to find click - copied from dmalloc example
+
+AC_ARG_WITH(click,	--with-click=path specify a pathname for the click modular router, d="$withval", d="")
+
+CLICK_VERS=1.3
+
+CLICK_PATH="$PWD/../click \
+	$PWD/../../click \
+	$PWD/../click-$CLICK_VERS \
+	$PWD/../../click-$CLICK_VERS \
+	$PWD/../click/include \
+	$PWD/../../click/include \
+	$PWD/../click-$CLICK_VERS/include \
+	$PWD/../../click-$CLICK_VERS/include \
+	$PWD/../click/ns \
+	$PWD/../../click/ns \
+	$PWD/../click-$CLICK_VERS/ns \
+	$PWD/../../click-$CLICK_VERS/ns \
+	"
+CLICK_PATH_D="$d \
+	$d/lib \
+	$d/include \
+	"
+
+NS_BEGIN_PACKAGE(click)
+NS_CHECK_HEADER_PATH(click/simclick.h,$CLICK_PATH,$d,$CLICK_PATH_D,V_HEADER_CLICK,click)
+NS_CHECK_LIB_PATH(nsclick,$CLICK_PATH,$d,$CLICK_PATH_D,V_LIB_CLICK,click)
+V_DEFINES="-DCLICK_NS $V_DEFINES"
+NS_END_PACKAGE(click,yes)
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/configure ns-2.30/configure
--- ns-2.30-pure/configure	2006-09-24 22:11:19.000000000 -0700
+++ ns-2.30/configure	2007-09-11 21:04:07.000000000 -0700
@@ -873,6 +873,7 @@
 --with-tclcl=path	specify a pathname for TclCL (the ex-libTcl)
 --with-tcldebug=path specify a pathname for the tcl debugger (path=no disables the debugger)
 --with-dmalloc=path specify a pathname for the dmalloc debugger (path=no disables the dmalloc)
+--with-click=path specify a pathname for the click modular router
 --with-perl=path specify a pathname for perl
 
 Some influential environment variables:
@@ -977,7 +978,7 @@
     else
       echo "$as_me: WARNING: no configuration information is in $ac_dir" >&2
     fi
-    cd "$ac_popdir"
+    cd $ac_popdir
   done
 fi
 
@@ -2085,7 +2086,8 @@
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_c_werror_flag"			 || test ! -s conftest.err'
+	 { ac_try='test -z "$ac_c_werror_flag"
+			 || test ! -s conftest.err'
   { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
   (eval $ac_try) 2>&5
   ac_status=$?
@@ -2143,7 +2145,8 @@
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_c_werror_flag"			 || test ! -s conftest.err'
+	 { ac_try='test -z "$ac_c_werror_flag"
+			 || test ! -s conftest.err'
   { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
   (eval $ac_try) 2>&5
   ac_status=$?
@@ -2259,7 +2262,8 @@
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_c_werror_flag"			 || test ! -s conftest.err'
+	 { ac_try='test -z "$ac_c_werror_flag"
+			 || test ! -s conftest.err'
   { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
   (eval $ac_try) 2>&5
   ac_status=$?
@@ -2313,7 +2317,8 @@
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_c_werror_flag"			 || test ! -s conftest.err'
+	 { ac_try='test -z "$ac_c_werror_flag"
+			 || test ! -s conftest.err'
   { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
   (eval $ac_try) 2>&5
   ac_status=$?
@@ -2358,7 +2363,8 @@
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_c_werror_flag"			 || test ! -s conftest.err'
+	 { ac_try='test -z "$ac_c_werror_flag"
+			 || test ! -s conftest.err'
   { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
   (eval $ac_try) 2>&5
   ac_status=$?
@@ -2402,7 +2408,8 @@
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_c_werror_flag"			 || test ! -s conftest.err'
+	 { ac_try='test -z "$ac_c_werror_flag"
+			 || test ! -s conftest.err'
   { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
   (eval $ac_try) 2>&5
   ac_status=$?
@@ -2586,7 +2593,8 @@
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_cxx_werror_flag"			 || test ! -s conftest.err'
+	 { ac_try='test -z "$ac_cxx_werror_flag"
+			 || test ! -s conftest.err'
   { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
   (eval $ac_try) 2>&5
   ac_status=$?
@@ -2644,7 +2652,8 @@
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_cxx_werror_flag"			 || test ! -s conftest.err'
+	 { ac_try='test -z "$ac_cxx_werror_flag"
+			 || test ! -s conftest.err'
   { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
   (eval $ac_try) 2>&5
   ac_status=$?
@@ -2715,7 +2724,8 @@
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_cxx_werror_flag"			 || test ! -s conftest.err'
+	 { ac_try='test -z "$ac_cxx_werror_flag"
+			 || test ! -s conftest.err'
   { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
   (eval $ac_try) 2>&5
   ac_status=$?
@@ -2759,7 +2769,8 @@
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_cxx_werror_flag"			 || test ! -s conftest.err'
+	 { ac_try='test -z "$ac_cxx_werror_flag"
+			 || test ! -s conftest.err'
   { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
   (eval $ac_try) 2>&5
   ac_status=$?
@@ -3076,7 +3087,8 @@
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_c_werror_flag"			 || test ! -s conftest.err'
+	 { ac_try='test -z "$ac_c_werror_flag"
+			 || test ! -s conftest.err'
   { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
   (eval $ac_try) 2>&5
   ac_status=$?
@@ -3246,7 +3258,8 @@
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_c_werror_flag"			 || test ! -s conftest.err'
+	 { ac_try='test -z "$ac_c_werror_flag"
+			 || test ! -s conftest.err'
   { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
   (eval $ac_try) 2>&5
   ac_status=$?
@@ -3313,7 +3326,8 @@
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_c_werror_flag"			 || test ! -s conftest.err'
+	 { ac_try='test -z "$ac_c_werror_flag"
+			 || test ! -s conftest.err'
   { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
   (eval $ac_try) 2>&5
   ac_status=$?
@@ -3470,7 +3484,8 @@
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_c_werror_flag"			 || test ! -s conftest.err'
+	 { ac_try='test -z "$ac_c_werror_flag"
+			 || test ! -s conftest.err'
   { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
   (eval $ac_try) 2>&5
   ac_status=$?
@@ -3537,7 +3552,8 @@
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_c_werror_flag"			 || test ! -s conftest.err'
+	 { ac_try='test -z "$ac_c_werror_flag"
+			 || test ! -s conftest.err'
   { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
   (eval $ac_try) 2>&5
   ac_status=$?
@@ -3604,7 +3620,8 @@
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_c_werror_flag"			 || test ! -s conftest.err'
+	 { ac_try='test -z "$ac_c_werror_flag"
+			 || test ! -s conftest.err'
   { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
   (eval $ac_try) 2>&5
   ac_status=$?
@@ -3671,7 +3688,8 @@
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_c_werror_flag"			 || test ! -s conftest.err'
+	 { ac_try='test -z "$ac_c_werror_flag"
+			 || test ! -s conftest.err'
   { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
   (eval $ac_try) 2>&5
   ac_status=$?
@@ -3738,7 +3756,8 @@
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_c_werror_flag"			 || test ! -s conftest.err'
+	 { ac_try='test -z "$ac_c_werror_flag"
+			 || test ! -s conftest.err'
   { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
   (eval $ac_try) 2>&5
   ac_status=$?
@@ -3841,7 +3860,8 @@
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_c_werror_flag"			 || test ! -s conftest.err'
+	 { ac_try='test -z "$ac_c_werror_flag"
+			 || test ! -s conftest.err'
   { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
   (eval $ac_try) 2>&5
   ac_status=$?
@@ -4008,7 +4028,8 @@
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_cxx_werror_flag"			 || test ! -s conftest.err'
+	 { ac_try='test -z "$ac_cxx_werror_flag"
+			 || test ! -s conftest.err'
   { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
   (eval $ac_try) 2>&5
   ac_status=$?
@@ -4065,7 +4086,8 @@
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_cxx_werror_flag"			 || test ! -s conftest.err'
+	 { ac_try='test -z "$ac_cxx_werror_flag"
+			 || test ! -s conftest.err'
   { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
   (eval $ac_try) 2>&5
   ac_status=$?
@@ -4122,7 +4144,8 @@
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_cxx_werror_flag"			 || test ! -s conftest.err'
+	 { ac_try='test -z "$ac_cxx_werror_flag"
+			 || test ! -s conftest.err'
   { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
   (eval $ac_try) 2>&5
   ac_status=$?
@@ -4179,7 +4202,8 @@
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_cxx_werror_flag"			 || test ! -s conftest.err'
+	 { ac_try='test -z "$ac_cxx_werror_flag"
+			 || test ! -s conftest.err'
   { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
   (eval $ac_try) 2>&5
   ac_status=$?
@@ -4236,7 +4260,8 @@
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_cxx_werror_flag"			 || test ! -s conftest.err'
+	 { ac_try='test -z "$ac_cxx_werror_flag"
+			 || test ! -s conftest.err'
   { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
   (eval $ac_try) 2>&5
   ac_status=$?
@@ -6242,6 +6267,207 @@
 
 
 
+
+
+# Check whether --with-click or --without-click was given.
+if test "${with_click+set}" = set; then
+  withval="$with_click"
+  d="$withval"
+else
+  d=""
+fi;
+
+CLICK_VERS=1.3
+
+CLICK_PATH="$PWD/../click \
+	$PWD/../../click \
+	$PWD/../click-$CLICK_VERS \
+	$PWD/../../click-$CLICK_VERS \
+	$PWD/../click/include \
+	$PWD/../../click/include \
+	$PWD/../click-$CLICK_VERS/include \
+	$PWD/../../click-$CLICK_VERS/include \
+	$PWD/../click/ns \
+	$PWD/../../click/ns \
+	$PWD/../click-$CLICK_VERS/ns \
+	$PWD/../../click-$CLICK_VERS/ns \
+	"
+CLICK_PATH_D="$d \
+	$d/lib \
+	$d/include \
+	"
+
+
+NS_PACKAGE_click_UNDERWAY=false
+NS_PACKAGE_click_COMPLETE=true
+
+
+echo "$as_me:$LINENO: checking for click/simclick.h" >&5
+echo $ECHO_N "checking for click/simclick.h... $ECHO_C" >&6
+if test "x$d" = "xno"; then
+	: disable header
+	V_HEADER_CLICK=FAIL
+
+NS_PACKAGE_click_COMPLETE=false
+
+	echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6
+
+else
+	places="$CLICK_PATH"
+	if test "x$d" != "x" -a "x$d" != xyes; then
+		if test ! -d $d; then
+			{ { echo "$as_me:$LINENO: error: $d is not a directory" >&5
+echo "$as_me: error: $d is not a directory" >&2;}
+   { (exit 1); exit 1; }; }
+		fi
+		places="$CLICK_PATH_D"
+	fi
+
+	V_HEADER_CLICK=""
+	found=""
+	for dir in $places; do
+		if test -r $dir/click/simclick.h; then
+                        found="$dir"
+                        if test "$CC" != "icc" ||
+                                test "$dir" != "/usr/include"; then
+                                V_HEADER_CLICK="-I$dir"
+                        fi
+			break
+		fi
+	done
+	if test "FAIL$found" = "FAIL" ; then
+
+NS_PACKAGE_click_COMPLETE=false
+
+		echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6
+	else
+
+				  ac_tr_hdr=HAVE_`echo click/simclick.h | sed 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
+		                cat >>confdefs.h <<_ACEOF
+#define $ac_tr_hdr 1
+_ACEOF
+
+
+		V_INCLUDES="$V_HEADER_CLICK $V_INCLUDES"
+		V_DEFINES="-D$ac_tr_hdr $V_DEFINES"
+
+		NS_PACKAGE_click_UNDERWAY=true
+
+		echo "$as_me:$LINENO: result: $V_HEADER_CLICK" >&5
+echo "${ECHO_T}$V_HEADER_CLICK" >&6
+	fi
+fi
+
+
+echo "$as_me:$LINENO: checking for libnsclick" >&5
+echo $ECHO_N "checking for libnsclick... $ECHO_C" >&6
+if test "x$d" = "xno"; then
+	: disable library
+	V_LIB_CLICK=FAIL
+
+NS_PACKAGE_click_COMPLETE=false
+
+	echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6
+
+else
+	places="$CLICK_PATH"
+	if test "x$d" != "x" -a "x$d" != xyes; then
+		if test ! -d $d; then
+			{ { echo "$as_me:$LINENO: error: $d is not a directory" >&5
+echo "$as_me: error: $d is not a directory" >&2;}
+   { (exit 1); exit 1; }; }
+		fi
+		places="$CLICK_PATH_D"
+	fi
+
+	V_LIB_CLICK=""
+		full_lib_name="nsclick"
+		simple_lib_name=`echo $full_lib_name | sed -e 's/\.//'`
+		other_simple_lib_name=`echo $full_lib_name | sed -e 's/\./_/'`
+		simpler_lib_name=`echo $simple_lib_name | sed -e 'y/0123456789/          /'`
+	double_break=false
+	for dir in $places; do
+		for file in $full_lib_name $simple_lib_name $other_simple_lib_name $simpler_lib_name
+		do
+			if test -r $dir/lib$file.so -o -r $dir/lib$file.a -o -r $dir/lib$file.dylib; then
+				V_LIB_CLICK="-L$dir -l$file"
+				double_break=true
+				break
+			fi
+		done
+		if $double_break; then
+			break
+		fi
+	done
+	if test "FAIL$V_LIB_CLICK" = "FAIL" ; then
+
+NS_PACKAGE_click_COMPLETE=false
+
+		echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6
+	else
+		if test "$solaris"; then
+			V_LIB_CLICK="-R$dir $V_LIB_CLICK"
+		fi
+
+				ac_tr_lib=HAVE_LIB`echo nsclick | sed -e 's/[^a-zA-Z0-9_]/_/g' \
+		    -e 'y/abcdefghijklmnopqrstuvwxyz/ABCDEFGHIJKLMNOPQRSTUVWXYZ/'`
+				cat >>confdefs.h <<_ACEOF
+#define $ac_tr_lib 1
+_ACEOF
+
+
+				V_LIBS="$V_LIB_CLICK $V_LIBS"
+		V_DEFINES="-D$ac_tr_lib $V_DEFINES"
+
+		NS_PACKAGE_click_UNDERWAY=true
+
+		echo "$as_me:$LINENO: result: $V_LIB_CLICK" >&5
+echo "${ECHO_T}$V_LIB_CLICK" >&6
+	fi
+fi
+
+V_DEFINES="-DCLICK_NS $V_DEFINES"
+
+NS_PACKAGE_click_VALID=false
+if $NS_PACKAGE_click_UNDERWAY; then
+	if $NS_PACKAGE_click_COMPLETE; then
+		: All components of click found.
+		NS_PACKAGE_click_VALID=true
+	else
+		{ { echo "$as_me:$LINENO: error: Installation of click seems incomplete or can't be found automatically.
+Please correct the problem by telling configure where click is
+using the argument --with-click=/path/to/package
+(perhaps after installing it),
+or the package is not required, disable it with --with-click=no." >&5
+echo "$as_me: error: Installation of click seems incomplete or can't be found automatically.
+Please correct the problem by telling configure where click is
+using the argument --with-click=/path/to/package
+(perhaps after installing it),
+or the package is not required, disable it with --with-click=no." >&2;}
+   { (exit 1); exit 1; }; }
+	fi
+fi
+if test "xyes" = xyes; then
+	if $NS_PACKAGE_click_VALID; then
+		:
+	else
+		{ { echo "$as_me:$LINENO: error: click is required but could not be completely found.
+Please correct the problem by telling configure where click is
+using the argument --with-click=/path/to/package,
+or the package is not required, disable it with --with-click=no." >&5
+echo "$as_me: error: click is required but could not be completely found.
+Please correct the problem by telling configure where click is
+using the argument --with-click=/path/to/package,
+or the package is not required, disable it with --with-click=no." >&2;}
+   { (exit 1); exit 1; }; }
+	fi
+fi
+
+
 default_classinstvar=yes
 
 
@@ -6469,7 +6695,8 @@
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_c_werror_flag"			 || test ! -s conftest.err'
+	 { ac_try='test -z "$ac_c_werror_flag"
+			 || test ! -s conftest.err'
   { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
   (eval $ac_try) 2>&5
   ac_status=$?
@@ -6643,7 +6870,8 @@
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_c_werror_flag"			 || test ! -s conftest.err'
+	 { ac_try='test -z "$ac_c_werror_flag"
+			 || test ! -s conftest.err'
   { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
   (eval $ac_try) 2>&5
   ac_status=$?
@@ -6791,7 +7019,8 @@
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_c_werror_flag"			 || test ! -s conftest.err'
+	 { ac_try='test -z "$ac_c_werror_flag"
+			 || test ! -s conftest.err'
   { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
   (eval $ac_try) 2>&5
   ac_status=$?
@@ -6904,7 +7133,8 @@
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_c_werror_flag"			 || test ! -s conftest.err'
+	 { ac_try='test -z "$ac_c_werror_flag"
+			 || test ! -s conftest.err'
   { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
   (eval $ac_try) 2>&5
   ac_status=$?
@@ -7028,7 +7258,8 @@
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_c_werror_flag"			 || test ! -s conftest.err'
+	 { ac_try='test -z "$ac_c_werror_flag"
+			 || test ! -s conftest.err'
   { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
   (eval $ac_try) 2>&5
   ac_status=$?
@@ -7093,7 +7324,8 @@
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_c_werror_flag"			 || test ! -s conftest.err'
+	 { ac_try='test -z "$ac_c_werror_flag"
+			 || test ! -s conftest.err'
   { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
   (eval $ac_try) 2>&5
   ac_status=$?
@@ -7158,7 +7390,8 @@
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_c_werror_flag"			 || test ! -s conftest.err'
+	 { ac_try='test -z "$ac_c_werror_flag"
+			 || test ! -s conftest.err'
   { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
   (eval $ac_try) 2>&5
   ac_status=$?
@@ -7223,7 +7456,8 @@
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_c_werror_flag"			 || test ! -s conftest.err'
+	 { ac_try='test -z "$ac_c_werror_flag"
+			 || test ! -s conftest.err'
   { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
   (eval $ac_try) 2>&5
   ac_status=$?
@@ -7288,7 +7522,8 @@
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_c_werror_flag"			 || test ! -s conftest.err'
+	 { ac_try='test -z "$ac_c_werror_flag"
+			 || test ! -s conftest.err'
   { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
   (eval $ac_try) 2>&5
   ac_status=$?
@@ -7353,7 +7588,8 @@
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_c_werror_flag"			 || test ! -s conftest.err'
+	 { ac_try='test -z "$ac_c_werror_flag"
+			 || test ! -s conftest.err'
   { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
   (eval $ac_try) 2>&5
   ac_status=$?
@@ -7418,7 +7654,8 @@
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_c_werror_flag"			 || test ! -s conftest.err'
+	 { ac_try='test -z "$ac_c_werror_flag"
+			 || test ! -s conftest.err'
   { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
   (eval $ac_try) 2>&5
   ac_status=$?
@@ -7483,7 +7720,8 @@
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_c_werror_flag"			 || test ! -s conftest.err'
+	 { ac_try='test -z "$ac_c_werror_flag"
+			 || test ! -s conftest.err'
   { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
   (eval $ac_try) 2>&5
   ac_status=$?
@@ -7588,7 +7826,8 @@
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_c_werror_flag"			 || test ! -s conftest.err'
+	 { ac_try='test -z "$ac_c_werror_flag"
+			 || test ! -s conftest.err'
   { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
   (eval $ac_try) 2>&5
   ac_status=$?
@@ -7657,7 +7896,8 @@
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_c_werror_flag"			 || test ! -s conftest.err'
+	 { ac_try='test -z "$ac_c_werror_flag"
+			 || test ! -s conftest.err'
   { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
   (eval $ac_try) 2>&5
   ac_status=$?
@@ -7719,7 +7959,8 @@
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_c_werror_flag"			 || test ! -s conftest.err'
+	 { ac_try='test -z "$ac_c_werror_flag"
+			 || test ! -s conftest.err'
   { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
   (eval $ac_try) 2>&5
   ac_status=$?
@@ -7759,7 +8000,8 @@
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_c_werror_flag"			 || test ! -s conftest.err'
+	 { ac_try='test -z "$ac_c_werror_flag"
+			 || test ! -s conftest.err'
   { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
   (eval $ac_try) 2>&5
   ac_status=$?
@@ -7815,7 +8057,8 @@
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_c_werror_flag"			 || test ! -s conftest.err'
+	 { ac_try='test -z "$ac_c_werror_flag"
+			 || test ! -s conftest.err'
   { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
   (eval $ac_try) 2>&5
   ac_status=$?
@@ -7855,7 +8098,8 @@
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_c_werror_flag"			 || test ! -s conftest.err'
+	 { ac_try='test -z "$ac_c_werror_flag"
+			 || test ! -s conftest.err'
   { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
   (eval $ac_try) 2>&5
   ac_status=$?
@@ -7919,7 +8163,8 @@
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_c_werror_flag"			 || test ! -s conftest.err'
+	 { ac_try='test -z "$ac_c_werror_flag"
+			 || test ! -s conftest.err'
   { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
   (eval $ac_try) 2>&5
   ac_status=$?
@@ -7950,8 +8195,10 @@
 esac
 else
   if test "$cross_compiling" = yes; then
-  { { echo "$as_me:$LINENO: error: internal error: not reached in cross-compile" >&5
-echo "$as_me: error: internal error: not reached in cross-compile" >&2;}
+  { { echo "$as_me:$LINENO: error: cannot run test program while cross compiling
+See \`config.log' for more details." >&5
+echo "$as_me: error: cannot run test program while cross compiling
+See \`config.log' for more details." >&2;}
    { (exit 1); exit 1; }; }
 else
   cat >conftest.$ac_ext <<_ACEOF
@@ -8099,7 +8346,8 @@
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_c_werror_flag"			 || test ! -s conftest.err'
+	 { ac_try='test -z "$ac_c_werror_flag"
+			 || test ! -s conftest.err'
   { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
   (eval $ac_try) 2>&5
   ac_status=$?
@@ -8329,7 +8577,8 @@
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_c_werror_flag"			 || test ! -s conftest.err'
+	 { ac_try='test -z "$ac_c_werror_flag"
+			 || test ! -s conftest.err'
   { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
   (eval $ac_try) 2>&5
   ac_status=$?
@@ -8397,7 +8646,8 @@
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_c_werror_flag"			 || test ! -s conftest.err'
+	 { ac_try='test -z "$ac_c_werror_flag"
+			 || test ! -s conftest.err'
   { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
   (eval $ac_try) 2>&5
   ac_status=$?
@@ -8498,7 +8748,8 @@
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_c_werror_flag"			 || test ! -s conftest.err'
+	 { ac_try='test -z "$ac_c_werror_flag"
+			 || test ! -s conftest.err'
   { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
   (eval $ac_try) 2>&5
   ac_status=$?
@@ -8614,7 +8865,8 @@
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_c_werror_flag"			 || test ! -s conftest.err'
+	 { ac_try='test -z "$ac_c_werror_flag"
+			 || test ! -s conftest.err'
   { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
   (eval $ac_try) 2>&5
   ac_status=$?
@@ -8680,7 +8932,8 @@
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_c_werror_flag"			 || test ! -s conftest.err'
+	 { ac_try='test -z "$ac_c_werror_flag"
+			 || test ! -s conftest.err'
   { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
   (eval $ac_try) 2>&5
   ac_status=$?
@@ -8739,7 +8992,8 @@
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_c_werror_flag"			 || test ! -s conftest.err'
+	 { ac_try='test -z "$ac_c_werror_flag"
+			 || test ! -s conftest.err'
   { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
   (eval $ac_try) 2>&5
   ac_status=$?
@@ -8806,7 +9060,8 @@
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_c_werror_flag"			 || test ! -s conftest.err'
+	 { ac_try='test -z "$ac_c_werror_flag"
+			 || test ! -s conftest.err'
   { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
   (eval $ac_try) 2>&5
   ac_status=$?
@@ -8932,7 +9187,8 @@
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_c_werror_flag"			 || test ! -s conftest.err'
+	 { ac_try='test -z "$ac_c_werror_flag"
+			 || test ! -s conftest.err'
   { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
   (eval $ac_try) 2>&5
   ac_status=$?
@@ -9004,7 +9260,8 @@
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_c_werror_flag"			 || test ! -s conftest.err'
+	 { ac_try='test -z "$ac_c_werror_flag"
+			 || test ! -s conftest.err'
   { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
   (eval $ac_try) 2>&5
   ac_status=$?
@@ -10062,6 +10319,11 @@
   *) ac_INSTALL=$ac_top_builddir$INSTALL ;;
   esac
 
+  if test x"$ac_file" != x-; then
+    { echo "$as_me:$LINENO: creating $ac_file" >&5
+echo "$as_me: creating $ac_file" >&6;}
+    rm -f "$ac_file"
+  fi
   # Let's still pretend it is `configure' which instantiates (i.e., don't
   # use $as_me), people would be surprised to read:
   #    /* config.h.  Generated by config.status.  */
@@ -10100,12 +10362,6 @@
 	 fi;;
       esac
     done` || { (exit 1); exit 1; }
-
-  if test x"$ac_file" != x-; then
-    { echo "$as_me:$LINENO: creating $ac_file" >&5
-echo "$as_me: creating $ac_file" >&6;}
-    rm -f "$ac_file"
-  fi
 _ACEOF
 cat >>$CONFIG_STATUS <<_ACEOF
   sed "$ac_vpsub
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/configure.in ns-2.30/configure.in
--- ns-2.30-pure/configure.in	2006-09-24 22:11:19.000000000 -0700
+++ ns-2.30/configure.in	2007-09-11 21:04:07.000000000 -0700
@@ -25,6 +25,7 @@
 builtin(include, ./conf/configure.in.misc)
 builtin(include, ./conf/configure.in.tcldebug)
 builtin(include, ./conf/configure.in.dmalloc)
+builtin(include, ./conf/configure.in.click)
 default_classinstvar=yes
 builtin(include, ./conf/configure.in.debugopts)
 
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/diffusion/diffusion.h ns-2.30/diffusion/diffusion.h
--- ns-2.30-pure/diffusion/diffusion.h	2006-09-24 22:11:15.000000000 -0700
+++ ns-2.30/diffusion/diffusion.h	2007-09-11 21:04:07.000000000 -0700
@@ -138,6 +138,10 @@
 };
 
 
+void XmitFailedCallback(Packet *pkt, void *data);
+class ArpBufferTimer;
+class SendBufTimer;
+
 class DiffusionAgent : public Agent {
  public:
   DiffusionAgent();
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/diffusion/omni_mcast.h ns-2.30/diffusion/omni_mcast.h
--- ns-2.30-pure/diffusion/omni_mcast.h	2006-09-24 22:11:15.000000000 -0700
+++ ns-2.30/diffusion/omni_mcast.h	2007-09-11 21:04:07.000000000 -0700
@@ -157,6 +157,10 @@
 
 
 
+void OmniMcastXmitFailedCallback(Packet *pkt, void *data);
+
+class OmniMcastArpBufferTimer;
+class OmniMcastSendBufTimer;
 
 class OmniMcastAgent : public Agent {
  public:
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/dsr/dsragent.h ns-2.30/dsr/dsragent.h
--- ns-2.30-pure/dsr/dsragent.h	2006-09-24 22:11:17.000000000 -0700
+++ ns-2.30/dsr/dsragent.h	2007-09-11 21:04:07.000000000 -0700
@@ -110,6 +110,12 @@
 
 LIST_HEAD(DSRAgent_List, DSRAgent);
 
+void XmitFailureCallback(Packet *pkt, void *data);
+void XmitFlowFailureCallback(Packet *pkt, void *data);
+int FilterFailure(Packet *p, void *data);
+class SendBufferTimer;
+
+
 class DSRAgent : public Tap, public Agent {
 public:
 
Binary files ns-2.30-pure/indep-utils/cmu-scen-gen/setdest/calcdest and ns-2.30/indep-utils/cmu-scen-gen/setdest/calcdest differ
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/mac/channel.cc ns-2.30/mac/channel.cc
--- ns-2.30-pure/mac/channel.cc	2006-09-24 22:11:19.000000000 -0700
+++ ns-2.30/mac/channel.cc	2007-09-11 21:04:07.000000000 -0700
@@ -120,6 +120,12 @@
 			((Phy*) obj)->setchnl(this);
 			return TCL_OK;
 		}
+		else if(strcmp(argv[1], "delif") == 0) {
+			// Remove phy from channel
+			((Phy*) obj)->setchnl(0);
+			((Phy*) obj)->removechnl();
+			return TCL_OK;
+		}
 
 		// add interface for grid_keeper_
 		/*else if(strncasecmp(argv[1], "grid_keeper", 5) == 0) {
@@ -344,17 +350,18 @@
 						         outlist);
 	    for (i=0; i < out_index; i ++) {
 		
-		  newp = p->copy();
+		  // fix Szymon Chachulski
 		  rnode = outlist[i];
 		  propdelay = get_pdelay(tnode, rnode);
 
 		  rifp = (rnode->ifhead()).lh_first; 
 		  for(; rifp; rifp = rifp->nextnode()){
 			  if (rifp->channel() == this){
+				 newp = p->copy();
 				 s.schedule(rifp, newp, propdelay); 
-				 break;
 			  }
 		  }
+		  //!fix Szymon Chachulski
  	    }
 	    delete [] outlist; 
 	 
@@ -375,14 +382,17 @@
 			 if(rnode == tnode)
 				 continue;
 			 
-			 newp = p->copy();
-			 
+			 // fix Szymon Chachulski
 			 propdelay = get_pdelay(tnode, rnode);
 			 
 			 rifp = (rnode->ifhead()).lh_first;
 			 for(; rifp; rifp = rifp->nextnode()){
-				 s.schedule(rifp, newp, propdelay);
+				 if (rifp->channel() == this){
+					 newp = p->copy();
+					 s.schedule(rifp, newp, propdelay);
+				}
 			 }
+			//!fix Szymon Chachulski
 		 }
 		 delete [] affectedNodes;
 	 }
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/mac/ll-ext.cc ns-2.30/mac/ll-ext.cc
--- ns-2.30-pure/mac/ll-ext.cc	1969-12-31 16:00:00.000000000 -0800
+++ ns-2.30/mac/ll-ext.cc	2007-09-11 21:04:07.000000000 -0700
@@ -0,0 +1,173 @@
+/*
+ * ll-ext.cc
+ * This is a special link layer which explicitly notifies the attached
+ * queue when it becomes free.
+ */
+
+/*****************************************************************************
+ *  Copyright 2002, Univerity of Colorado at Boulder.                        *
+ *                                                                           *
+ *                        All Rights Reserved                                *
+ *                                                                           *
+ *  Permission to use, copy, modify, and distribute this software and its    *
+ *  documentation for any purpose other than its incorporation into a        *
+ *  commercial product is hereby granted without fee, provided that the      *
+ *  above copyright notice appear in all copies and that both that           *
+ *  copyright notice and this permission notice appear in supporting         *
+ *  documentation, and that the name of the University not be used in        *
+ *  advertising or publicity pertaining to distribution of the software      *
+ *  without specific, written prior permission.                              *
+ *                                                                           *
+ *  UNIVERSITY OF COLORADO DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS      *
+ *  SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND        *
+ *  FITNESS FOR ANY PARTICULAR PURPOSE.  IN NO EVENT SHALL THE UNIVERSITY    *
+ *  OF COLORADO BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL         *
+ *  DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA       *
+ *  OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER        *
+ *  TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR         *
+ *  PERFORMANCE OF THIS SOFTWARE.                                            *
+ *                                                                           *
+ ****************************************************************************/
+
+// XXX This is really a click link layer now - not just ext...
+
+#include "config.h"
+#include <stdlib.h>
+#include <ctype.h>
+#include <sys/time.h>
+#include <unistd.h>
+//#include <stl.h>
+//#include <hash_map.h>
+#include <map>
+#include <math.h>
+#include <string>
+#include "packet.h"
+#include "ip.h"
+#include "mac.h"
+#include "classifier.h"
+//#include "classifier-hash.h"
+#include "scheduler.h"
+#include "ll.h"
+#include <click/simclick.h>
+#include "ll-ext.h"
+#include "packet.h"
+#include "extrouter.h"
+#include "classifier.h"
+#include "classifier-ext.h"
+#include "classifier-click.h"
+#include "clickqueue.h"
+
+static class LLExtClass : public TclClass {
+public:
+  LLExtClass() : TclClass("LL/Ext") {}
+  TclObject* create(int, const char*const*) {
+    return (new LLExt());
+  }
+} class_ll_ext;
+
+void
+LLExtEventHandler::handle(Event* event) {
+  // XXX dangerous downcast - should use RTTI
+  LLExtEvent* myevent = (LLExtEvent*) event;
+  myevent->llext->setpending(0);
+  delete myevent;
+}
+
+
+LLExt::LLExt() {
+  extid_ = -1;
+  macDA_ = -1;
+  packetpending_ = 0;
+}
+
+LLExt::~LLExt() {
+}
+
+int LLExt::command(int argc, const char*const* argv) {
+  Tcl& tcl = Tcl::instance();
+  if(argc == 2) {
+  }
+  else if (argc == 3) {
+    if (strcmp("setid",argv[1]) == 0) {
+      extid_ = atoi(argv[2]);
+      return TCL_OK;
+    }
+    else if (strcmp("setpromiscuous",argv[1]) == 0) {
+      bool promisc = (atoi(argv[2]) != 0);
+      setpromiscuous(promisc);
+      return TCL_OK;
+    }
+  }
+  else if (argc == 4) {
+  }
+
+  return LL::command(argc,argv);
+}
+
+void LLExt::recv(Packet* p, Handler* h) {
+  /*
+   * Tag the packet and then defer to standard link layer handling.
+   */
+  struct hdr_cmn* hdr = HDR_CMN(p);
+  hdr->iface() = extid_;
+  // printf("ll = %d, ifid = %d\n",(int)this,hdr->iface());
+  LL::recv(p,h);
+}
+
+void LLExt::sendDown(Packet* p) {
+  // Someone decided that it would be A Good Thing to overlay
+  // the 802.11 MAC packet info on top of the regular MAC packet info.
+  // We need to fix the source and destination addresses here by accessing the
+  // MAC object itself.
+  struct hdr_mac* mhdr = HDR_MAC(p);
+  int macdst = mhdr->macDA();
+  int macsrc = mhdr->macSA();
+  memset(mhdr,0,sizeof(struct hdr_mac));
+  mac_->hdr_dst((char*)mhdr,macdst);
+  mac_->hdr_src((char*)mhdr,macsrc);
+
+  // Bleah. Send the packet down, mark ourself as being busy, and then
+  // schedule an event to mark ourselves unbusy.
+  packetpending_ = 1;
+  LL::sendDown(p);
+  LLExtEvent* llev = new LLExtEvent();
+  llev->llext = this;
+  Scheduler& s = Scheduler::instance();
+  s.schedule(&evhandle_,llev,delay_);
+}
+
+int LLExt::ready() {
+  ClickQueue* pcq = (ClickQueue*) ifq_;
+  if (pcq) {
+    return (!packetpending_ && pcq->ready());
+  }
+
+  // No ClickQueue? Then we're always ready.
+  return 1;
+}
+
+void
+LLExt::setpromiscuous(bool promisc) {
+  if (!mac_) {
+    return;
+  }
+
+  if (promisc) {
+    mac_->installTap(this,true);
+  }
+  else {
+    mac_->installTap(0,true);
+  }
+}
+
+void 
+LLExt::tap(const Packet *packet)
+  /* process packets that are promiscously listened to from the MAC layer tap
+  *** do not change or free packet *** */
+{
+  // XXX send a copy of packets received here up to the next layer.
+  // This code assumes that the tap is being used with the "filterown"
+  // option set, otherwise duplicate packets will get sent up the pipe.
+  Packet* newp = packet->copy();
+  recv(newp,0);
+}
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/mac/ll-ext.h ns-2.30/mac/ll-ext.h
--- ns-2.30-pure/mac/ll-ext.h	1969-12-31 16:00:00.000000000 -0800
+++ ns-2.30/mac/ll-ext.h	2007-09-11 21:04:07.000000000 -0700
@@ -0,0 +1,78 @@
+/*
+ * ll-ext.h
+ *
+ * Much like the multicast routing system, ext routers needs to know what
+ * interface packets come in from. However, the multicast interface
+ * thing doesn't quite do what we need it to, so you get what
+ * we've got here. 
+ */
+
+/*****************************************************************************
+ *  Copyright 2002, Univerity of Colorado at Boulder.                        *
+ *                                                                           *
+ *                        All Rights Reserved                                *
+ *                                                                           *
+ *  Permission to use, copy, modify, and distribute this software and its    *
+ *  documentation for any purpose other than its incorporation into a        *
+ *  commercial product is hereby granted without fee, provided that the      *
+ *  above copyright notice appear in all copies and that both that           *
+ *  copyright notice and this permission notice appear in supporting         *
+ *  documentation, and that the name of the University not be used in        *
+ *  advertising or publicity pertaining to distribution of the software      *
+ *  without specific, written prior permission.                              *
+ *                                                                           *
+ *  UNIVERSITY OF COLORADO DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS      *
+ *  SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND        *
+ *  FITNESS FOR ANY PARTICULAR PURPOSE.  IN NO EVENT SHALL THE UNIVERSITY    *
+ *  OF COLORADO BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL         *
+ *  DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA       *
+ *  OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER        *
+ *  TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR         *
+ *  PERFORMANCE OF THIS SOFTWARE.                                            *
+ *                                                                           *
+ ****************************************************************************/
+
+#ifndef ns_ll_ext_h
+#define ns_ll_ext_h
+
+#include "object.h"
+
+class Packet;
+class LLExt;
+
+class LLExtEvent : public Event {
+ public:
+  LLExt* llext;
+};
+
+class LLExtEventHandler : public Handler {
+ public:
+  virtual void handle(Event* event);
+};
+
+class LLExt : public LL, public Tap {
+ public:
+  LLExt();
+  virtual ~LLExt();
+	
+  virtual void recv(Packet* p, Handler* h);
+  virtual void sendDown(Packet* p);
+
+  // Allow us to do promiscuous mode by acting as a tap.
+  void tap(const Packet *p);
+
+  void setExtID(int newid) {extid_ = newid;}
+  int getExtID() {return extid_;}
+  int ready();
+  int getpending() { return packetpending_; }
+  void setpending(int newpend) { packetpending_ = newpend; };
+  void setpromiscuous(bool promisc);
+  
+ protected:
+  virtual int command(int argc, const char*const* argv);
+  int extid_;
+  int packetpending_;
+  LLExtEventHandler evhandle_;
+};
+
+#endif
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/mac/ll.cc ns-2.30/mac/ll.cc
--- ns-2.30-pure/mac/ll.cc	2006-09-24 22:11:19.000000000 -0700
+++ ns-2.30/mac/ll.cc	2007-09-11 21:04:07.000000000 -0700
@@ -203,6 +203,9 @@
 			tx = arptable_->arpresolve(dst, p, this);
 			break;
 		}
+		if (PT_RAW == ch->ptype()) {
+			break;
+		}
 		//if (varp_) {
 		//tx = varp_->arpresolve(dst, p);
 		//break;
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/mac/mac-802_11.cc ns-2.30/mac/mac-802_11.cc
--- ns-2.30-pure/mac/mac-802_11.cc	2006-09-24 22:11:19.000000000 -0700
+++ ns-2.30/mac/mac-802_11.cc	2007-09-11 21:04:07.000000000 -0700
@@ -39,9 +39,17 @@
  *   - Sushmita
  */
 
+/*
+ *	Modified by Nicolas Letor to support wifi elements.
+ * 	Performance Analysis of Telecommunication Systems (PATS) research group,
+ * 	Interdisciplinary Institute for Broadband Technology (IBBT) & Universiteit Antwerpen.
+ */
 #include "delay.h"
 #include "connector.h"
+#include "agent.h"
 #include "packet.h"
+#include "rawpacket.h"
+#include "packet_anno.h"
 #include "random.h"
 #include "mobilenode.h"
 
@@ -813,6 +821,39 @@
 	transmit(pktTx_, timeout);
 	return 0;
 }
+
+// helper function
+click_wifi_extra* 
+getWifiExtra(Packet* p)
+{
+  	struct hdr_cmn* chdr = HDR_CMN(p);
+	if (chdr->ptype() == PT_RAW){
+		hdr_raw* rhdr = hdr_raw::access(p);
+		if (rhdr->subtype == hdr_raw::MADWIFI) {
+			click_wifi_extra* ceh = (click_wifi_extra*)(p->accessdata());
+			if (ceh->magic == WIFI_EXTRA_MAGIC){
+				return ceh;
+			}			
+		}
+	}
+	return 0;
+}
+
+click_wifi* 
+getWifi(Packet* p)
+{
+  	struct hdr_cmn* chdr = HDR_CMN(p);
+	if (chdr->ptype() == PT_RAW){
+		hdr_raw* rhdr = hdr_raw::access(p);
+		if (rhdr->subtype == hdr_raw::MADWIFI) {
+			click_wifi_extra* ceh = (click_wifi_extra*)(p->accessdata());
+			if (ceh->magic == WIFI_EXTRA_MAGIC){
+				return (click_wifi*)(p->accessdata() + sizeof(click_wifi_extra));
+			}			
+		}
+	}
+	return 0;
+}
 /*
  * Low-level transmit functions that actually place the packet onto
  * the channel.
@@ -831,10 +872,26 @@
 	 *  If the size of the packet is larger than the
 	 *  RTSThreshold, then perform the RTS/CTS exchange.
 	 */
-	if( (u_int32_t) HDR_CMN(pktTx_)->size() < macmib_.getRTSThreshold() ||
+	click_wifi_extra* ceh = getWifiExtra(pktTx_);
+	if ((ceh != 0) && ((u_int32_t) dst != MAC_BROADCAST)) { 	
+		// madwifi case
+		if (!(ceh->flags & WIFI_EXTRA_DO_RTS_CTS)) {
+			Packet::free(p);
+			//p = 0;
+			return;
+		}
+		
+		if	( ceh->power > 0){
+			p->txinfo_.setPrLevel(ceh->power);	
+		}
+
+	} else {
+		// normal case
+		if( (u_int32_t) HDR_CMN(pktTx_)->size() < macmib_.getRTSThreshold() ||
             (u_int32_t) dst == MAC_BROADCAST) {
-		Packet::free(p);
-		return;
+			Packet::free(p);
+			return;
+		}
 	}
 
 	ch->uid() = 0;
@@ -976,6 +1033,7 @@
 	/*
 	 * Update the MAC header
 	 */
+	click_wifi_extra* ceh = getWifiExtra(p);
 	ch->size() += phymib_.getHdrLen11();
 
 	dh->dh_fc.fc_protocol_version = MAC_ProtocolVersion;
@@ -997,6 +1055,20 @@
 	if((u_int32_t)ETHER_ADDR(dh->dh_ra) != MAC_BROADCAST) {
 		/* store data tx time for unicast packets */
 		ch->txtime() = txtime(ch->size(), dataRate_);
+		p->txinfo_.setRate(dataRate_);
+
+		// nsmadwifi
+		if ( ceh != 0 ){
+			
+			if ( ceh->rate > 0){
+				double rate = ((short int)(ceh->rate))*500000; 
+				ch->txtime() = txtime(ch->size(),rate);
+				p->txinfo_.setRate(rate);
+			}
+			if	( ceh->power > 0){
+				p->txinfo_.setPrLevel(ceh->power);	
+			}
+		}
 		
 		dh->dh_duration = usec(txtime(phymib_.getACKlen(), basicRate_)
 				       + phymib_.getSIFS());
@@ -1006,6 +1078,7 @@
 	} else {
 		/* store data tx time for broadcast packets (see 9.6) */
 		ch->txtime() = txtime(ch->size(), basicRate_);
+		p->txinfo_.setRate(basicRate_);
 		
 		dh->dh_duration = 0;
 	}
@@ -1026,7 +1099,25 @@
 
 	ssrc_ += 1;			// STA Short Retry Count
 		
+	bool failure = false;
+	double count = ssrc_;
+
+	click_wifi_extra* ceh = getWifiExtra(pktTx_);
+	if ((ceh != 0) && (ceh->max_tries != 0)){
+		ceh->retries = ssrc_;
+		if (count <= ceh->max_tries){
+		
+		} else {
+			failure = true;	
+		}
+	} else {
 	if(ssrc_ >= macmib_.getShortRetryLimit()) {
+			failure = true;	
+		}	
+	}
+
+
+	if(failure){
 		discard(pktRTS_, DROP_MAC_RETRY_COUNT_EXCEEDED); pktRTS_ = 0;
 		/* tell the callback the send operation failed 
 		   before discarding the packet */
@@ -1042,7 +1133,24 @@
                         ch->xmit_failure_(pktTx_->copy(),
                                           ch->xmit_failure_data_);
                 }
+
+		if (ceh != 0){
+			Packet* p2 = pktTx_->copy();
+			click_wifi_extra* ceh2 = getWifiExtra(p2);
+			ceh2->flags |= WIFI_EXTRA_TX_FAIL;
+			ceh2->flags |= WIFI_EXTRA_TX;
+			struct hdr_cmn* ch2 = HDR_CMN(p2); 
+			ch2->direction() = hdr_cmn::UP; 
+			//printf("(%d)....discarding RTS:%x\n",index_,pktRTS_);
 		discard(pktTx_, DROP_MAC_RETRY_COUNT_EXCEEDED); 
+			uptarget_->recv(p2, (Handler*) 0);
+		
+		} else {
+			//printf("(%d)....discarding RTS:%x\n",index_,pktRTS_);
+			discard(pktTx_, DROP_MAC_RETRY_COUNT_EXCEEDED); 
+		}
+		
+		pktRTS_ = 0;
 		pktTx_ = 0;
 		ssrc_ = 0;
 		rst_cw();
@@ -1099,7 +1207,44 @@
 
 	(*rcount)++;
 
-	if(*rcount >= thresh) {
+	bool failure = false;
+	double count = *rcount;
+	click_wifi_extra* ceh = getWifiExtra(pktTx_);
+
+	if ((ceh != 0) && (ceh->max_tries != 0)){
+		ceh->retries = (*rcount);
+			
+		if (count <= ceh->max_tries){
+			double rate = ((short int)(ceh->rate))*500000; 
+			ch->txtime() = txtime(ch->size(),rate);
+			pktTx_->txinfo_.setRate(rate);
+		} else if ( (count-=ceh->max_tries) <= ceh->max_tries1 ){
+			double rate = ((short int)(ceh->rate1))*500000; 
+			ch->txtime() = txtime(ch->size(),rate);
+			pktTx_->txinfo_.setRate(rate);
+			ceh->flags |= WIFI_EXTRA_TX_USED_ALT_RATE;
+		} else if ( (count-=ceh->max_tries1) <= ceh->max_tries2 ){
+			double rate = ((short int)(ceh->rate2))*500000; 
+			ch->txtime() = txtime(ch->size(),rate);
+			pktTx_->txinfo_.setRate(rate);
+			ceh->flags |= WIFI_EXTRA_TX_USED_ALT_RATE;
+		} else if ( (count-=ceh->max_tries2) <= ceh->max_tries3 ){
+			double rate = ((short int)(ceh->rate3))*500000; 
+			ch->txtime() = txtime(ch->size(),rate);
+			pktTx_->txinfo_.setRate(rate);
+			ceh->flags |= WIFI_EXTRA_TX_USED_ALT_RATE;
+		} else {
+			failure = true;	
+		}
+		
+	} else {
+		if(*rcount >= thresh) {
+			failure = true;	
+		}	
+	}
+
+	//if(*rcount >= thresh) {
+	if(failure){
 		/* IEEE Spec section 9.2.3.5 says this should be greater than
 		   or equal */
 		macmib_.FailedCount++;
@@ -1113,7 +1258,24 @@
                                           ch->xmit_failure_data_);
                 }
 
-		discard(pktTx_, DROP_MAC_RETRY_COUNT_EXCEEDED); 
+		if (ceh != 0){
+			Packet* p2 = pktTx_->copy();
+			click_wifi_extra* ceh2 = getWifiExtra(p2);
+			ceh2->flags |= WIFI_EXTRA_TX_FAIL;
+			ceh2->flags |= WIFI_EXTRA_TX;
+			struct hdr_cmn* ch2 = HDR_CMN(p2); 
+			ch2->direction() = hdr_cmn::UP; 
+			
+			// drop packet first
+			discard(pktTx_, DROP_MAC_RETRY_COUNT_EXCEEDED); 
+			// send feedback to madwifi 
+			uptarget_->recv(p2, (Handler*) 0);
+		
+		} else {
+			discard(pktTx_, DROP_MAC_RETRY_COUNT_EXCEEDED); 
+			//printf("(%d)DATA discarded: count exceeded\n",index_);
+		}
+		
 		pktTx_ = 0;
 		*rcount = 0;
 		rst_cw();
@@ -1122,7 +1284,13 @@
 		struct hdr_mac802_11 *dh;
 		dh = HDR_MAC802_11(pktTx_);
 		dh->dh_fc.fc_retry = 1;
-
+		
+		// nletor
+		click_wifi* cwh = getWifi(pktTx_);
+		if (cwh != 0){
+			cwh->i_fc[1] |= WIFI_FC1_RETRY;	
+		}
+		//!nletor 
 
 		sendRTS(ETHER_ADDR(mh->dh_ra));
 		inc_cw();
@@ -1210,6 +1378,8 @@
 	 *
 	 */
 
+	click_wifi_extra* rceh = getWifiExtra(p);
+
 	/*
 	 *  If the interface is currently in transmit mode, then
 	 *  it probably won't even see this packet.  However, the
@@ -1219,6 +1389,9 @@
 	 */
 	if(tx_active_ && hdr->error() == 0) {
 		hdr->error() = 1;
+		if(rceh != 0 && hdr->error()){
+			rceh->flags |= WIFI_EXTRA_RX_ERR;
+		}
 	}
 
 	if(rx_state_ == MAC_IDLE) {
@@ -1298,8 +1471,12 @@
 
         /* tap out - */
         if (tap_ && type == MAC_Type_Data &&
-            MAC_Subtype_Data == subtype ) 
-		tap_->tap(pktRx_);
+            MAC_Subtype_Data == subtype ) {
+		if (!tap_filterown_ ||
+		    ((dst != (u_int32_t)index_) && (dst != MAC_BROADCAST))) {
+			tap_->tap(pktRx_);
+		}
+	}
 	/*
 	 * Adaptive Fidelity Algorithm Support - neighborhood infomation 
 	 * collection
@@ -1470,6 +1647,7 @@
 	 * Adjust the MAC packet size - ie; strip
 	 * off the mac header
 	 */
+	click_wifi_extra* rceh = getWifiExtra(p);
 	ch->size() -= phymib_.getHdrLen11();
 	ch->num_forwards() += 1;
 
@@ -1477,7 +1655,9 @@
 	 *  If we sent a CTS, clean up...
 	 */
 	if(dst != MAC_BROADCAST) {
-		if(size >= macmib_.getRTSThreshold()) {
+		//if(size >= macmib_.getRTSThreshold()) {
+		if ( 	(!rceh && size >= macmib_.getRTSThreshold()) ||
+			 	( rceh && pktCTRL_)){
 			if (tx_state_ == MAC_CTS) {
 				assert(pktCTRL_);
 				Packet::free(pktCTRL_); pktCTRL_ = 0;
@@ -1585,6 +1765,17 @@
 	}
 	assert(pktTx_);
 
+	// nletor
+	Packet* p2 = 0;	//prepare feedback WIFI_EXTRA_TX
+	click_wifi_extra* ceh = getWifiExtra(pktTx_);
+	if (ceh != 0){
+		p2 = pktTx_->copy();
+		click_wifi_extra* ceh2 = getWifiExtra(p2);
+		ceh2->flags |= WIFI_EXTRA_TX;
+		struct hdr_cmn* ch2 = HDR_CMN(p2); 
+		ch2->direction() = hdr_cmn::UP; 
+	} 
+	//!nletor
 	mhSend_.stop();
 
 	/*
@@ -1612,4 +1803,9 @@
 	tx_resume();
 
 	mac_log(p);
+	// nletor
+	if (p2 != 0 ){
+		uptarget_->recv(p2, (Handler*) 0);	// send feedback WIFI_EXTRA_TX
+	}
+	//!nletor
 }
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/mac/mac-802_11.h ns-2.30/mac/mac-802_11.h
--- ns-2.30-pure/mac/mac-802_11.h	2006-09-24 22:11:19.000000000 -0700
+++ ns-2.30/mac/mac-802_11.h	2007-09-11 21:04:07.000000000 -0700
@@ -43,7 +43,6 @@
 // Added by Sushmita to support event tracing (singal@nunki.usc.edu)
 #include "address.h"
 #include "ip.h"
-
 #include "mac-timers.h"
 #include "marshall.h"
 #include <math.h>
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/mac/mac-802_3.cc ns-2.30/mac/mac-802_3.cc
--- ns-2.30-pure/mac/mac-802_3.cc	2006-09-24 22:11:19.000000000 -0700
+++ ns-2.30/mac/mac-802_3.cc	2007-09-11 21:04:07.000000000 -0700
@@ -298,10 +298,6 @@
 	hdr_mac *mh= HDR_MAC(p);
 	int dst= mh->macDA();
 
-	if ((dst != BCAST_ADDR) && (dst != index_)) {
-		Packet::free(p);
-		goto done;
-	}
 	/* Strip off the mac header and padding if any */
 	ch->size() -= (ETHER_HDR_LEN + mh->padding_);
 
@@ -314,6 +310,19 @@
 		goto done;
 	}
 
+	/* tap out - */
+	if (tap_) {
+		if (!tap_filterown_ ||
+		    ((dst != index_) && (dst != BCAST_ADDR))) {
+			tap_->tap(p);
+		}
+	}
+
+
+	if ((dst != BCAST_ADDR) && (dst != index_)) {
+		Packet::free(p);
+		goto done;
+	}
 
 	/* we could schedule an event to account for mac-delay */
 	
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/mac/mac.h ns-2.30/mac/mac.h
--- ns-2.30-pure/mac/mac.h	2006-09-24 22:11:19.000000000 -0700
+++ ns-2.30/mac/mac.h	2007-09-11 21:04:07.000000000 -0700
@@ -177,7 +177,10 @@
 	virtual void sendUp(Packet *p);
 
 	virtual void resume(Packet* p = 0);
-	virtual void installTap(Tap *t) { tap_ = t; }
+	virtual void installTap(Tap *t,bool filterown = false) {
+		tap_ = t;
+		tap_filterown_ = filterown;
+	}
 	
 	inline double txtime(int bytes) {
 		return (8. * bytes / bandwidth_);
@@ -231,6 +234,7 @@
         
 	Phy *netif_;            // network interface
         Tap *tap_;              // tap agent
+	bool tap_filterown_;    // filter tap packets destined for use anyhow
 	LL *ll_;             	// LL this MAC is connected to
 	Channel *channel_;	// channel this MAC is connected to
 
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/mac/phy.cc ns-2.30/mac/phy.cc
--- ns-2.30-pure/mac/phy.cc	2006-09-24 22:11:19.000000000 -0700
+++ ns-2.30/mac/phy.cc	2007-09-11 21:04:07.000000000 -0700
@@ -68,6 +68,16 @@
 			tcl.resultf("%d", index_);
 			return TCL_OK;
 		}
+		
+		if (strcmp(argv[1],"getchannel") == 0) {
+			if (channel_) {
+				tcl.resultf("%s",channel_->name());
+			}
+			else {
+				tcl.resultf("%s","");
+			}
+			return TCL_OK;
+		}
 	}
 
 	else if(argc == 3) {
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/mac/wireless-phy.cc ns-2.30/mac/wireless-phy.cc
--- ns-2.30-pure/mac/wireless-phy.cc	2006-09-24 22:11:19.000000000 -0700
+++ ns-2.30/mac/wireless-phy.cc	2007-09-11 21:04:07.000000000 -0700
@@ -37,9 +37,13 @@
  * Ported from CMU/Monarch's code, nov'98 -Padma Haldar.
  * wireless-phy.cc
  */
-
+/*
+ *	Modified by Nicolas Letor to support wifi elements.
+ * 	Performance Analysis of Telecommunication Systems (PATS) research group,
+ * 	Interdisciplinary Institute for Broadband Technology (IBBT) & Universiteit Antwerpen.
+ */
 #include <math.h>
-
+#include <limits>
 #include <packet.h>
 
 #include <mobilenode.h>
@@ -54,6 +58,8 @@
 #include <trace.h>
 
 #include "diffusion/diff_header.h"
+#include "rawpacket.h"
+#include "packet_anno.h"
 
 #define MAX(a,b) (((a)<(b))?(b):(a))
 
@@ -99,6 +105,28 @@
 	bind("freq_", &freq_);
 	bind("L_", &L_);
 	
+	// nletor -- multirate madwifi configuration
+	RateCount_ = 0;
+	bind("RateCount_",&RateCount_);
+	if (RateCount_ > 0) {
+		//ratelist = RateList(RateCount_);
+		//rxlist = RXList(RateCount_);
+		char buffer[32];
+		for (int i=0; i< RateCount_; i++) {
+				double rate;
+				sprintf(buffer,"Rate%d",i);
+				bind_bw(buffer,&rate);
+				ratelist.push_back(rate);
+				
+				double thr;
+				sprintf(buffer,"RXThresh%d",i);
+				bind(buffer,&thr);
+				rxlist.push_back(thr);
+		}
+
+	}
+	//!nletor
+
 	lambda_ = SPEED_OF_LIGHT / freq_;
 
 	node_ = 0;
@@ -134,6 +162,7 @@
 WirelessPhy::command(int argc, const char*const* argv)
 {
 	TclObject *obj; 
+	Tcl& tcl = Tcl::instance();
 
 	if (argc==2) {
 		if (strcasecmp(argv[1], "NodeOn") == 0) {
@@ -156,7 +185,11 @@
 				update_energy_time_ = NOW;
 			}
 			return TCL_OK;
+		} else if (strcasecmp(argv[1], "getantenna") == 0) {
+			tcl.result(ant_->name());
+			return TCL_OK;
 		}
+
 	} else if(argc == 3) {
 		if (strcasecmp(argv[1], "setTxPower") == 0) {
 			Pt_consume_ = atof(argv[2]);
@@ -196,6 +229,9 @@
 	return Phy::command(argc,argv);
 }
  
+click_wifi_extra* 
+getWifiExtra(Packet* p);
+
 void 
 WirelessPhy::sendDown(Packet *p)
 {
@@ -310,6 +346,22 @@
 	 */
 	assert(initialized());
 
+	unsigned char* pdat = p->accessdata();
+	
+	click_wifi_extra *ceh = 0;
+	struct hdr_cmn* chdr = HDR_CMN(p);
+	if (chdr->ptype() == PT_RAW){
+		hdr_raw* rhdr = hdr_raw::access(p);
+		if (rhdr->subtype == hdr_raw::MADWIFI) {
+			ceh = (click_wifi_extra*)(p->accessdata());
+			u_int8_t rate = ceh->rate;
+			memset(ceh,0,sizeof(click_wifi_extra));
+			ceh->rate = int(p->txinfo_.getRate()/500000);
+			ceh->magic = WIFI_EXTRA_MAGIC;
+			//printf("Rate is %e Rate is %i and %i %i \n",p->txinfo_.getRate(),rate,int(p->txinfo_.getRate()/500000),ceh->rate);
+		} 
+	} 
+
 	PacketStamp s;
 	double Pr;
 	int pkt_recvd = 0;
@@ -340,11 +392,36 @@
 	if(propagation_) {
 		s.stamp((MobileNode*)node(), ant_, 0, lambda_);
 		Pr = propagation_->Pr(&p->txinfo_, &s, this);
+		if(ceh != 0){	
+			//analog to atheros formule -95dBm is lowest sens.
+			double LPr = (10 * log(Pr * 1000));
+			double LRXThr = (10 * log(RXThresh_ * 1000));
+			if (LPr < numeric_limits<double>::infinity()){
+				ceh->rssi = (short int)( (LPr - LRXThr ) * (60.0/100.0) );	
+				ceh->rssi = (ceh->rssi > 60) ? 60 : ceh->rssi;
+			} else {
+				ceh->rssi = 60;
+			}			
+		}
+
 		if (Pr < CSThresh_) {
 			pkt_recvd = 0;
 			goto DONE;
 		}
-		if (Pr < RXThresh_) {
+
+
+		double RXThr = RXThresh_; //rxlist[RateCount_ - 1];
+		
+		// compare to correct rate,moet nog aan gesleuteld worden
+		for (int i = 0; i < RateCount_; i++){
+			if (ratelist[i] >= p->txinfo_.getRate()){
+				RXThr = rxlist[i]; 	
+			}	
+		}
+		//printf("Rate is %e Pr is %e RXThr is %e\n",p->txinfo_.getRate(),Pr,RXThr);
+		
+		if (RateCount_ > 0 ) { 
+			if (Pr < RXThr) {
 			/*
 			 * We can detect, but not successfully receive
 			 * this packet.
@@ -358,10 +435,29 @@
 			       Pr,RXThresh);
 #endif
 		}
+		} else {
+			if (Pr < RXThresh_) {
+				/*
+				 * We can detect, but not successfully receive
+				 * this packet.
+				 */
+				hdr_cmn *hdr = HDR_CMN(p);
+				hdr->error() = 1;
+			#if DEBUG > 3
+				printf("SM %f.9 _%d_ drop pkt from %d low POWER %e/%e\n",
+				       Scheduler::instance().clock(), node()->index(),
+				       p->txinfo_.getNode()->index(),
+				       Pr,RXThresh);
+			#endif
+			}
+		}
 	}
 	if(modulation_) {
 		hdr_cmn *hdr = HDR_CMN(p);
 		hdr->error() = modulation_->BitError(Pr);
+		if(ceh != 0){
+			ceh->flags |= WIFI_EXTRA_RX_ERR;	
+		}
 	}
 	
 	/*
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/mac/wireless-phy.h ns-2.30/mac/wireless-phy.h
--- ns-2.30-pure/mac/wireless-phy.h	2006-09-24 22:11:19.000000000 -0700
+++ ns-2.30/mac/wireless-phy.h	2007-09-11 21:04:07.000000000 -0700
@@ -42,6 +42,11 @@
 #ifndef ns_WirelessPhy_h
 #define ns_WirelessPhy_h
 
+#include <vector>
+#include <map>
+typedef std::vector< double > RateList;
+typedef std::vector< double > RXList;
+
 #include "propagation.h"
 #include "modulation.h"
 #include "omni-antenna.h"
@@ -118,6 +123,7 @@
 	double RXThresh_;	// receive power threshold (W)
 	double CSThresh_;	// carrier sense threshold (W)
 	double CPThresh_;	// capture threshold (db)
+  	int RateCount_;		// number of rates
   
 	Antenna *ant_;
 	Propagation *propagation_;	// Propagation Model
@@ -143,6 +149,8 @@
 
 	friend class Sleep_Timer;
 
+	RateList ratelist;
+	RXList rxlist;
 };
 
 #endif /* !ns_WirelessPhy_h */
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/mobile/pattern-antenna.cc ns-2.30/mobile/pattern-antenna.cc
--- ns-2.30-pure/mobile/pattern-antenna.cc	1969-12-31 16:00:00.000000000 -0800
+++ ns-2.30/mobile/pattern-antenna.cc	2007-09-11 21:04:07.000000000 -0700
@@ -0,0 +1,238 @@
+
+/*
+ * Copyright (c) 2003 University of Colorado, Boulder
+ * All rights reserved.
+ *
+ */
+
+#include <antenna.h>
+#include <pattern-antenna.h> 
+#include <math.h>
+#include <iostream>
+#include <fstream>
+#include <string>
+
+static class PatternAntennaClass : public TclClass {
+public:
+  PatternAntennaClass() : TclClass("Antenna/PatternAntenna") {}
+  TclObject* create(int, const char*const*) {
+    return (new PatternAntenna);
+  }
+} class_PatternAntenna;
+
+PatternAntenna::PatternAntenna() {
+  Dir_ = 0.0;
+  bind("Dir_", &Dir_);
+}
+
+double
+PatternAntenna::normalize(double deg) {
+  while (360.0 <= deg) {
+    deg -= 360.0;
+  }
+
+  while (0.0 > deg) {
+    deg += 360.0;
+  }
+
+  return deg;
+}
+
+double
+PatternAntenna::get_angle(double dX, double dY) {
+  double angle;
+
+  // First take care of dX or both == 0
+  if ((0.0 == dY) && (0.0 == dX)) {
+    angle = 0.0;
+  }
+  else if (0.0 == dX) {
+    angle = M_PI/2.0;
+  }
+  else {
+    angle = atan2(dY,dX);
+    if (0.0 > angle) {
+      angle += 2*M_PI;
+    }
+  }
+
+  angle = (180.0/M_PI) * angle;
+
+  return angle;
+}
+
+PatternAntenna::gain_pattern::gain_pattern() {
+  samplecount_ = 0;
+  samples_ = 0;
+}
+
+PatternAntenna::gain_pattern::~gain_pattern() {
+  if (samples_) {
+    free(samples_);
+    samples_ = 0;
+  }
+}
+
+void
+PatternAntenna::gain_pattern::set_gain_pattern(int samplecount,double* samples)
+{
+  if (samples_) {
+    free(samples_);
+    samples_ = 0;
+    samplecount = 0;
+  }
+  samples_ = (double*)malloc(samplecount*sizeof(double));
+  samplecount_ = samplecount;
+  sample_quantum_ = 360.0/samplecount_;
+  memcpy(samples_,samples,samplecount*sizeof(double));
+}
+
+double
+PatternAntenna::gain_pattern::get_gain(double angle) {
+  // Find closest sample to angle.
+  // XXX Maybe interpolate between samples at some point?
+  int whichsamp = ( (int)((angle/sample_quantum_) + 0.5) ) % samplecount_;
+  return samples_[whichsamp];
+}
+
+void
+PatternAntenna::gain_pattern::copy_pattern(gain_pattern& pat) {
+  set_gain_pattern(pat.samplecount_,pat.samples_);
+}
+
+// return the gain for a signal to a node at vector dX, dY, dZ
+// from the transmitter at wavelength lambda  
+double
+PatternAntenna::getTxGain(double dX, double dY, double dZ, double l) {
+  double angle = get_angle(dX,dY);
+  return horiz_tx_gain_.get_gain(angle);
+}
+
+// return the gain for a signal from a node at vector dX, dY, dZ
+// from the receiver at wavelength lambda
+double
+PatternAntenna::getRxGain(double dX, double dY, double dZ, double l) {
+  double angle = get_angle(dX,dY);
+  return horiz_rx_gain_.get_gain(angle);
+}
+
+void
+PatternAntenna::setHorizRxGainPattern(int samplecount, double* samples) {
+  horiz_rx_gain_.set_gain_pattern(samplecount,samples);
+}
+
+
+void
+PatternAntenna::setHorizTxGainPattern(int samplecount, double* samples) {
+  horiz_tx_gain_.set_gain_pattern(samplecount,samples);
+}
+
+
+// return a pointer to a copy of this antenna that will return the 
+// same thing for get{Rx,Tx}Gain that this one would at this point
+// in time.  This is needed b/c if a pkt is sent with a directable
+// antenna, this antenna may be have been redirected by the time we
+// call getTxGain on the copy to determine if the pkt is received.  
+Antenna*
+PatternAntenna::copy() {
+  PatternAntenna* antcopy =
+    (PatternAntenna*)TclObject::New("Antenna/PatternAntenna");
+  antcopy->horiz_rx_gain_.copy_pattern(horiz_rx_gain_);
+  antcopy->horiz_tx_gain_.copy_pattern(horiz_tx_gain_);
+  return antcopy;
+}
+
+void
+PatternAntenna::release() {
+  TclObject::Delete((TclObject*)this);
+}
+
+int
+PatternAntenna::read_pattern_from_msi(const char* msifile) {
+  // XXX This code is by no means great. It is simplistic
+  // and fragile, but I think it'll work well enough for the
+  // simplistic kinds of tasks we'll give it.
+  double gain;
+  double* hpoints = 0;
+  int hpointcount = 0;
+  string units;
+  string nxttok;
+  int i = 0;
+  int result = 0;
+  int finalresult = 0;
+  ifstream msistrm(msifile);
+  // MSI uses 0 deg as due north, we have 0 deg as due east (and 90 as N).
+  // Add 90 deg to MSI numbers to fix this.
+  int hoffset = 90;
+  // MSI can use either dBd or dBi. I believe that ns-2 uses dBi.
+  // We'll set this appropriately when we get the units.
+  double gainoffset = 0.0;
+
+  if (!msistrm) {
+    return -1;
+  }
+
+  while (!msistrm.eof()) {
+    msistrm >> nxttok;
+
+    if (msistrm.eof()) {
+      continue;
+    }
+    else if ("GAIN" == nxttok) {
+      msistrm >> gain;
+      msistrm >> units;
+      //cout << "GAIN " << gain  << " " << units << endl;
+      gainoffset = 0.0;
+      if ("dBd" == units) {
+	gainoffset = 2.15;
+      }
+    }
+    else if ("HORIZONTAL" == nxttok) {
+      msistrm >> hpointcount;
+      //cout << "Horizontal pointcount: " << hpointcount << endl;
+      hpoints = (double*) malloc(hpointcount*sizeof(double));
+      for (i=0;i<hpointcount;i++) {
+	double index = 0;
+	double curpoint = 0;
+	msistrm >> index;
+	msistrm >> curpoint;
+	//cout << "POINTS: " << index << " " << curpoint << endl;
+	int hindx = (i + hoffset) % 360;
+	if (0 > hindx) hindx += 360;
+	hpoints[hindx] = gain - curpoint + gainoffset;
+      }
+    }
+  }
+
+  if (hpoints) {
+    if (hpointcount) {
+      // Assume same gain for Tx and Rx
+      setHorizRxGainPattern(hpointcount,hpoints);
+      setHorizTxGainPattern(hpointcount,hpoints);
+    }
+    free(hpoints);
+    hpoints = 0;
+    hpointcount = 0;
+  }
+  return finalresult;
+}
+
+int
+PatternAntenna::command(int argc, const char*const* argv)
+{
+  Tcl& tcl = Tcl::instance();
+  if (2 == argc) {
+  }
+  else if (3 == argc) {
+    if(strcmp(argv[1], "loadmsi") == 0) {
+      int result = read_pattern_from_msi(argv[2]);
+      tcl.resultf("%d",result);
+      return TCL_OK;
+    }
+  }
+  else if (4 == argc) {
+  } else if (argc == 5) {
+  }
+
+  return Antenna::command(argc, argv);
+}
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/mobile/pattern-antenna.h ns-2.30/mobile/pattern-antenna.h
--- ns-2.30-pure/mobile/pattern-antenna.h	1969-12-31 16:00:00.000000000 -0800
+++ ns-2.30/mobile/pattern-antenna.h	2007-09-11 21:04:07.000000000 -0700
@@ -0,0 +1,65 @@
+/*
+ * Copyright (c) 2003 University of Colorado, Boulder
+ * All rights reserved.
+ *
+ */
+
+#ifndef ns_patternantenna_h
+#define ns_patternantenna_h
+
+#include <antenna.h>
+
+class PatternAntenna : public Antenna {
+
+public:
+  PatternAntenna();
+  virtual int command(int argc, const char*const* argv);
+  // return the gain for a signal to a node at vector dX, dY, dZ
+  // from the transmitter at wavelength lambda  
+  virtual double getTxGain(double, double, double, double);
+
+  // return the gain for a signal from a node at vector dX, dY, dZ
+  // from the receiver at wavelength lambda
+  virtual double getRxGain(double, double, double, double);
+
+  // return a pointer to a copy of this antenna that will return the 
+  // same thing for get{Rx,Tx}Gain that this one would at this point
+  // in time.  This is needed b/c if a pkt is sent with a directable
+  // antenna, this antenna may be have been redirected by the time we
+  // call getTxGain on the copy to determine if the pkt is received.  
+  virtual Antenna* copy();
+  virtual void release();
+
+  void setDir(double newdir) { Dir_ = newdir; }
+  double getDir() { return Dir_; }
+
+  void setHorizRxGainPattern(int samplecount, double* samples);
+  void setHorizTxGainPattern(int samplecount, double* samples);
+
+  static double get_angle(double dX, double dY);
+  static double normalize(double deg);
+
+  int read_pattern_from_msi(const char* msifile);
+
+protected:
+  double Dir_;
+  typedef class gain_pattern {
+  public:
+    gain_pattern();
+    ~gain_pattern();
+    void set_gain_pattern(int samplecount, double* samples);
+    double get_gain(double angle);
+    void copy_pattern(gain_pattern& pat);
+
+  protected:
+    int samplecount_;
+    double* samples_;
+    double sample_quantum_;
+  };
+
+  gain_pattern horiz_tx_gain_;
+  gain_pattern horiz_rx_gain_;
+};
+
+
+#endif // ns_uniantenna_h
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/mobile/uni-antenna.cc ns-2.30/mobile/uni-antenna.cc
--- ns-2.30-pure/mobile/uni-antenna.cc	1969-12-31 16:00:00.000000000 -0800
+++ ns-2.30/mobile/uni-antenna.cc	2007-09-11 21:04:07.000000000 -0700
@@ -0,0 +1,197 @@
+
+/* -*-	Mode:C++; c-basic-offset:8; tab-width:8; indent-tabs-mode:t -*- */
+/*
+ * Copyright (c) 1997 Regents of the University of California.
+ * All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in the
+ *    documentation and/or other materials provided with the distribution.
+ * 3. All advertising materials mentioning features or use of this software
+ *    must display the following acknowledgement:
+ *	This product includes software developed by the Daedalus Research
+ *	Group at the University of California Berkeley.
+ * 4. Neither the name of the University nor of the Laboratory may be used
+ *    to endorse or promote products derived from this software without
+ *    specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+ * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
+ * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
+ * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
+ * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
+ * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
+ * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
+ * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
+ * SUCH DAMAGE.
+
+ * Ported from CMU/Monarch's code, nov'98 -Padma.
+   omni-antenna.cc
+   */
+
+#include <antenna.h>
+#include <uni-antenna.h> 
+#include <math.h>
+
+static class UniAntennaClass : public TclClass {
+public:
+  UniAntennaClass() : TclClass("Antenna/UniAntenna") {}
+  TclObject* create(int, const char*const*) {
+    return (new UniAntenna);
+  }
+} class_UniAntenna;
+
+UniAntenna::UniAntenna() : is_copy_(false) {
+  Gt_ = 1.0;
+  Gr_ = 1.0;
+  GtOmni_ = 0.0;
+  GrOmni_ = 0.0;
+  Dir_ = 0.0;
+  Width_ = 360.0;
+  bind("Gt_", &Gt_);
+  bind("Gr_", &Gr_);
+  bind("GtOmni_", &GtOmni_);
+  bind("GrOmni_", &GrOmni_);
+  bind("Dir_", &Dir_);
+  bind("Width_", &Width_);
+}
+
+double
+UniAntenna::normalize(double deg) {
+  while (360.0 <= deg) {
+    deg -= 360.0;
+  }
+
+  while (0.0 > deg) {
+    deg += 360.0;
+  }
+
+  return deg;
+}
+
+double
+UniAntenna::get_angle(double dX, double dY) {
+  double angle;
+
+  // First take care of dX or both == 0
+  if ((0.0 == dY) && (0.0 == dX)) {
+    angle = 0.0;
+  }
+  else if (0.0 == dX) {
+    angle = M_PI/2.0;
+  }
+  else {
+    angle = atan2(dY,dX);
+    if (0.0 > angle) {
+      angle += 2*M_PI;
+    }
+  }
+
+  angle = (180.0/M_PI) * angle;
+
+  return angle;
+}
+
+void
+UniAntenna::get_cone(double& lb, double& ub) {
+  lb = Dir_ - (Width_/2.0);
+  ub = Dir_ + (Width_/2.0);
+  lb = normalize(lb);
+  ub = normalize(ub);
+}
+
+bool
+UniAntenna::is_in_cone(double dX, double dY) {
+  bool result = false;
+  double angle = get_angle(dX,dY);
+  double lb, ub;
+  get_cone(lb,ub);
+
+  // If lb and ub are swapped, we had a wraparound. In this
+  // case, the specified range is the inverse of the cone
+  // we want to check for.
+  if (lb > ub) {
+    result = ! ((ub <= angle) && (angle <= lb));
+  }
+  else if (lb == ub) {
+    result = true;
+  }
+  else {
+    result = (lb <= angle) && (angle <= ub);
+  }
+
+  return result;
+}
+
+// return the gain for a signal to a node at vector dX, dY, dZ
+// from the transmitter at wavelength lambda  
+double
+UniAntenna::getTxGain(double dX, double dY, double dZ, double l) {
+  // XXX for now ignore dZ, just do 2 dimensions, and ignore lambda, too
+  double gain = Gt_;
+
+  // XXX very stupid model. Gt_ gain within cone, GtOmni_ outside.
+  // Hopefully good enough for what we need initially...
+  if (is_in_cone(dX,dY)) {
+    gain = Gt_;
+  }
+  else {
+    gain = GtOmni_;
+  }
+  
+  return gain;
+}
+
+// return the gain for a signal from a node at vector dX, dY, dZ
+// from the receiver at wavelength lambda
+double
+UniAntenna::getRxGain(double dX, double dY, double dZ, double l) {
+  // XXX for now ignore dZ, just do 2 dimensions, and ignore lambda, too.
+  double gain = Gr_;
+
+  // XXX very stupid model. Gr_ gain within cone, GrOmni_ outside.
+  // Hopefully good enough for what we need initially...
+  if (is_in_cone(dX,dY)) {
+    gain = Gr_;
+  }
+  else {
+    gain = GrOmni_;
+  }
+
+  return gain;
+}
+
+// return a pointer to a copy of this antenna that will return the 
+// same thing for get{Rx,Tx}Gain that this one would at this point
+// in time.  This is needed b/c if a pkt is sent with a directable
+// antenna, this antenna may be have been redirected by the time we
+// call getTxGain on the copy to determine if the pkt is received.  
+Antenna*
+UniAntenna::copy() {
+  UniAntenna* antcopy = (UniAntenna*)TclObject::New("Antenna/UniAntenna");
+  antcopy->X_ = X_;
+  antcopy->Y_ = Y_;
+  antcopy->Z_ = Z_;
+  antcopy->Gt_ = Gt_;
+  antcopy->Gr_ = Gr_;
+  antcopy->Dir_ = Dir_;
+  antcopy->Width_ = Width_;
+  antcopy->is_copy_ = true;
+  return antcopy;
+}
+
+void
+UniAntenna::release() {
+  if (is_copy_) {
+    TclObject::Delete((TclObject*)this);
+  }
+}
+
+
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/mobile/uni-antenna.h ns-2.30/mobile/uni-antenna.h
--- ns-2.30-pure/mobile/uni-antenna.h	1969-12-31 16:00:00.000000000 -0800
+++ ns-2.30/mobile/uni-antenna.h	2007-09-11 21:04:07.000000000 -0700
@@ -0,0 +1,82 @@
+/* -*-	Mode:C++; c-basic-offset:8; tab-width:8; indent-tabs-mode:t -*- */
+/*
+ * Copyright (c) 1997 Regents of the University of California.
+ * All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in the
+ *    documentation and/or other materials provided with the distribution.
+ * 3. All advertising materials mentioning features or use of this software
+ *    must display the following acknowledgement:
+ *	This product includes software developed by the Computer Systems
+ *	Engineering Group at Lawrence Berkeley Laboratory.
+ * 4. Neither the name of the University nor of the Laboratory may be used
+ *    to endorse or promote products derived from this software without
+ *    specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+ * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
+ * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
+ * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
+ * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
+ * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
+ * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
+ * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
+ * SUCH DAMAGE.
+ */
+/* Ported from CMU/Monarch's code, nov'98 -Padma.
+   omni-antenna.h
+   omni-directional antenna
+
+*/
+
+#ifndef ns_uniantenna_h
+#define ns_uniantenna_h
+
+#include <antenna.h>
+
+class UniAntenna : public Antenna {
+
+public:
+  UniAntenna();
+
+  // return the gain for a signal to a node at vector dX, dY, dZ
+  // from the transmitter at wavelength lambda  
+  virtual double getTxGain(double, double, double, double);
+
+  // return the gain for a signal from a node at vector dX, dY, dZ
+  // from the receiver at wavelength lambda
+  virtual double getRxGain(double, double, double, double);
+
+  // return a pointer to a copy of this antenna that will return the 
+  // same thing for get{Rx,Tx}Gain that this one would at this point
+  // in time.  This is needed b/c if a pkt is sent with a directable
+  // antenna, this antenna may be have been redirected by the time we
+  // call getTxGain on the copy to determine if the pkt is received.  
+  virtual Antenna* copy();
+  virtual void release();
+
+  static double get_angle(double dX, double dY);
+  static double normalize(double deg);
+  bool is_in_cone(double dX, double dY);
+  void get_cone(double& lb,double& ub);
+
+protected:
+  double Gt_;			// gain of transmitter (db)
+  double Gr_;			// gain of receiver (db)
+  double GtOmni_;               // Tx gain outside of cone
+  double GrOmni_;               // Rx gain outside of cone
+  double Dir_;
+  double Width_;
+  bool is_copy_;
+};
+
+
+#endif // ns_uniantenna_h
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/queue/clickqueue.cc ns-2.30/queue/clickqueue.cc
--- ns-2.30-pure/queue/clickqueue.cc	1969-12-31 16:00:00.000000000 -0800
+++ ns-2.30/queue/clickqueue.cc	2007-09-11 22:23:31.000000000 -0700
@@ -0,0 +1,144 @@
+/*
+ * clickqueue.cc
+ * Special queue which runs the external Click router when it unblocks
+ *
+ */
+
+/*****************************************************************************
+ *  Copyright 2002, Univerity of Colorado at Boulder.                        *
+ *                                                                           *
+ *                        All Rights Reserved                                *
+ *                                                                           *
+ *  Permission to use, copy, modify, and distribute this software and its    *
+ *  documentation for any purpose other than its incorporation into a        *
+ *  commercial product is hereby granted without fee, provided that the      *
+ *  above copyright notice appear in all copies and that both that           *
+ *  copyright notice and this permission notice appear in supporting         *
+ *  documentation, and that the name of the University not be used in        *
+ *  advertising or publicity pertaining to distribution of the software      *
+ *  without specific, written prior permission.                              *
+ *                                                                           *
+ *  UNIVERSITY OF COLORADO DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS      *
+ *  SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND        *
+ *  FITNESS FOR ANY PARTICULAR PURPOSE.  IN NO EVENT SHALL THE UNIVERSITY    *
+ *  OF COLORADO BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL         *
+ *  DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA       *
+ *  OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER        *
+ *  TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR         *
+ *  PERFORMANCE OF THIS SOFTWARE.                                            *
+ *                                                                           *
+ ****************************************************************************/
+
+#include <stdlib.h>
+#include <ctype.h>
+#include <sys/time.h>
+#include <unistd.h>
+//#include <stl.h>
+//#include <hash_map.h>
+#include <map>
+#include <math.h>
+#include <string>
+#include <click/simclick.h>
+#include "packet.h"
+#include "extrouter.h"
+#include "classifier.h"
+#include "classifier-ext.h"
+#include "classifier-click.h"
+#include "clickqueue.h"
+
+static class ClickQueueClass : public TclClass {
+public:
+	ClickQueueClass() : TclClass("Queue/ClickQueue") {}
+	TclObject* create(int, const char*const*) {
+		return (new ClickQueue);
+	}
+} class_click_queue;
+
+int 
+ClickQueue::command(int argc, const char*const* argv) {
+	if (3 == argc) {
+		if (!strcmp(argv[1],"setclickclassifier")) {
+			cc_ = (ClickClassifier*)TclObject::lookup(argv[2]);
+			return TCL_OK;
+		}
+	}
+	return Queue::command(argc, argv);
+}
+/*
+ * drop-tail
+ */
+ClickQueue::ClickQueue() { 
+	pq_ = new PacketQueue; 
+	qlim_ = 1;
+	cc_ = 0;
+}
+
+ClickQueue::~ClickQueue() {
+	delete pq_;
+}
+
+int
+ClickQueue::is_full() {
+	return (pq_->length() >= qlim_);
+}
+
+int
+ClickQueue::ready() {
+	return (!is_full() && !blocked());
+}
+
+void ClickQueue::enque(Packet* p)
+{
+	pq_->enque(p);
+	if (pq_->length() > qlim_) {
+		fprintf(stderr,"Hey!!! IFQ Overflow!!!\n");
+		Packet *pp = pq_->deque();
+		drop(pp);
+	}
+}
+
+Packet* ClickQueue::deque()
+{
+	Packet* retval = pq_->deque();
+	return retval;
+}
+
+void ClickQueue::on_unblock() {
+	//
+	// Queue has space - run the external router 
+	// and give it a chance to fill things up.
+	//
+	if (cc_) {
+		Scheduler& s = Scheduler::instance();
+		double dcurtime = s.clock();
+		double fracp, intp;
+		fracp = modf(dcurtime,&intp);
+		cc_->simclick_node_t::curtime.tv_sec = intp;
+		cc_->simclick_node_t::curtime.tv_usec = (fracp*1.0e6+0.5);
+		simclick_click_run(cc_);
+	}
+}
+
+#if 0
+void ClickQueue::runclick() {
+	if (is_full()) {
+		return;
+	}
+	//
+	// Queue has space - run the external router 
+	// and give it a chance to fill things up.
+	//
+	if (cc_) {
+		simclick_click clickinst = cc_->GetClickinst();
+		Scheduler& s = Scheduler::instance();
+		double dcurtime = s.clock();
+		simclick_simstate curstate;
+		memset(&curstate,0,sizeof(curstate));
+		double fracp, intp;
+		fracp = modf(dcurtime,&intp);
+		curstate.curtime.tv_sec = intp;
+		curstate.curtime.tv_usec = (fracp*1.0e6+0.5);
+		simclick_click_run(clickinst,&curstate);
+	}
+}
+#endif
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/queue/clickqueue.h ns-2.30/queue/clickqueue.h
--- ns-2.30-pure/queue/clickqueue.h	1969-12-31 16:00:00.000000000 -0800
+++ ns-2.30/queue/clickqueue.h	2007-09-11 21:04:07.000000000 -0700
@@ -0,0 +1,61 @@
+/*
+ * clickqueue.h
+ * Special queue which runs the external Click router when it unblocks
+ *
+ */
+
+/*****************************************************************************
+ *  Copyright 2002, Univerity of Colorado at Boulder.                        *
+ *                                                                           *
+ *                        All Rights Reserved                                *
+ *                                                                           *
+ *  Permission to use, copy, modify, and distribute this software and its    *
+ *  documentation for any purpose other than its incorporation into a        *
+ *  commercial product is hereby granted without fee, provided that the      *
+ *  above copyright notice appear in all copies and that both that           *
+ *  copyright notice and this permission notice appear in supporting         *
+ *  documentation, and that the name of the University not be used in        *
+ *  advertising or publicity pertaining to distribution of the software      *
+ *  without specific, written prior permission.                              *
+ *                                                                           *
+ *  UNIVERSITY OF COLORADO DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS      *
+ *  SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND        *
+ *  FITNESS FOR ANY PARTICULAR PURPOSE.  IN NO EVENT SHALL THE UNIVERSITY    *
+ *  OF COLORADO BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL         *
+ *  DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA       *
+ *  OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER        *
+ *  TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR         *
+ *  PERFORMANCE OF THIS SOFTWARE.                                            *
+ *                                                                           *
+ ****************************************************************************/
+
+#ifndef ns_clickqueue_h
+#define ns_clickqueue_h
+
+#include <string.h>
+#include "queue.h"
+#include "config.h"
+
+/*
+ * A degenerate queue designed to work with Click routers. Should only
+ * have 1 packet ever sitting in it since the queueing should be handled
+ * by Click. Also makes sure that simclick gets run whenever the queue
+ * empties and unblocks so that the polling simulated network driver
+ * will insert packets when it has them.
+ */
+class ClickQueue : public Queue {
+  public:
+	ClickQueue();
+	~ClickQueue();
+	void enque(Packet*);
+	Packet* deque();
+
+	int is_full();
+	int ready();
+  protected:
+	int command(int argc, const char*const* argv); 
+	ClickClassifier* cc_;
+	virtual void on_unblock();
+};
+
+#endif
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/queue/queue.cc ns-2.30/queue/queue.cc
--- ns-2.30-pure/queue/queue.cc	2006-09-24 22:11:19.000000000 -0700
+++ ns-2.30/queue/queue.cc	2007-09-11 21:04:07.000000000 -0700
@@ -218,6 +218,7 @@
 			utilUpdate(last_change_, now, blocked_);
 			last_change_ = now;
 			blocked_ = 0;
+			on_unblock();
 		}
 		else {
 			utilUpdate(last_change_, now, blocked_);
@@ -227,6 +228,10 @@
 	}
 }
 
+void Queue::on_unblock() {
+	// Do nothing in base class
+}
+
 void Queue::reset()
 {
 	Packet* p;
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/queue/queue.h ns-2.30/queue/queue.h
--- ns-2.30-pure/queue/queue.h	2006-09-24 22:11:19.000000000 -0700
+++ ns-2.30/queue/queue.h	2007-09-11 21:04:07.000000000 -0700
@@ -145,6 +145,7 @@
 protected:
 	Queue();
 	void reset();
+	virtual void on_unblock();
 	int qlim_;		/* maximum allowed pkts in queue */
 	int blocked_;		/* blocked now? */
 	int unblock_on_resume_;	/* unblock q on idle? */
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/routing/extclickrouter.cc ns-2.30/routing/extclickrouter.cc
--- ns-2.30-pure/routing/extclickrouter.cc	1969-12-31 16:00:00.000000000 -0800
+++ ns-2.30/routing/extclickrouter.cc	2007-09-11 21:04:07.000000000 -0700
@@ -0,0 +1,20 @@
+/*
+ * XXX Insert CU copyright stuff here...
+ *
+ */
+
+#include "packet.h"
+#include "extrouter.h"
+#include "extclickrouter.h"
+
+ExtClickRouter::ExtClickRouter() {
+}
+
+ExtClickRouter::~ExtClickRouter() {
+}
+
+int ExtClickRouter::recv(Packet* p) {
+  int result = 0;
+
+  return result;
+}
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/routing/extclickrouter.h ns-2.30/routing/extclickrouter.h
--- ns-2.30-pure/routing/extclickrouter.h	1969-12-31 16:00:00.000000000 -0800
+++ ns-2.30/routing/extclickrouter.h	2007-09-11 21:04:07.000000000 -0700
@@ -0,0 +1,27 @@
+/*
+ * XXX Insert CU copyright stuff here...
+ * 
+ * This defines the interface used by all external raw packet routing
+ * modules bolted on to ns.
+ *
+ */
+
+#ifndef __ns_extclickrouter_h__
+#define __ns_extclickrouter_h__
+
+class ExtClickRouter
+{
+
+ public:
+  ExtClickRouter();
+  virtual ~ExtClickRouter();
+  virtual int recv(Packet* p);
+
+  void* SetClickRouterPtr(void* crtptr);
+
+ private:
+  void* clickrouter_;
+  
+};
+
+#endif
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/routing/extrouter.cc ns-2.30/routing/extrouter.cc
--- ns-2.30-pure/routing/extrouter.cc	1969-12-31 16:00:00.000000000 -0800
+++ ns-2.30/routing/extrouter.cc	2007-09-11 21:04:07.000000000 -0700
@@ -0,0 +1,15 @@
+/*
+ * XXX Insert CU copyright stuff here...
+ * 
+ * This defines the interface used by all external raw packet routing
+ * modules bolted on to ns.
+ *
+ */
+
+#include "packet.h"
+#include "extrouter.h"
+
+// Just here so we get virtual destructors
+ExtRouter::~ExtRouter() {
+}
+
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/routing/extrouter.h ns-2.30/routing/extrouter.h
--- ns-2.30-pure/routing/extrouter.h	1969-12-31 16:00:00.000000000 -0800
+++ ns-2.30/routing/extrouter.h	2007-09-11 21:04:07.000000000 -0700
@@ -0,0 +1,29 @@
+/*
+ * XXX Insert CU copyright stuff here...
+ * 
+ * This defines the interface used by all external raw packet routing
+ * modules bolted on to ns.
+ *
+ */
+
+#ifndef __ns_extrouter_h__
+#define __ns_extrouter_h__
+
+class ExtRouter
+{
+
+public:
+  enum {
+    IFID_NONE = -1,
+    IFID_KERNELTAP = 0,
+    IFID_FIRSTIF = 1,
+    IFID_LASTIF = 32,
+    IFID_FIRSTIFDROP = 33,
+    IFID_LASTIFDROP = 64
+  };
+  virtual ~ExtRouter();
+  virtual int route(Packet* p) = 0;
+  
+};
+
+#endif
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/routing/rtmodule.cc ns-2.30/routing/rtmodule.cc
--- ns-2.30-pure/routing/rtmodule.cc	2006-09-24 22:11:18.000000000 -0700
+++ ns-2.30/routing/rtmodule.cc	2007-09-11 21:04:07.000000000 -0700
@@ -137,6 +137,14 @@
         }
 } class_lms_routing_module;
 
+static class ClickRoutingModuleClass : public TclClass {
+public:
+        ClickRoutingModuleClass() : TclClass("RtModule/Click") {}
+        TclObject* create(int, const char*const*) {
+                return (new ClickRoutingModule);
+        }
+} class_click_routing_module;
+
 RoutingModule::RoutingModule() : 
 	next_rtm_(NULL), n_(NULL), classifier_(NULL) {
 	bind("classifier_", (TclObject**)&classifier_);
@@ -508,4 +516,3 @@
 	if (next_rtm_ != NULL)
 		next_rtm_->add_route(dst, target); 
 }
-
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/routing/rtmodule.h ns-2.30/routing/rtmodule.h
--- ns-2.30-pure/routing/rtmodule.h	2006-09-24 22:11:18.000000000 -0700
+++ ns-2.30/routing/rtmodule.h	2007-09-11 21:04:07.000000000 -0700
@@ -178,4 +178,10 @@
 	virtual void add_route(char *dst, NsObject *target){}
 };
 
+class ClickRoutingModule : public RoutingModule {
+public:
+        ClickRoutingModule() : RoutingModule() {}
+        virtual const char* module_name() const { return "Click"; }
+};
+
 #endif //  ns_rtmodule_h
Binary files ns-2.30-pure/tcl/ex/node0-simplelan_discard and ns-2.30/tcl/ex/node0-simplelan_discard differ
Binary files ns-2.30-pure/tcl/ex/node0-simplelan_fromkernel and ns-2.30/tcl/ex/node0-simplelan_fromkernel differ
Binary files ns-2.30-pure/tcl/ex/node0-simplelan_in_eth0 and ns-2.30/tcl/ex/node0-simplelan_in_eth0 differ
Binary files ns-2.30-pure/tcl/ex/node0-simplelan_out_arpquery and ns-2.30/tcl/ex/node0-simplelan_out_arpquery differ
Binary files ns-2.30-pure/tcl/ex/node0-simplelan_out_arprespond and ns-2.30/tcl/ex/node0-simplelan_out_arprespond differ
Binary files ns-2.30-pure/tcl/ex/node0-simplelan_tokernel and ns-2.30/tcl/ex/node0-simplelan_tokernel differ
Binary files ns-2.30-pure/tcl/ex/node1-simplelan_discard and ns-2.30/tcl/ex/node1-simplelan_discard differ
Binary files ns-2.30-pure/tcl/ex/node1-simplelan_fromkernel and ns-2.30/tcl/ex/node1-simplelan_fromkernel differ
Binary files ns-2.30-pure/tcl/ex/node1-simplelan_in_eth0 and ns-2.30/tcl/ex/node1-simplelan_in_eth0 differ
Binary files ns-2.30-pure/tcl/ex/node1-simplelan_out_arpquery and ns-2.30/tcl/ex/node1-simplelan_out_arpquery differ
Binary files ns-2.30-pure/tcl/ex/node1-simplelan_out_arprespond and ns-2.30/tcl/ex/node1-simplelan_out_arprespond differ
Binary files ns-2.30-pure/tcl/ex/node1-simplelan_tokernel and ns-2.30/tcl/ex/node1-simplelan_tokernel differ
Binary files ns-2.30-pure/tcl/ex/node2-simplelan_discard and ns-2.30/tcl/ex/node2-simplelan_discard differ
Binary files ns-2.30-pure/tcl/ex/node2-simplelan_fromkernel and ns-2.30/tcl/ex/node2-simplelan_fromkernel differ
Binary files ns-2.30-pure/tcl/ex/node2-simplelan_in_eth0 and ns-2.30/tcl/ex/node2-simplelan_in_eth0 differ
Binary files ns-2.30-pure/tcl/ex/node2-simplelan_out_arpquery and ns-2.30/tcl/ex/node2-simplelan_out_arpquery differ
Binary files ns-2.30-pure/tcl/ex/node2-simplelan_out_arprespond and ns-2.30/tcl/ex/node2-simplelan_out_arprespond differ
Binary files ns-2.30-pure/tcl/ex/node2-simplelan_tokernel and ns-2.30/tcl/ex/node2-simplelan_tokernel differ
Binary files ns-2.30-pure/tcl/ex/node3-simplelan_discard and ns-2.30/tcl/ex/node3-simplelan_discard differ
Binary files ns-2.30-pure/tcl/ex/node3-simplelan_fromkernel and ns-2.30/tcl/ex/node3-simplelan_fromkernel differ
Binary files ns-2.30-pure/tcl/ex/node3-simplelan_in_eth0 and ns-2.30/tcl/ex/node3-simplelan_in_eth0 differ
Binary files ns-2.30-pure/tcl/ex/node3-simplelan_out_arpquery and ns-2.30/tcl/ex/node3-simplelan_out_arpquery differ
Binary files ns-2.30-pure/tcl/ex/node3-simplelan_out_arprespond and ns-2.30/tcl/ex/node3-simplelan_out_arprespond differ
Binary files ns-2.30-pure/tcl/ex/node3-simplelan_tokernel and ns-2.30/tcl/ex/node3-simplelan_tokernel differ
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/tcl/ex/nsclick-raw-wlan.click ns-2.30/tcl/ex/nsclick-raw-wlan.click
--- ns-2.30-pure/tcl/ex/nsclick-raw-wlan.click	1969-12-31 16:00:00.000000000 -0800
+++ ns-2.30/tcl/ex/nsclick-raw-wlan.click	2007-09-11 21:04:07.000000000 -0700
@@ -0,0 +1,114 @@
+//
+//  Copyright 2002, Univerity of Colorado at Boulder.                        
+//                                                                            
+//                         All Rights Reserved                                
+//                                                                            
+//  Permission to use, copy, modify, and distribute this software and its    
+//  documentation for any purpose other than its incorporation into a        
+//  commercial product is hereby granted without fee, provided that the      
+//  above copyright notice appear in all copies and that both that           
+//  copyright notice and this permission notice appear in supporting         
+//  documentation, and that the name of the University not be used in        
+//  advertising or publicity pertaining to distribution of the software      
+//  without specific, written prior permission.                              
+//                                                                            
+//  UNIVERSITY OF COLORADO DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS      
+//  SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND        
+//  FITNESS FOR ANY PARTICULAR PURPOSE.  IN NO EVENT SHALL THE UNIVERSITY    
+//  OF COLORADO BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL         
+//  DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA      
+//  OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER       
+//  TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR         
+//  PERFORMANCE OF THIS SOFTWARE.                                            
+//
+
+// nsclick-simple-lan.click
+//
+// This is a simple and stupid flat routing mechanism.
+// It broadcasts ARP requests if it wants to find a destination
+// address, and it responds to ARP requests made for it.
+
+elementclass DumbRouter {
+  $myaddr, $myaddr_ethernet |
+
+  class :: Classifier(12/0806 20/0001,12/0806 20/0002, -);
+  mypackets :: IPClassifier(dst host $myaddr,-);
+  myarpquerier :: ARPQuerier($myaddr,$myaddr_ethernet);
+  myarpresponder :: ARPResponder($myaddr $myaddr_ethernet);
+
+  rinfo::AvailableRates(DEFAULT 2 4 11 22)
+  rateselection::MadwifiRate(RT rinfo,ACTIVE true,OFFSET 4);
+  wlinfo :: WirelessInfo(SSID raw, BSSID 01:01:01:01:01:01,CHANNEL 2, IFID 0);
+  ethout :: Queue 	
+	-> WifiEncap(0x0, WIRELESS_INFO wlinfo)	
+	-> rateselection
+	-> PrintWifi(eth0_out)
+	-> ToDump(out_eth0,PER_NODE 1,ENCAP 802_11)
+	-> ExtraEncap()
+	-> ToSimDevice(eth0);
+
+  FromSimDevice(eth0,SNAPLEN 4096)
+	-> ExtraDecap()
+	-> filtertx::FilterTX()
+	-> ToDump(in_eth0,PER_NODE 1,ENCAP 802_11)
+	-> WifiDecap()
+	-> Print(eth0,64)	
+	-> HostEtherFilter($myaddr_ethernet)
+	-> class;
+
+  // transmission is fed back to the rate selection module	
+  filtertx[1]
+	-> [1]rateselection;
+
+  // ARP queries from other nodes go to the ARP responder module
+  class[0] -> myarpresponder;
+
+  // ARP responses go to our query module
+  class[1] -> [1]myarpquerier;
+
+  // All other packets get checked to see if they're meant for us
+  class[2]				
+	-> Strip(14)
+	-> CheckIPHeader
+	-> MarkIPHeader
+	-> GetIPAddress(16)
+	-> mypackets; 
+
+  // Packets for us go to "tap0" which sends them to the kernel
+  mypackets[0]
+	-> IPPrint(tokernel) 
+	-> ToDump(tokernel,2000,IP,PER_NODE 1) 
+	-> ToSimDevice(tap0,IP);
+
+  // Packets for other folks or broadcast packets get discarded
+  mypackets[1]
+	-> Print(discard,64)
+	-> ToDump(discard,2000,PER_NODE 1)
+	-> Discard;
+
+  // Packets sent out by the "kernel" get pushed into the ARP query module
+  FromSimDevice(tap0,SNAPLEN 4096)
+	-> CheckIPHeader 
+	-> IPPrint(fromkernel) 
+	-> ToDump(fromkernel,2000,IP,PER_NODE 1)
+	-> GetIPAddress(16)
+	-> myarpquerier;
+
+  // Both the ARP query and response modules send data out to
+  // the simulated network device, eth0.
+  myarpquerier
+	-> Print(fromarpquery,64)
+	-> ToDump(out_arpquery,PER_NODE 1)
+	-> ethout;
+
+  myarpresponder
+	-> Print(arpresponse,64)
+	-> ToDump(out_arprespond,PER_NODE 1)
+	-> ethout;
+}
+
+
+u :: DumbRouter(eth0,eth0);
+
+
+
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/tcl/ex/nsclick-raw-wlan.tcl ns-2.30/tcl/ex/nsclick-raw-wlan.tcl
--- ns-2.30-pure/tcl/ex/nsclick-raw-wlan.tcl	1969-12-31 16:00:00.000000000 -0800
+++ ns-2.30/tcl/ex/nsclick-raw-wlan.tcl	2007-09-11 21:04:07.000000000 -0700
@@ -0,0 +1,331 @@
+#
+#  Copyright 2002, Univerity of Colorado at Boulder.                        
+#                                                                            
+#                         All Rights Reserved                                
+#                                                                            
+#  Permission to use, copy, modify, and distribute this software and its    
+#  documentation for any purpose other than its incorporation into a        
+#  commercial product is hereby granted without fee, provided that the      
+#  above copyright notice appear in all copies and that both that           
+#  copyright notice and this permission notice appear in supporting         
+#  documentation, and that the name of the University not be used in        
+#  advertising or publicity pertaining to distribution of the software      
+#  without specific, written prior permission.                              
+#                                                                            
+#  UNIVERSITY OF COLORADO DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS      
+#  SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND        
+#  FITNESS FOR ANY PARTICULAR PURPOSE.  IN NO EVENT SHALL THE UNIVERSITY    
+#  OF COLORADO BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL         
+#  DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA      
+#  OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER       
+#  TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR         
+#  PERFORMANCE OF THIS SOFTWARE.                                            
+#
+# nsclick-simple-lan.tcl
+#
+# A sample nsclick script simulating a small LAN
+#
+
+#
+#	Modified by Nicolas Letor to support wifi elements.
+# 	Performance Analysis of Telecommunication Systems (PATS) research group,
+# 	Interdisciplinary Institute for Broadband Technology (IBBT) & Universiteit Antwerpen.
+#
+
+#
+# Set some general simulation parameters
+#
+
+#
+# Unity gain, omnidirectional antennas, centered 1.5m above each node.
+# These values are lifted from the ns-2 sample files.
+#
+
+Antenna/OmniAntenna set X_ 0
+Antenna/OmniAntenna set Y_ 0
+Antenna/OmniAntenna set Z_ 1.5
+Antenna/OmniAntenna set Gt_ 1.0
+Antenna/OmniAntenna set Gr_ 1.0
+
+#
+# Initialize the SharedMedia interface with parameters to make
+# it work like the 914MHz Lucent WaveLAN DSSS radio interface
+# These are taken directly from the ns-2 sample files.
+#
+Phy/WirelessPhy set CPThresh_ 10.0
+Phy/WirelessPhy set CSThresh_ 1.559e-11
+Phy/WirelessPhy set RXThresh_ 3.652e-10
+Phy/WirelessPhy set Rb_ 2*1e6
+Phy/WirelessPhy set Pt_ 0.2818
+Phy/WirelessPhy set freq_ 914e+6 
+Phy/WirelessPhy set L_ 1.0
+
+# Configure multirate aspect
+Phy/WirelessPhy set RateCount_ 4
+Phy/WirelessPhy set Rate0 11e6
+Phy/WirelessPhy set Rate1 5.5e6
+Phy/WirelessPhy set Rate2 2e6
+Phy/WirelessPhy set Rate3 1e6
+Phy/WirelessPhy set RXThresh0 1.427e-08 ;# 100m transmission range
+Phy/WirelessPhy set RXThresh1 2.818e-09 ;# 150m transmission range
+Phy/WirelessPhy set RXThresh2 8.916e-10 ;# 200m transmission range
+Phy/WirelessPhy set RXThresh3 3.652e-10 ;# 250m transmission range
+
+# 
+# Set the size of the playing field and the topography.
+#
+set xsize 100
+set ysize 100
+set wtopo	[new Topography]
+$wtopo load_flatgrid $xsize $ysize
+set gkeeper [new GridKeeper]
+$gkeeper dimension $xsize $ysize
+
+#
+# The network channel, physical layer, MAC, propagation model,
+# and antenna model are all standard ns-2.
+#  
+set netchan	Channel/WirelessChannel
+set netphy	Phy/WirelessPhy
+set netmac	Mac/802_11
+set netprop     Propagation/TwoRayGround
+set antenna     Antenna/OmniAntenna
+
+#
+# We have to use a special queue and link layer. This is so that
+# Click can have control over the network interface packet queue,
+# which is vital if we want to play with, e.g. QoS algorithms.
+#
+set netifq	Queue/ClickQueue
+set netll	LL/Ext
+LL set delay_			1ms
+
+#
+# These are pretty self-explanatory, just the number of nodes
+# and when we'll stop.
+#
+set nodecount   4
+set stoptime	10.0
+
+#
+# With nsclick, we have to worry about details like which network
+# port to use for communication. This sets the default ports to 5000.
+#
+Agent/Null set sport_		5000
+Agent/Null set dport_		5000
+
+Agent/CBR set sport_		5000
+Agent/CBR set dport_		5000
+
+#
+# Standard ns-2 stuff here - create the simulator object.
+#
+Simulator set MacTrace_ ON
+set ns_		[new Simulator]
+
+#
+# Create and activate trace files.
+#
+set tracefd	[open "nsclick-raw-wlan.tr" w]
+set namtrace    [open "nsclick-raw-wlan.nam" w]
+$ns_ trace-all $tracefd
+$ns_ namtrace-all-wireless $namtrace $xsize $ysize
+$ns_ use-newtrace
+
+
+#
+# Create the "god" object. This is another artifact of using
+# the mobile node type. We have to have this even though
+# we never use it.
+#
+set god_ [create-god $nodecount]
+
+#
+# Tell the simulator to create Click nodes.
+#
+Simulator set node_factory_ Node/MobileNode/ClickNode
+
+#
+# Create a network Channel for the nodes to use. One channel
+# per LAN. Create 13 channels of the 802.11 MAC layer
+for {set i 0} { $i <= 13} {incr i} {
+	set chan_($i) [new Channel/WirelessChannel]	
+}
+# And implement a channel switching function to WirelessInfo 
+# to switch from one channel to another channel
+proc SwitchChannel { i whichif whichnewchannel } {
+	global node_ chan_
+	if { $whichnewchannel > 0 } {
+#		set ns_ [Simulator instance] 
+#		set node [ $ns_ Node($i) ]
+		$node_($i) changechannel $whichif $chan_($whichnewchannel)
+		puts "Node $i changes if $whichif to channel $whichnewchannel"
+	}
+}
+
+#Also set the propagation model to be used.
+set prop_ [new $netprop]
+
+#
+# In nsclick we have to worry about assigning IP and MAC addresses
+# to out network interfaces. Here we generate a list of IP and MAC
+# addresses, one per node since we've only got one network interface
+# per node in this case. Also note that this scheme only works for
+# fewer than 255 nodes, and we aren't worrying about subnet masks.
+#
+set iptemplate "192.168.1.%d"
+set mactemplate "00:03:47:70:89:%0x"
+for {set i 0} {$i < $nodecount} {incr i} {
+    set node_ip($i) [format $iptemplate [expr $i+1]]
+    set node_mac($i) [format $mactemplate [expr $i+1]]
+}
+
+#
+# We set the routing protocol to "Empty" so that ns-2 doesn't do
+# any packet routing. All of the routing will be done by the
+# Click script.
+#
+$ns_ rtproto Empty
+
+#
+# Here is where we actually create all of the nodes.
+#
+for {set i 0} {$i < $nodecount } {incr i} {
+    set node_($i) [$ns_ node]
+
+    #
+    # After creating the node, we add one wireless network interface to
+    # it. By default, this interface will be named "eth0". If we
+    # added a second interface it would be named "eth1", a third
+    # "eth2" and so on.
+    #
+    $node_($i) add-interface $chan_(1) $prop_ $netll $netmac \
+	$netifq 1 $netphy $antenna $wtopo
+
+    #
+    # Now configure the interface eth0
+    #
+    $node_($i) setip "eth0" $node_ip($i)
+    $node_($i) setmac "eth0" $node_mac($i)
+
+    #
+    # Set some node properties
+    #
+    $gkeeper addnode $node_($i)
+    $node_($i) radius 1000
+    $node_($i) random-motion 0
+    $node_($i) topography $wtopo
+    $node_($i) nodetrace $tracefd
+
+    #
+    # The node name is used by Click to distinguish information
+    # coming from different nodes. For example, a "Print" element
+    # prepends this to the printed string so it's clear exactly
+    # which node is doing the printing.
+    #
+    [$node_($i) set classifier_] setnodename "node$i-simplelan"
+    
+    #
+    # Load the appropriate Click router script for the node.
+    # All nodes in this simulation are using the same script,
+    # but there's no reason why each node couldn't use a different
+    # script.
+    #
+    [$node_($i) entry] loadclick "nsclick-raw-wlan.click"
+}
+
+
+# 
+# Define node network traffic. There isn't a whole lot going on
+# in this simple test case, we're just going to have the first node
+# send packets to the last node, starting at 1 second, and ending at 10.
+# There are Perl scripts available to automatically generate network
+# traffic.
+#
+
+
+#
+# Start transmitting at $startxmittime, $xmitrate packets per second.
+#
+set startxmittime 1
+set xmitrate 4
+set xmitinterval 0.25
+set packetsize 64
+
+#
+# We use the "raw" packet type, which sends real packet data
+# down the pipe.
+#
+set raw_(0) [new Agent/Raw]
+$ns_ attach-agent $node_(0) $raw_(0)
+
+set lastnode [expr $nodecount-1]
+set null_(0) [new Agent/Null]
+$ns_ attach-agent $node_($lastnode) $null_(0)
+
+#
+# The CBR object is just the default ns-2 CBR object, so
+# no change in the meaning of the parameters.
+#
+set cbr_(0) [new Application/Traffic/CBR]
+$cbr_(0) set packetSize_ $packetsize
+$cbr_(0) set interval_ $xmitinterval
+$cbr_(0) set random_ 0
+$cbr_(0) set maxpkts_ [expr ($stoptime - $startxmittime)*$xmitrate]
+$cbr_(0) attach-agent $raw_(0)
+
+#
+# The Raw agent creates real UDP packets, so it has to know
+# the source and destination IP addresses and port numberes.
+#
+$raw_(0) set-srcip [$node_(0) getip eth0]
+$raw_(0) set-srcport 5000
+$raw_(0) set-destport 5000
+$raw_(0) set-destip [$node_($lastnode) getip eth0]
+
+$ns_ at $startxmittime "$cbr_(0) start"
+
+
+$node_(0) set X_ 10
+$node_(0) set Y_ 50
+$node_(0) set Z_ 0
+
+$node_(1) set X_ 50
+$node_(1) set Y_ 50
+$node_(1) set Z_ 0
+
+$node_(2) set X_ 90
+$node_(2) set Y_ 50
+$node_(2) set Z_ 0
+
+$node_(3) set X_ 50
+$node_(3) set Y_ 10
+$node_(3) set Z_ 0
+
+
+#
+# This sizes the nodes for use in nam. Currently, the trace files
+# produced by nsclick don't really work in nam.
+#
+for {set i 0} {$i < $nodecount} {incr i} {
+    $ns_ initial_node_pos $node_($i) 20
+    [$node_($i) entry] runclick
+}
+
+#
+# Stop the simulation
+#
+$ns_ at  $stoptime.000000001 "puts \"NS EXITING...\" ; $ns_ halt"
+
+#
+# Let nam know that the simulation is done.
+#
+$ns_ at  $stoptime	"$ns_ nam-end-wireless $stoptime"
+
+
+puts "Starting Simulation..."
+$ns_ run
+
+
+
+
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/tcl/ex/nsclick-simple-bridge.click ns-2.30/tcl/ex/nsclick-simple-bridge.click
--- ns-2.30-pure/tcl/ex/nsclick-simple-bridge.click	1969-12-31 16:00:00.000000000 -0800
+++ ns-2.30/tcl/ex/nsclick-simple-bridge.click	2007-09-11 21:04:07.000000000 -0700
@@ -0,0 +1,40 @@
+//
+//  Copyright 2002, Univerity of Colorado at Boulder.                        
+//                                                                            
+//                         All Rights Reserved                                
+//                                                                            
+//  Permission to use, copy, modify, and distribute this software and its    
+//  documentation for any purpose other than its incorporation into a        
+//  commercial product is hereby granted without fee, provided that the      
+//  above copyright notice appear in all copies and that both that           
+//  copyright notice and this permission notice appear in supporting         
+//  documentation, and that the name of the University not be used in        
+//  advertising or publicity pertaining to distribution of the software      
+//  without specific, written prior permission.                              
+//                                                                            
+//  UNIVERSITY OF COLORADO DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS      
+//  SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND        
+//  FITNESS FOR ANY PARTICULAR PURPOSE.  IN NO EVENT SHALL THE UNIVERSITY    
+//  OF COLORADO BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL         
+//  DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA      
+//  OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER       
+//  TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR         
+//  PERFORMANCE OF THIS SOFTWARE.                                            
+//
+
+// nsclick-simple-bridge.click
+//
+// This is a simple and stupid network "bridge." Packets coming
+// in off of eth0 are pumped out on eth1, and packets coming
+// in off of eth1 are pumped out on eth0.
+//
+
+FromSimDevice(eth0,SNAPLEN 4096)
+	-> Queue
+	-> ToSimDevice(eth1);
+	
+FromSimDevice(eth1,SNAPLEN 4096)
+	-> Queue
+	-> ToSimDevice(eth0);
+
+
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/tcl/ex/nsclick-simple-hybrid.nam ns-2.30/tcl/ex/nsclick-simple-hybrid.nam
--- ns-2.30-pure/tcl/ex/nsclick-simple-hybrid.nam	1969-12-31 16:00:00.000000000 -0800
+++ ns-2.30/tcl/ex/nsclick-simple-hybrid.nam	2007-09-11 22:59:33.000000000 -0700
@@ -0,0 +1,371 @@
+n -t * -s 0  -x 10 -y 50 -Z 0 -z 10  -v circle -c black
+n -t * -s 1  -x 50 -y 50 -Z 0 -z 10  -v circle -c black
+n -t * -s 2  -x 90 -y 50 -Z 0 -z 10  -v circle -c black
+n -t * -s 3  -x 10 -y 0 -Z 0 -z 10  -v circle -c black
+n -t * -s 4  -x 50 -y 0 -Z 0 -z 10  -v circle -c black
+n -t * -s 5  -x 90 -y 0 -Z 0 -z 10  -v circle -c black
+n -t * -s 6  -x 50 -y 10 -Z 0 -z 10  -v circle -c black
+V -t * -v 1.0a5 -a 0
+W -t * -x 100 -y 100
+A -t * -n 1 -p 0 -o 0xffffffff -c 31 -a 1
+A -t * -h 1 -m 2147483647 -s 0
++ -t 1.000000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 0 -k AGT 
+- -t 1.000000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 0 -k AGT
+h -t 1.000000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 0 -k AGT
+r -t 1.016121766 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 0 -k AGT
+r -t 1.018301766 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 0 -k AGT
+r -t 1.021761766 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 0 -k AGT
+r -t 1.027061766 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 0 -k AGT
+r -t 1.035561766 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 0 -k AGT
+r -t 1.057281766 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 0 -k AGT
+r -t 1.066501766 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 0 -k AGT
++ -t 1.250000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 3 -k AGT 
+- -t 1.250000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 3 -k AGT
+h -t 1.250000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 3 -k AGT
+r -t 1.255530989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 3 -k AGT
+r -t 1.257510989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 3 -k AGT
+r -t 1.261230989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 3 -k AGT
+r -t 1.266170989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 3 -k AGT
+r -t 1.273130989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 3 -k AGT
+r -t 1.276750989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 3 -k AGT
+r -t 1.279670989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 3 -k AGT
++ -t 1.500000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 4 -k AGT 
+- -t 1.500000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 4 -k AGT
+h -t 1.500000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 4 -k AGT
+r -t 1.505770989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 4 -k AGT
+r -t 1.507390989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 4 -k AGT
+r -t 1.509190989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 4 -k AGT
+r -t 1.511290989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 4 -k AGT
+r -t 1.520050989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 4 -k AGT
+r -t 1.537710989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 4 -k AGT
+r -t 1.551250989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 4 -k AGT
++ -t 1.750000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 5 -k AGT 
+- -t 1.750000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 5 -k AGT
+h -t 1.750000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 5 -k AGT
+r -t 1.755730989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 5 -k AGT
+r -t 1.757350989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 5 -k AGT
+r -t 1.760310989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 5 -k AGT
+r -t 1.765530989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 5 -k AGT
+r -t 1.769510989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 5 -k AGT
+r -t 1.777590989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 5 -k AGT
+r -t 1.790930989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 5 -k AGT
++ -t 2.000000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 6 -k AGT 
+- -t 2.000000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 6 -k AGT
+h -t 2.000000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 6 -k AGT
+r -t 2.005590989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 6 -k AGT
+r -t 2.007810989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 6 -k AGT
+r -t 2.010790989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 6 -k AGT
+r -t 2.016050989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 6 -k AGT
+r -t 2.026670989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 6 -k AGT
+r -t 2.033350989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 6 -k AGT
+r -t 2.044890989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 6 -k AGT
++ -t 2.250000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 7 -k AGT 
+- -t 2.250000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 7 -k AGT
+h -t 2.250000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 7 -k AGT
+r -t 2.255810989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 7 -k AGT
+r -t 2.257610989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 7 -k AGT
+r -t 2.260650989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 7 -k AGT
+r -t 2.263330989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 7 -k AGT
+r -t 2.272450989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 7 -k AGT
+r -t 2.292070989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 7 -k AGT
+r -t 2.307570989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 7 -k AGT
++ -t 2.500000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 8 -k AGT 
+- -t 2.500000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 8 -k AGT
+h -t 2.500000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 8 -k AGT
+r -t 2.505790989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 8 -k AGT
+r -t 2.507350989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 8 -k AGT
+r -t 2.509910989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 8 -k AGT
+r -t 2.516170989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 8 -k AGT
+r -t 2.524230989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 8 -k AGT
+r -t 2.533190989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 8 -k AGT
+r -t 2.541750989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 8 -k AGT
++ -t 2.750000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 9 -k AGT 
+- -t 2.750000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 9 -k AGT
+h -t 2.750000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 9 -k AGT
+r -t 2.755610989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 9 -k AGT
+r -t 2.757470989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 9 -k AGT
+r -t 2.760090989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 9 -k AGT
+r -t 2.763530989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 9 -k AGT
+r -t 2.771450989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 9 -k AGT
+r -t 2.779790989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 9 -k AGT
+r -t 2.791470989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 9 -k AGT
++ -t 3.000000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 10 -k AGT 
+- -t 3.000000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 10 -k AGT
+h -t 3.000000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 10 -k AGT
+r -t 3.005590989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 10 -k AGT
+r -t 3.007190989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 10 -k AGT
+r -t 3.010870989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 10 -k AGT
+r -t 3.013790989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 10 -k AGT
+r -t 3.024910989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 10 -k AGT
+r -t 3.030890989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 10 -k AGT
+r -t 3.045110989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 10 -k AGT
++ -t 3.250000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 11 -k AGT 
+- -t 3.250000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 11 -k AGT
+h -t 3.250000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 11 -k AGT
+r -t 3.255330989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 11 -k AGT
+r -t 3.257450989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 11 -k AGT
+r -t 3.260150989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 11 -k AGT
+r -t 3.264490989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 11 -k AGT
+r -t 3.269070989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 11 -k AGT
+r -t 3.290510989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 11 -k AGT
+r -t 3.310890989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 11 -k AGT
++ -t 3.500000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 12 -k AGT 
+- -t 3.500000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 12 -k AGT
+h -t 3.500000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 12 -k AGT
+r -t 3.505490989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 12 -k AGT
+r -t 3.507690989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 12 -k AGT
+r -t 3.510050989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 12 -k AGT
+r -t 3.515570989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 12 -k AGT
+r -t 3.524730989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 12 -k AGT
+r -t 3.544910989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 12 -k AGT
+r -t 3.564990989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 12 -k AGT
++ -t 3.750000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 13 -k AGT 
+- -t 3.750000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 13 -k AGT
+h -t 3.750000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 13 -k AGT
+r -t 3.755410989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 13 -k AGT
+r -t 3.758150989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 13 -k AGT
+r -t 3.761790989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 13 -k AGT
+r -t 3.763750989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 13 -k AGT
+r -t 3.771710989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 13 -k AGT
+r -t 3.773530989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 13 -k AGT
+r -t 3.785270989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 13 -k AGT
++ -t 4.000000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 14 -k AGT 
+- -t 4.000000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 14 -k AGT
+h -t 4.000000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 14 -k AGT
+r -t 4.005630989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 14 -k AGT
+r -t 4.007150989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 14 -k AGT
+r -t 4.009510989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 14 -k AGT
+r -t 4.012030989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 14 -k AGT
+r -t 4.014850989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 14 -k AGT
+r -t 4.025210989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 14 -k AGT
+r -t 4.038950989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 14 -k AGT
++ -t 4.250000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 15 -k AGT 
+- -t 4.250000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 15 -k AGT
+h -t 4.250000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 15 -k AGT
+r -t 4.255690989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 15 -k AGT
+r -t 4.258350989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 15 -k AGT
+r -t 4.260270989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 15 -k AGT
+r -t 4.263310989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 15 -k AGT
+r -t 4.269150989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 15 -k AGT
+r -t 4.280110989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 15 -k AGT
+r -t 4.293770989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 15 -k AGT
++ -t 4.500000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 16 -k AGT 
+- -t 4.500000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 16 -k AGT
+h -t 4.500000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 16 -k AGT
+r -t 4.505610989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 16 -k AGT
+r -t 4.507970989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 16 -k AGT
+r -t 4.511590989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 16 -k AGT
+r -t 4.517610989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 16 -k AGT
+r -t 4.525410989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 16 -k AGT
+r -t 4.536250989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 16 -k AGT
+r -t 4.556010989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 16 -k AGT
++ -t 4.750000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 17 -k AGT 
+- -t 4.750000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 17 -k AGT
+h -t 4.750000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 17 -k AGT
+r -t 4.755390989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 17 -k AGT
+r -t 4.757630989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 17 -k AGT
+r -t 4.760130989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 17 -k AGT
+r -t 4.762530989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 17 -k AGT
+r -t 4.768670989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 17 -k AGT
+r -t 4.789210989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 17 -k AGT
+r -t 4.808110989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 17 -k AGT
++ -t 5.000000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 18 -k AGT 
+- -t 5.000000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 18 -k AGT
+h -t 5.000000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 18 -k AGT
+r -t 5.005310989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 18 -k AGT
+r -t 5.007070989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 18 -k AGT
+r -t 5.009250989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 18 -k AGT
+r -t 5.010830989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 18 -k AGT
+r -t 5.020070989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 18 -k AGT
+r -t 5.028790989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 18 -k AGT
+r -t 5.045630989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 18 -k AGT
++ -t 5.250000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 19 -k AGT 
+- -t 5.250000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 19 -k AGT
+h -t 5.250000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 19 -k AGT
+r -t 5.255670989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 19 -k AGT
+r -t 5.257990989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 19 -k AGT
+r -t 5.261170989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 19 -k AGT
+r -t 5.267690989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 19 -k AGT
+r -t 5.274410989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 19 -k AGT
+r -t 5.286030989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 19 -k AGT
+r -t 5.290170989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 19 -k AGT
++ -t 5.500000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 20 -k AGT 
+- -t 5.500000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 20 -k AGT
+h -t 5.500000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 20 -k AGT
+r -t 5.505530989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 20 -k AGT
+r -t 5.508070989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 20 -k AGT
+r -t 5.510830989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 20 -k AGT
+r -t 5.513830989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 20 -k AGT
+r -t 5.522790989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 20 -k AGT
+r -t 5.528590989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 20 -k AGT
+r -t 5.546190989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 20 -k AGT
++ -t 5.750000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 21 -k AGT 
+- -t 5.750000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 21 -k AGT
+h -t 5.750000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 21 -k AGT
+r -t 5.755870989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 21 -k AGT
+r -t 5.758330989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 21 -k AGT
+r -t 5.759910989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 21 -k AGT
+r -t 5.765370989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 21 -k AGT
+r -t 5.767510989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 21 -k AGT
+r -t 5.787530989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 21 -k AGT
+r -t 5.800310989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 21 -k AGT
++ -t 6.000000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 22 -k AGT 
+- -t 6.000000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 22 -k AGT
+h -t 6.000000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 22 -k AGT
+r -t 6.005470989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 22 -k AGT
+r -t 6.008150989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 22 -k AGT
+r -t 6.012190989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 22 -k AGT
+r -t 6.016850989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 22 -k AGT
+r -t 6.025090989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 22 -k AGT
+r -t 6.035290989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 22 -k AGT
+r -t 6.046850989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 22 -k AGT
++ -t 6.250000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 23 -k AGT 
+- -t 6.250000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 23 -k AGT
+h -t 6.250000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 23 -k AGT
+r -t 6.255650989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 23 -k AGT
+r -t 6.258110989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 23 -k AGT
+r -t 6.260230989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 23 -k AGT
+r -t 6.265470989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 23 -k AGT
+r -t 6.269890989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 23 -k AGT
+r -t 6.275050989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 23 -k AGT
+r -t 6.278350989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 23 -k AGT
++ -t 6.500000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 24 -k AGT 
+- -t 6.500000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 24 -k AGT
+h -t 6.500000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 24 -k AGT
+r -t 6.505330989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 24 -k AGT
+r -t 6.507870989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 24 -k AGT
+r -t 6.511550989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 24 -k AGT
+r -t 6.513550989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 24 -k AGT
+r -t 6.517910989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 24 -k AGT
+r -t 6.524950989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 24 -k AGT
+r -t 6.533590989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 24 -k AGT
++ -t 6.750000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 25 -k AGT 
+- -t 6.750000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 25 -k AGT
+h -t 6.750000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 25 -k AGT
+r -t 6.755630989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 25 -k AGT
+r -t 6.757290989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 25 -k AGT
+r -t 6.759010989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 25 -k AGT
+r -t 6.764790989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 25 -k AGT
+r -t 6.768150989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 25 -k AGT
+r -t 6.771410989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 25 -k AGT
+r -t 6.792230989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 25 -k AGT
++ -t 7.000000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 26 -k AGT 
+- -t 7.000000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 26 -k AGT
+h -t 7.000000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 26 -k AGT
+r -t 7.005890989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 26 -k AGT
+r -t 7.008230989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 26 -k AGT
+r -t 7.010110989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 26 -k AGT
+r -t 7.014230989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 26 -k AGT
+r -t 7.021390989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 26 -k AGT
+r -t 7.032270989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 26 -k AGT
+r -t 7.048970989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 26 -k AGT
++ -t 7.250000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 27 -k AGT 
+- -t 7.250000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 27 -k AGT
+h -t 7.250000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 27 -k AGT
+r -t 7.255690989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 27 -k AGT
+r -t 7.257750989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 27 -k AGT
+r -t 7.261470989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 27 -k AGT
+r -t 7.266830989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 27 -k AGT
+r -t 7.276410989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 27 -k AGT
+r -t 7.296610989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 27 -k AGT
+r -t 7.301790989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 27 -k AGT
++ -t 7.500000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 28 -k AGT 
+- -t 7.500000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 28 -k AGT
+h -t 7.500000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 28 -k AGT
+r -t 7.505750989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 28 -k AGT
+r -t 7.507670989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 28 -k AGT
+r -t 7.510010989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 28 -k AGT
+r -t 7.514930989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 28 -k AGT
+r -t 7.518670989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 28 -k AGT
+r -t 7.530950989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 28 -k AGT
+r -t 7.539810989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 28 -k AGT
++ -t 7.750000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 29 -k AGT 
+- -t 7.750000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 29 -k AGT
+h -t 7.750000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 29 -k AGT
+r -t 7.755330989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 29 -k AGT
+r -t 7.757210989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 29 -k AGT
+r -t 7.760190989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 29 -k AGT
+r -t 7.762830989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 29 -k AGT
+r -t 7.765770989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 29 -k AGT
+r -t 7.774430989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 29 -k AGT
+r -t 7.781810989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 29 -k AGT
++ -t 8.000000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 30 -k AGT 
+- -t 8.000000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 30 -k AGT
+h -t 8.000000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 30 -k AGT
+r -t 8.005330989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 30 -k AGT
+r -t 8.007610989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 30 -k AGT
+r -t 8.010770989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 30 -k AGT
+r -t 8.016410989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 30 -k AGT
+r -t 8.025530989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 30 -k AGT
+r -t 8.037930989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 30 -k AGT
+r -t 8.053430989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 30 -k AGT
++ -t 8.250000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 31 -k AGT 
+- -t 8.250000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 31 -k AGT
+h -t 8.250000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 31 -k AGT
+r -t 8.255390989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 31 -k AGT
+r -t 8.257290989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 31 -k AGT
+r -t 8.259650989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 31 -k AGT
+r -t 8.261390989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 31 -k AGT
+r -t 8.269810989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 31 -k AGT
+r -t 8.289310989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 31 -k AGT
+r -t 8.310470989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 31 -k AGT
++ -t 8.500000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 32 -k AGT 
+- -t 8.500000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 32 -k AGT
+h -t 8.500000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 32 -k AGT
+r -t 8.505530989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 32 -k AGT
+r -t 8.507310989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 32 -k AGT
+r -t 8.509090989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 32 -k AGT
+r -t 8.513370989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 32 -k AGT
+r -t 8.521250989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 32 -k AGT
+r -t 8.535690989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 32 -k AGT
+r -t 8.538210989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 32 -k AGT
++ -t 8.750000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 33 -k AGT 
+- -t 8.750000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 33 -k AGT
+h -t 8.750000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 33 -k AGT
+r -t 8.755770989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 33 -k AGT
+r -t 8.757370989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 33 -k AGT
+r -t 8.760790989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 33 -k AGT
+r -t 8.764530989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 33 -k AGT
+r -t 8.766570989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 33 -k AGT
+r -t 8.782250989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 33 -k AGT
+r -t 8.801350989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 33 -k AGT
++ -t 9.000000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 34 -k AGT 
+- -t 9.000000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 34 -k AGT
+h -t 9.000000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 34 -k AGT
+r -t 9.005710989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 34 -k AGT
+r -t 9.007630989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 34 -k AGT
+r -t 9.011350989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 34 -k AGT
+r -t 9.014170989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 34 -k AGT
+r -t 9.020870989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 34 -k AGT
+r -t 9.037750989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 34 -k AGT
+r -t 9.050250989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 34 -k AGT
++ -t 9.250000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 35 -k AGT 
+- -t 9.250000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 35 -k AGT
+h -t 9.250000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 35 -k AGT
+r -t 9.255410989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 35 -k AGT
+r -t 9.257390989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 35 -k AGT
+r -t 9.259670989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 35 -k AGT
+r -t 9.264950989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 35 -k AGT
+r -t 9.267750989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 35 -k AGT
+r -t 9.284430989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 35 -k AGT
+r -t 9.305150989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 35 -k AGT
++ -t 9.500000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 36 -k AGT 
+- -t 9.500000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 36 -k AGT
+h -t 9.500000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 36 -k AGT
+r -t 9.505710989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 36 -k AGT
+r -t 9.508030989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 36 -k AGT
+r -t 9.511610989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 36 -k AGT
+r -t 9.516250989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 36 -k AGT
+r -t 9.526830989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 36 -k AGT
+r -t 9.537410989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 36 -k AGT
+r -t 9.545670989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 36 -k AGT
++ -t 9.750000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 37 -k AGT 
+- -t 9.750000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 37 -k AGT
+h -t 9.750000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 37 -k AGT
+r -t 9.755810989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 37 -k AGT
+r -t 9.757530989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 37 -k AGT
+r -t 9.761510989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 37 -k AGT
+r -t 9.764630989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 37 -k AGT
+r -t 9.769570989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 37 -k AGT
+r -t 9.783270989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 37 -k AGT
+r -t 9.795090989 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 37 -k AGT
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/tcl/ex/nsclick-simple-hybrid.tcl ns-2.30/tcl/ex/nsclick-simple-hybrid.tcl
--- ns-2.30-pure/tcl/ex/nsclick-simple-hybrid.tcl	1969-12-31 16:00:00.000000000 -0800
+++ ns-2.30/tcl/ex/nsclick-simple-hybrid.tcl	2007-09-11 21:04:07.000000000 -0700
@@ -0,0 +1,397 @@
+#
+#  Copyright 2002, Univerity of Colorado at Boulder.                        
+#                                                                            
+#                         All Rights Reserved                                
+#                                                                            
+#  Permission to use, copy, modify, and distribute this software and its    
+#  documentation for any purpose other than its incorporation into a        
+#  commercial product is hereby granted without fee, provided that the      
+#  above copyright notice appear in all copies and that both that           
+#  copyright notice and this permission notice appear in supporting         
+#  documentation, and that the name of the University not be used in        
+#  advertising or publicity pertaining to distribution of the software      
+#  without specific, written prior permission.                              
+#                                                                            
+#  UNIVERSITY OF COLORADO DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS      
+#  SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND        
+#  FITNESS FOR ANY PARTICULAR PURPOSE.  IN NO EVENT SHALL THE UNIVERSITY    
+#  OF COLORADO BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL         
+#  DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA      
+#  OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER       
+#  TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR         
+#  PERFORMANCE OF THIS SOFTWARE.                                            
+#
+# nsclick-simple-hybrid.tcl
+#
+# A sample nsclick script simulating a small hybrid wired/wireless
+#
+
+#
+# Set some general simulation parameters
+#
+
+#
+# Unity gain, omnidirectional antennas, centered 1.5m above each node.
+# These values are lifted from the ns-2 sample files.
+#
+Antenna/OmniAntenna set X_ 0
+Antenna/OmniAntenna set Y_ 0
+Antenna/OmniAntenna set Z_ 1.5
+Antenna/OmniAntenna set Gt_ 1.0
+Antenna/OmniAntenna set Gr_ 1.0
+
+#
+# Initialize the SharedMedia interface with parameters to make
+# it work like the 914MHz Lucent WaveLAN DSSS radio interface
+# These are taken directly from the ns-2 sample files.
+#
+Phy/WirelessPhy set CPThresh_ 10.0
+Phy/WirelessPhy set CSThresh_ 1.559e-11
+Phy/WirelessPhy set RXThresh_ 3.652e-10
+Phy/WirelessPhy set Rb_ 2*1e6
+Phy/WirelessPhy set Pt_ 0.2818
+Phy/WirelessPhy set freq_ 914e+6 
+Phy/WirelessPhy set L_ 1.0
+
+#
+# Disable RTS/CTS handshake for the bridge to work
+#
+Mac/802_11 set RTSThreshold_ 2500
+
+# 
+# Set the size of the playing field and the topography.
+#
+set xsize 100
+set ysize 100
+set wtopo	[new Topography]
+$wtopo load_flatgrid $xsize $ysize
+
+#
+# The network channel, physical layer, MAC, propagation model,
+# and antenna model are all standard ns-2.
+#  
+set wirelesschan Channel/WirelessChannel
+set wiredchan Channel
+
+set wirelessphy Phy/WirelessPhy
+set wiredphy Phy/WiredPhy
+
+set wirelessmac Mac/802_11
+set wiredmac Mac/802_3
+
+set netprop Propagation/TwoRayGround
+set antenna Antenna/OmniAntenna
+
+#
+# We have to use a special queue and link layer. This is so that
+# Click can have control over the network interface packet queue,
+# which is vital if we want to play with, e.g. QoS algorithms.
+#
+set netifq	Queue/ClickQueue
+set netll	LL/Ext
+LL set delay_			1ms
+
+#
+# These are pretty self-explanatory, just the number of nodes
+# and when we'll stop.
+#
+set wirednodecount 3
+set wirelessnodecount 3
+set bridgenodecount 1
+set nodecount   7
+set stoptime	10.0
+
+#
+# With nsclick, we have to worry about details like which network
+# port to use for communication. This sets the default ports to 5000.
+#
+Agent/Null set sport_		5000
+Agent/Null set dport_		5000
+
+Agent/CBR set sport_		5000
+Agent/CBR set dport_		5000
+
+#
+# Standard ns-2 stuff here - create the simulator object.
+#
+set ns_		[new Simulator]
+
+#
+# Create and activate trace files.
+#
+set tracefd	[open "nsclick-simple-hybrid.tr" w]
+set namtrace    [open "nsclick-simple-hybrid.nam" w]
+$ns_ trace-all $tracefd
+$ns_ namtrace-all-wireless $namtrace $xsize $ysize
+$ns_ use-newtrace
+
+
+#
+# Create the "god" object. This is another artifact of using
+# the mobile node type. We have to have this even though
+# we never use it.
+#
+set god_ [create-god $nodecount]
+
+#
+# Tell the simulator to create Click nodes.
+#
+Simulator set node_factory_ Node/MobileNode/ClickNode
+
+#
+# Create a network Channel for the nodes to use. One channel
+# per LAN. Also set the propagation model to be used.
+#
+set wired_chan_ [new $wiredchan]
+set wireless_chan_ [new $wirelesschan]
+set prop_ [new $netprop]
+
+#
+# In nsclick we have to worry about assigning IP and MAC addresses
+# to out network interfaces. Here we generate a list of IP and MAC
+# addresses, one per node since we've only got one network interface
+# per node in this case. Also note that this scheme only works for
+# fewer than 255 nodes, and we aren't worrying about subnet masks.
+#
+set iptemplate "192.168.1.%d"
+set mactemplate "00:03:47:70:89:%0x"
+for {set i 0} {$i < $wirednodecount} {incr i} {
+    set wired_node_ip($i) [format $iptemplate [expr $i+1]]
+    set wired_node_mac($i) [format $mactemplate [expr $i+1]]
+}
+
+set iptemplate "192.168.2.%d"
+set mactemplate "00:03:47:70:8A:%0x"
+for {set i 0} {$i < $wirelessnodecount} {incr i} {
+    set wireless_node_ip($i) [format $iptemplate [expr $i+1]]
+    set wireless_node_mac($i) [format $mactemplate [expr $i+1]]
+}
+
+
+#
+# We set the routing protocol to "Empty" so that ns-2 doesn't do
+# any packet routing. All of the routing will be done by the
+# Click script.
+#
+$ns_ rtproto Empty
+
+#
+# Here is where we actually create all of the nodes.
+# We'll create the wired, wireless, and the bridge node
+# separately.
+#
+
+#
+# Start with the wireless nodes
+#
+for {set i 0} {$i < $wirelessnodecount } {incr i} {
+    set wireless_node_($i) [$ns_ node]
+
+    #
+    # After creating the node, we add one wireless network interface to
+    # it. By default, this interface will be named "eth0". If we
+    # added a second interface it would be named "eth1", a third
+    # "eth2" and so on.
+    #
+    $wireless_node_($i) add-interface $wireless_chan_ $prop_ $netll \
+	    $wirelessmac $netifq 1 $wirelessphy $antenna $wtopo
+
+    #
+    # Now configure the interface eth0
+    #
+    $wireless_node_($i) setip "eth0" $wireless_node_ip($i)
+    $wireless_node_($i) setmac "eth0" $wireless_node_mac($i)
+
+    #
+    # Set some node properties
+    #
+    $wireless_node_($i) random-motion 0
+    $wireless_node_($i) topography $wtopo
+    $wireless_node_($i) nodetrace $tracefd
+
+    #
+    # The node name is used by Click to distinguish information
+    # coming from different nodes. For example, a "Print" element
+    # prepends this to the printed string so it's clear exactly
+    # which node is doing the printing.
+    #
+    [$wireless_node_($i) set classifier_] setnodename "wirelessnode$i-hybrid"
+    
+    #
+    # Load the appropriate Click router script for the node.
+    #
+    [$wireless_node_($i) entry] loadclick "nsclick-simple-lan.click"
+}
+
+#
+# Now create the wired nodes
+#
+for {set i 0} {$i < $wirednodecount } {incr i} {
+    set wired_node_($i) [$ns_ node]
+
+    #
+    # After creating the node, we add one wired network interface to
+    # it. By default, this interface will be named "eth0". If we
+    # added a second interface it would be named "eth1", a third
+    # "eth2" and so on.
+    #
+    $wired_node_($i) add-wired-interface $wired_chan_ $netll $wiredmac \
+	$netifq 1 $wiredphy
+
+    #
+    # Now configure the interface eth0
+    #
+    $wired_node_($i) setip "eth0" $wired_node_ip($i)
+    $wired_node_($i) setmac "eth0" $wired_node_mac($i)
+
+    #
+    # Set some node properties
+    #
+    $wired_node_($i) random-motion 0
+    $wired_node_($i) topography $wtopo
+    $wired_node_($i) nodetrace $tracefd
+
+    #
+    # The node name is used by Click to distinguish information
+    # coming from different nodes. For example, a "Print" element
+    # prepends this to the printed string so it's clear exactly
+    # which node is doing the printing.
+    #
+    [$wired_node_($i) set classifier_] setnodename "wirednode$i-hybrid"
+    
+    #
+    # Load the appropriate Click router script for the node.
+    # All nodes in this simulation are using the same script,
+    # but there's no reason why each node couldn't use a different
+    # script.
+    #
+    [$wired_node_($i) entry] loadclick "nsclick-simple-lan.click"
+}
+
+#
+# Finally make the bridge node
+#
+set bridge_node_ [$ns_ node]
+$bridge_node_ add-wired-interface $wired_chan_ $netll $wiredmac \
+	$netifq 1 $wiredphy
+$bridge_node_ add-interface $wireless_chan_ $prop_ $netll \
+	    $wirelessmac $netifq 1 $wirelessphy $antenna $wtopo
+$bridge_node_ setpromiscuous 0 1
+$bridge_node_ setpromiscuous 1 1
+
+$bridge_node_ random-motion 0
+$bridge_node_ topography $wtopo
+$bridge_node_ nodetrace $tracefd
+
+[$bridge_node_ entry] loadclick "nsclick-simple-bridge.click"
+[$bridge_node_ set classifier_] setnodename "bridgenode-hybrid"
+
+# 
+# Define node network traffic. There isn't a whole lot going on
+# in this simple test case, we're just going to have the first wireless node
+# send packets to the first wired node, starting at 1 second, and ending at 10.
+# There are Perl scripts available to automatically generate network
+# traffic.
+#
+
+
+#
+# Start transmitting at $startxmittime, $xmitrate packets per second.
+#
+set startxmittime 1
+set xmitrate 4
+set xmitinterval 0.25
+set packetsize 64
+
+#
+# We use the "raw" packet type, which sends real packet data
+# down the pipe.
+#
+set raw_(0) [new Agent/Raw]
+$ns_ attach-agent $wireless_node_(0) $raw_(0)
+
+set null_(0) [new Agent/Null]
+$ns_ attach-agent $wired_node_(0) $null_(0)
+
+#
+# The CBR object is just the default ns-2 CBR object, so
+# no change in the meaning of the parameters.
+#
+set cbr_(0) [new Application/Traffic/CBR]
+$cbr_(0) set packetSize_ $packetsize
+$cbr_(0) set interval_ $xmitinterval
+$cbr_(0) set random_ 0
+$cbr_(0) set maxpkts_ [expr ($stoptime - $startxmittime)*$xmitrate]
+$cbr_(0) attach-agent $raw_(0)
+
+#
+# The Raw agent creates real UDP packets, so it has to know
+# the source and destination IP addresses and port numberes.
+#
+$raw_(0) set-srcip [$wireless_node_(0) getip eth0]
+$raw_(0) set-srcport 5000
+$raw_(0) set-destport 5000
+$raw_(0) set-destip [$wired_node_(0) getip eth0]
+
+$ns_ at $startxmittime "$cbr_(0) start"
+
+
+$wireless_node_(0) set X_ 10
+$wireless_node_(0) set Y_ 50
+$wireless_node_(0) set Z_ 0
+
+$wireless_node_(1) set X_ 50
+$wireless_node_(1) set Y_ 50
+$wireless_node_(1) set Z_ 0
+
+$wireless_node_(2) set X_ 90
+$wireless_node_(2) set Y_ 50
+$wireless_node_(2) set Z_ 0
+
+$bridge_node_ set X_ 50
+$bridge_node_ set Y_ 10
+$bridge_node_ set Z_ 0
+
+$wired_node_(0) set X_ 10
+$wired_node_(0) set Y_ 0
+$wired_node_(0) set Z_ 0
+
+$wired_node_(1) set X_ 50
+$wired_node_(1) set Y_ 0
+$wired_node_(1) set Z_ 0
+
+$wired_node_(2) set X_ 90
+$wired_node_(2) set Y_ 0
+$wired_node_(2) set Z_ 0
+#
+# This sizes the nodes for use in nam.
+#
+for {set i 0} {$i < $wirelessnodecount} {incr i} {
+    $ns_ initial_node_pos $wireless_node_($i) 10
+    [$wireless_node_($i) entry] runclick
+}
+
+for {set i 0} {$i < $wirednodecount} {incr i} {
+    $ns_ initial_node_pos $wired_node_($i) 10
+    [$wired_node_($i) entry] runclick
+}
+
+$ns_ initial_node_pos $bridge_node_ 10
+
+#
+# Stop the simulation
+#
+$ns_ at  $stoptime.000000001 "puts \"NS EXITING...\" ; $ns_ halt"
+
+#
+# Let nam know that the simulation is done.
+#
+$ns_ at  $stoptime	"$ns_ nam-end-wireless $stoptime"
+
+
+puts "Starting Simulation..."
+$ns_ run
+
+
+
+
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/tcl/ex/nsclick-simple-hybrid.tr ns-2.30/tcl/ex/nsclick-simple-hybrid.tr
--- ns-2.30-pure/tcl/ex/nsclick-simple-hybrid.tr	1969-12-31 16:00:00.000000000 -0800
+++ ns-2.30/tcl/ex/nsclick-simple-hybrid.tr	2007-09-11 22:59:33.000000000 -0700
@@ -0,0 +1,288 @@
+s 1.000000000 _0_ AGT  --- 0 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+r 1.016121766 _3_ AGT  --- 0 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 1.018301766 _3_ AGT  --- 0 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 1.021761766 _3_ AGT  --- 0 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 1.027061766 _3_ AGT  --- 0 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 1.035561766 _3_ AGT  --- 0 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 1.057281766 _3_ AGT  --- 0 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 1.066501766 _3_ AGT  --- 0 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 1.250000000 _0_ AGT  --- 3 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+r 1.255530989 _3_ AGT  --- 3 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 1.257510989 _3_ AGT  --- 3 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 1.261230989 _3_ AGT  --- 3 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 1.266170989 _3_ AGT  --- 3 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 1.273130989 _3_ AGT  --- 3 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 1.276750989 _3_ AGT  --- 3 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 1.279670989 _3_ AGT  --- 3 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 1.500000000 _0_ AGT  --- 4 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+r 1.505770989 _3_ AGT  --- 4 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 1.507390989 _3_ AGT  --- 4 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 1.509190989 _3_ AGT  --- 4 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 1.511290989 _3_ AGT  --- 4 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 1.520050989 _3_ AGT  --- 4 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 1.537710989 _3_ AGT  --- 4 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 1.551250989 _3_ AGT  --- 4 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 1.750000000 _0_ AGT  --- 5 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+r 1.755730989 _3_ AGT  --- 5 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 1.757350989 _3_ AGT  --- 5 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 1.760310989 _3_ AGT  --- 5 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 1.765530989 _3_ AGT  --- 5 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 1.769510989 _3_ AGT  --- 5 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 1.777590989 _3_ AGT  --- 5 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 1.790930989 _3_ AGT  --- 5 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 2.000000000 _0_ AGT  --- 6 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+r 2.005590989 _3_ AGT  --- 6 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 2.007810989 _3_ AGT  --- 6 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 2.010790989 _3_ AGT  --- 6 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 2.016050989 _3_ AGT  --- 6 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 2.026670989 _3_ AGT  --- 6 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 2.033350989 _3_ AGT  --- 6 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 2.044890989 _3_ AGT  --- 6 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 2.250000000 _0_ AGT  --- 7 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+r 2.255810989 _3_ AGT  --- 7 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 2.257610989 _3_ AGT  --- 7 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 2.260650989 _3_ AGT  --- 7 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 2.263330989 _3_ AGT  --- 7 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 2.272450989 _3_ AGT  --- 7 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 2.292070989 _3_ AGT  --- 7 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 2.307570989 _3_ AGT  --- 7 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 2.500000000 _0_ AGT  --- 8 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+r 2.505790989 _3_ AGT  --- 8 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 2.507350989 _3_ AGT  --- 8 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 2.509910989 _3_ AGT  --- 8 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 2.516170989 _3_ AGT  --- 8 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 2.524230989 _3_ AGT  --- 8 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 2.533190989 _3_ AGT  --- 8 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 2.541750989 _3_ AGT  --- 8 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 2.750000000 _0_ AGT  --- 9 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+r 2.755610989 _3_ AGT  --- 9 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 2.757470989 _3_ AGT  --- 9 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 2.760090989 _3_ AGT  --- 9 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 2.763530989 _3_ AGT  --- 9 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 2.771450989 _3_ AGT  --- 9 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 2.779790989 _3_ AGT  --- 9 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 2.791470989 _3_ AGT  --- 9 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 3.000000000 _0_ AGT  --- 10 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+r 3.005590989 _3_ AGT  --- 10 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 3.007190989 _3_ AGT  --- 10 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 3.010870989 _3_ AGT  --- 10 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 3.013790989 _3_ AGT  --- 10 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 3.024910989 _3_ AGT  --- 10 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 3.030890989 _3_ AGT  --- 10 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 3.045110989 _3_ AGT  --- 10 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 3.250000000 _0_ AGT  --- 11 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+r 3.255330989 _3_ AGT  --- 11 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 3.257450989 _3_ AGT  --- 11 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 3.260150989 _3_ AGT  --- 11 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 3.264490989 _3_ AGT  --- 11 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 3.269070989 _3_ AGT  --- 11 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 3.290510989 _3_ AGT  --- 11 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 3.310890989 _3_ AGT  --- 11 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 3.500000000 _0_ AGT  --- 12 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+r 3.505490989 _3_ AGT  --- 12 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 3.507690989 _3_ AGT  --- 12 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 3.510050989 _3_ AGT  --- 12 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 3.515570989 _3_ AGT  --- 12 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 3.524730989 _3_ AGT  --- 12 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 3.544910989 _3_ AGT  --- 12 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 3.564990989 _3_ AGT  --- 12 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 3.750000000 _0_ AGT  --- 13 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+r 3.755410989 _3_ AGT  --- 13 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 3.758150989 _3_ AGT  --- 13 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 3.761790989 _3_ AGT  --- 13 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 3.763750989 _3_ AGT  --- 13 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 3.771710989 _3_ AGT  --- 13 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 3.773530989 _3_ AGT  --- 13 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 3.785270989 _3_ AGT  --- 13 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 4.000000000 _0_ AGT  --- 14 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+r 4.005630989 _3_ AGT  --- 14 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 4.007150989 _3_ AGT  --- 14 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 4.009510989 _3_ AGT  --- 14 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 4.012030989 _3_ AGT  --- 14 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 4.014850989 _3_ AGT  --- 14 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 4.025210989 _3_ AGT  --- 14 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 4.038950989 _3_ AGT  --- 14 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 4.250000000 _0_ AGT  --- 15 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+r 4.255690989 _3_ AGT  --- 15 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 4.258350989 _3_ AGT  --- 15 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 4.260270989 _3_ AGT  --- 15 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 4.263310989 _3_ AGT  --- 15 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 4.269150989 _3_ AGT  --- 15 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 4.280110989 _3_ AGT  --- 15 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 4.293770989 _3_ AGT  --- 15 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 4.500000000 _0_ AGT  --- 16 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+r 4.505610989 _3_ AGT  --- 16 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 4.507970989 _3_ AGT  --- 16 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 4.511590989 _3_ AGT  --- 16 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 4.517610989 _3_ AGT  --- 16 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 4.525410989 _3_ AGT  --- 16 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 4.536250989 _3_ AGT  --- 16 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 4.556010989 _3_ AGT  --- 16 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 4.750000000 _0_ AGT  --- 17 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+r 4.755390989 _3_ AGT  --- 17 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 4.757630989 _3_ AGT  --- 17 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 4.760130989 _3_ AGT  --- 17 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 4.762530989 _3_ AGT  --- 17 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 4.768670989 _3_ AGT  --- 17 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 4.789210989 _3_ AGT  --- 17 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 4.808110989 _3_ AGT  --- 17 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 5.000000000 _0_ AGT  --- 18 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+r 5.005310989 _3_ AGT  --- 18 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 5.007070989 _3_ AGT  --- 18 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 5.009250989 _3_ AGT  --- 18 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 5.010830989 _3_ AGT  --- 18 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 5.020070989 _3_ AGT  --- 18 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 5.028790989 _3_ AGT  --- 18 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 5.045630989 _3_ AGT  --- 18 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 5.250000000 _0_ AGT  --- 19 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+r 5.255670989 _3_ AGT  --- 19 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 5.257990989 _3_ AGT  --- 19 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 5.261170989 _3_ AGT  --- 19 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 5.267690989 _3_ AGT  --- 19 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 5.274410989 _3_ AGT  --- 19 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 5.286030989 _3_ AGT  --- 19 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 5.290170989 _3_ AGT  --- 19 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 5.500000000 _0_ AGT  --- 20 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+r 5.505530989 _3_ AGT  --- 20 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 5.508070989 _3_ AGT  --- 20 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 5.510830989 _3_ AGT  --- 20 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 5.513830989 _3_ AGT  --- 20 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 5.522790989 _3_ AGT  --- 20 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 5.528590989 _3_ AGT  --- 20 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 5.546190989 _3_ AGT  --- 20 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 5.750000000 _0_ AGT  --- 21 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+r 5.755870989 _3_ AGT  --- 21 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 5.758330989 _3_ AGT  --- 21 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 5.759910989 _3_ AGT  --- 21 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 5.765370989 _3_ AGT  --- 21 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 5.767510989 _3_ AGT  --- 21 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 5.787530989 _3_ AGT  --- 21 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 5.800310989 _3_ AGT  --- 21 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 6.000000000 _0_ AGT  --- 22 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+r 6.005470989 _3_ AGT  --- 22 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 6.008150989 _3_ AGT  --- 22 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 6.012190989 _3_ AGT  --- 22 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 6.016850989 _3_ AGT  --- 22 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 6.025090989 _3_ AGT  --- 22 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 6.035290989 _3_ AGT  --- 22 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 6.046850989 _3_ AGT  --- 22 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 6.250000000 _0_ AGT  --- 23 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+r 6.255650989 _3_ AGT  --- 23 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 6.258110989 _3_ AGT  --- 23 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 6.260230989 _3_ AGT  --- 23 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 6.265470989 _3_ AGT  --- 23 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 6.269890989 _3_ AGT  --- 23 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 6.275050989 _3_ AGT  --- 23 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 6.278350989 _3_ AGT  --- 23 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 6.500000000 _0_ AGT  --- 24 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+r 6.505330989 _3_ AGT  --- 24 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 6.507870989 _3_ AGT  --- 24 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 6.511550989 _3_ AGT  --- 24 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 6.513550989 _3_ AGT  --- 24 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 6.517910989 _3_ AGT  --- 24 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 6.524950989 _3_ AGT  --- 24 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 6.533590989 _3_ AGT  --- 24 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 6.750000000 _0_ AGT  --- 25 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+r 6.755630989 _3_ AGT  --- 25 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 6.757290989 _3_ AGT  --- 25 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 6.759010989 _3_ AGT  --- 25 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 6.764790989 _3_ AGT  --- 25 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 6.768150989 _3_ AGT  --- 25 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 6.771410989 _3_ AGT  --- 25 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 6.792230989 _3_ AGT  --- 25 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 7.000000000 _0_ AGT  --- 26 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+r 7.005890989 _3_ AGT  --- 26 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 7.008230989 _3_ AGT  --- 26 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 7.010110989 _3_ AGT  --- 26 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 7.014230989 _3_ AGT  --- 26 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 7.021390989 _3_ AGT  --- 26 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 7.032270989 _3_ AGT  --- 26 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 7.048970989 _3_ AGT  --- 26 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 7.250000000 _0_ AGT  --- 27 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+r 7.255690989 _3_ AGT  --- 27 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 7.257750989 _3_ AGT  --- 27 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 7.261470989 _3_ AGT  --- 27 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 7.266830989 _3_ AGT  --- 27 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 7.276410989 _3_ AGT  --- 27 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 7.296610989 _3_ AGT  --- 27 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 7.301790989 _3_ AGT  --- 27 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 7.500000000 _0_ AGT  --- 28 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+r 7.505750989 _3_ AGT  --- 28 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 7.507670989 _3_ AGT  --- 28 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 7.510010989 _3_ AGT  --- 28 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 7.514930989 _3_ AGT  --- 28 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 7.518670989 _3_ AGT  --- 28 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 7.530950989 _3_ AGT  --- 28 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 7.539810989 _3_ AGT  --- 28 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 7.750000000 _0_ AGT  --- 29 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+r 7.755330989 _3_ AGT  --- 29 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 7.757210989 _3_ AGT  --- 29 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 7.760190989 _3_ AGT  --- 29 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 7.762830989 _3_ AGT  --- 29 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 7.765770989 _3_ AGT  --- 29 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 7.774430989 _3_ AGT  --- 29 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 7.781810989 _3_ AGT  --- 29 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 8.000000000 _0_ AGT  --- 30 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+r 8.005330989 _3_ AGT  --- 30 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 8.007610989 _3_ AGT  --- 30 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 8.010770989 _3_ AGT  --- 30 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 8.016410989 _3_ AGT  --- 30 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 8.025530989 _3_ AGT  --- 30 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 8.037930989 _3_ AGT  --- 30 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 8.053430989 _3_ AGT  --- 30 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 8.250000000 _0_ AGT  --- 31 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+r 8.255390989 _3_ AGT  --- 31 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 8.257290989 _3_ AGT  --- 31 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 8.259650989 _3_ AGT  --- 31 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 8.261390989 _3_ AGT  --- 31 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 8.269810989 _3_ AGT  --- 31 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 8.289310989 _3_ AGT  --- 31 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 8.310470989 _3_ AGT  --- 31 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 8.500000000 _0_ AGT  --- 32 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+r 8.505530989 _3_ AGT  --- 32 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 8.507310989 _3_ AGT  --- 32 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 8.509090989 _3_ AGT  --- 32 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 8.513370989 _3_ AGT  --- 32 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 8.521250989 _3_ AGT  --- 32 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 8.535690989 _3_ AGT  --- 32 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 8.538210989 _3_ AGT  --- 32 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 8.750000000 _0_ AGT  --- 33 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+r 8.755770989 _3_ AGT  --- 33 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 8.757370989 _3_ AGT  --- 33 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 8.760790989 _3_ AGT  --- 33 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 8.764530989 _3_ AGT  --- 33 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 8.766570989 _3_ AGT  --- 33 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 8.782250989 _3_ AGT  --- 33 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 8.801350989 _3_ AGT  --- 33 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 9.000000000 _0_ AGT  --- 34 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+r 9.005710989 _3_ AGT  --- 34 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 9.007630989 _3_ AGT  --- 34 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 9.011350989 _3_ AGT  --- 34 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 9.014170989 _3_ AGT  --- 34 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 9.020870989 _3_ AGT  --- 34 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 9.037750989 _3_ AGT  --- 34 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 9.050250989 _3_ AGT  --- 34 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 9.250000000 _0_ AGT  --- 35 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+r 9.255410989 _3_ AGT  --- 35 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 9.257390989 _3_ AGT  --- 35 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 9.259670989 _3_ AGT  --- 35 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 9.264950989 _3_ AGT  --- 35 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 9.267750989 _3_ AGT  --- 35 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 9.284430989 _3_ AGT  --- 35 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 9.305150989 _3_ AGT  --- 35 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 9.500000000 _0_ AGT  --- 36 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+r 9.505710989 _3_ AGT  --- 36 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 9.508030989 _3_ AGT  --- 36 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 9.511610989 _3_ AGT  --- 36 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 9.516250989 _3_ AGT  --- 36 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 9.526830989 _3_ AGT  --- 36 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 9.537410989 _3_ AGT  --- 36 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 9.545670989 _3_ AGT  --- 36 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 9.750000000 _0_ AGT  --- 37 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+r 9.755810989 _3_ AGT  --- 37 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 9.757530989 _3_ AGT  --- 37 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 9.761510989 _3_ AGT  --- 37 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 9.764630989 _3_ AGT  --- 37 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 9.769570989 _3_ AGT  --- 37 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 9.783270989 _3_ AGT  --- 37 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+r 9.795090989 _3_ AGT  --- 37 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/tcl/ex/nsclick-simple-lan.click ns-2.30/tcl/ex/nsclick-simple-lan.click
--- ns-2.30-pure/tcl/ex/nsclick-simple-lan.click	1969-12-31 16:00:00.000000000 -0800
+++ ns-2.30/tcl/ex/nsclick-simple-lan.click	2007-09-11 21:04:07.000000000 -0700
@@ -0,0 +1,97 @@
+//
+//  Copyright 2002, Univerity of Colorado at Boulder.                        
+//                                                                            
+//                         All Rights Reserved                                
+//                                                                            
+//  Permission to use, copy, modify, and distribute this software and its    
+//  documentation for any purpose other than its incorporation into a        
+//  commercial product is hereby granted without fee, provided that the      
+//  above copyright notice appear in all copies and that both that           
+//  copyright notice and this permission notice appear in supporting         
+//  documentation, and that the name of the University not be used in        
+//  advertising or publicity pertaining to distribution of the software      
+//  without specific, written prior permission.                              
+//                                                                            
+//  UNIVERSITY OF COLORADO DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS      
+//  SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND        
+//  FITNESS FOR ANY PARTICULAR PURPOSE.  IN NO EVENT SHALL THE UNIVERSITY    
+//  OF COLORADO BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL         
+//  DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA      
+//  OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER       
+//  TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR         
+//  PERFORMANCE OF THIS SOFTWARE.                                            
+//
+
+// nsclick-simple-lan.click
+//
+// This is a simple and stupid flat routing mechanism.
+// It broadcasts ARP requests if it wants to find a destination
+// address, and it responds to ARP requests made for it.
+
+elementclass DumbRouter {
+  $myaddr, $myaddr_ethernet |
+
+  class :: Classifier(12/0806 20/0001,12/0806 20/0002, -);
+  mypackets :: IPClassifier(dst host $myaddr,-);
+  myarpquerier :: ARPQuerier($myaddr,$myaddr_ethernet);
+  myarpresponder :: ARPResponder($myaddr $myaddr_ethernet);
+  ethout :: Queue -> ToSimDevice(eth0);
+
+  FromSimDevice(eth0,SNAPLEN 4096)
+	-> Print(eth0,64)
+	-> ToDump(in_eth0,PER_NODE 1)
+	-> HostEtherFilter($myaddr_ethernet)
+	-> class;
+	
+  // ARP queries from other nodes go to the ARP responder module
+  class[0] -> myarpresponder;
+
+  // ARP responses go to our query module
+  class[1] -> [1]myarpquerier;
+
+  // All other packets get checked to see if they're meant for us
+  class[2]				
+	-> Strip(14)
+	-> CheckIPHeader
+	-> MarkIPHeader
+	-> GetIPAddress(16)
+	-> mypackets; 
+
+  // Packets for us go to "tap0" which sends them to the kernel
+  mypackets[0]
+	-> IPPrint(tokernel) 
+	-> ToDump(tokernel,2000,IP,PER_NODE 1) 
+	-> ToSimDevice(tap0,IP);
+
+  // Packets for other folks or broadcast packets get discarded
+  mypackets[1]
+	-> Print(discard,64)
+	-> ToDump(discard,2000,PER_NODE 1)
+	-> Discard;
+
+  // Packets sent out by the "kernel" get pushed into the ARP query module
+  FromSimDevice(tap0,SNAPLEN 4096)
+	-> CheckIPHeader 
+	-> IPPrint(fromkernel) 
+	-> ToDump(fromkernel,2000,IP,PER_NODE 1)
+	-> GetIPAddress(16)
+	-> myarpquerier;
+
+  // Both the ARP query and response modules send data out to
+  // the simulated network device, eth0.
+  myarpquerier
+	-> Print(fromarpquery,64)
+	-> ToDump(out_arpquery,PER_NODE 1)
+	-> ethout;
+
+  myarpresponder
+	-> Print(arpresponse,64)
+	-> ToDump(out_arprespond,PER_NODE 1)
+	-> ethout;
+}
+
+
+u :: DumbRouter(eth0,eth0);
+
+
+
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/tcl/ex/nsclick-simple-lan.nam ns-2.30/tcl/ex/nsclick-simple-lan.nam
--- ns-2.30-pure/tcl/ex/nsclick-simple-lan.nam	1969-12-31 16:00:00.000000000 -0800
+++ ns-2.30/tcl/ex/nsclick-simple-lan.nam	2007-09-11 23:20:36.000000000 -0700
@@ -0,0 +1,306 @@
+n -t * -s 0  -x 10 -y 50 -Z 0 -z 20  -v circle -c black
+n -t * -s 1  -x 50 -y 50 -Z 0 -z 20  -v circle -c black
+n -t * -s 2  -x 90 -y 50 -Z 0 -z 20  -v circle -c black
+n -t * -s 3  -x 50 -y 10 -Z 0 -z 20  -v circle -c black
+V -t * -v 1.0a5 -a 0
+W -t * -x 100 -y 100
+A -t * -n 1 -p 0 -o 0xffffffff -c 31 -a 1
+A -t * -h 1 -m 2147483647 -s 0
++ -t 1.000000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 0 -k AGT 
+- -t 1.000000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 0 -k AGT
+h -t 1.000000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 0 -k AGT
++ -t 1.001000000 -s 0 -d 0 -p raw -e 64 -c 2 -a 0 -i 1 -k MAC 
+- -t 1.001000000 -s 0 -d 0 -p raw -e 64 -c 2 -a 0 -i 1 -k MAC
+h -t 1.001000000 -s 0 -d 0 -p raw -e 64 -c 2 -a 0 -i 1 -k MAC
+r -t 1.001055200 -s 3 -d 0 -p raw -e 28 -c 2 -a 0 -i 1 -k MAC
+r -t 1.001055200 -s 2 -d 0 -p raw -e 28 -c 2 -a 0 -i 1 -k MAC
+r -t 1.001055200 -s 1 -d 0 -p raw -e 28 -c 2 -a 0 -i 1 -k MAC
++ -t 1.003055200 -s 3 -d 0 -p raw -e 64 -c 2 -a 0 -i 2 -k MAC 
+- -t 1.003055200 -s 3 -d 0 -p raw -e 64 -c 2 -a 0 -i 2 -k MAC
+h -t 1.003055200 -s 3 -d 0 -p raw -e 64 -c 2 -a 0 -i 2 -k MAC
+r -t 1.003110400 -s 0 -d 0 -p raw -e 28 -c 2 -a 0 -i 2 -k MAC
++ -t 1.005110400 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 0 -k MAC 
+- -t 1.005110400 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 0 -k MAC
+h -t 1.005110400 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 0 -k MAC
+r -t 1.005199200 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 0 -k MAC
+r -t 1.006199200 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 0 -k AGT
++ -t 1.250000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 3 -k AGT 
+- -t 1.250000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 3 -k AGT
+h -t 1.250000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 3 -k AGT
++ -t 1.251000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 3 -k MAC 
+- -t 1.251000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 3 -k MAC
+h -t 1.251000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 3 -k MAC
+r -t 1.251088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 3 -k MAC
+r -t 1.252088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 3 -k AGT
++ -t 1.500000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 4 -k AGT 
+- -t 1.500000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 4 -k AGT
+h -t 1.500000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 4 -k AGT
++ -t 1.501000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 4 -k MAC 
+- -t 1.501000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 4 -k MAC
+h -t 1.501000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 4 -k MAC
+r -t 1.501088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 4 -k MAC
+r -t 1.502088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 4 -k AGT
++ -t 1.750000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 5 -k AGT 
+- -t 1.750000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 5 -k AGT
+h -t 1.750000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 5 -k AGT
++ -t 1.751000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 5 -k MAC 
+- -t 1.751000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 5 -k MAC
+h -t 1.751000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 5 -k MAC
+r -t 1.751088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 5 -k MAC
+r -t 1.752088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 5 -k AGT
++ -t 2.000000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 6 -k AGT 
+- -t 2.000000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 6 -k AGT
+h -t 2.000000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 6 -k AGT
++ -t 2.001000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 6 -k MAC 
+- -t 2.001000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 6 -k MAC
+h -t 2.001000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 6 -k MAC
+r -t 2.001088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 6 -k MAC
+r -t 2.002088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 6 -k AGT
++ -t 2.250000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 7 -k AGT 
+- -t 2.250000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 7 -k AGT
+h -t 2.250000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 7 -k AGT
++ -t 2.251000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 7 -k MAC 
+- -t 2.251000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 7 -k MAC
+h -t 2.251000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 7 -k MAC
+r -t 2.251088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 7 -k MAC
+r -t 2.252088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 7 -k AGT
++ -t 2.500000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 8 -k AGT 
+- -t 2.500000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 8 -k AGT
+h -t 2.500000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 8 -k AGT
++ -t 2.501000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 8 -k MAC 
+- -t 2.501000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 8 -k MAC
+h -t 2.501000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 8 -k MAC
+r -t 2.501088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 8 -k MAC
+r -t 2.502088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 8 -k AGT
++ -t 2.750000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 9 -k AGT 
+- -t 2.750000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 9 -k AGT
+h -t 2.750000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 9 -k AGT
++ -t 2.751000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 9 -k MAC 
+- -t 2.751000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 9 -k MAC
+h -t 2.751000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 9 -k MAC
+r -t 2.751088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 9 -k MAC
+r -t 2.752088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 9 -k AGT
++ -t 3.000000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 10 -k AGT 
+- -t 3.000000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 10 -k AGT
+h -t 3.000000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 10 -k AGT
++ -t 3.001000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 10 -k MAC 
+- -t 3.001000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 10 -k MAC
+h -t 3.001000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 10 -k MAC
+r -t 3.001088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 10 -k MAC
+r -t 3.002088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 10 -k AGT
++ -t 3.250000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 11 -k AGT 
+- -t 3.250000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 11 -k AGT
+h -t 3.250000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 11 -k AGT
++ -t 3.251000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 11 -k MAC 
+- -t 3.251000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 11 -k MAC
+h -t 3.251000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 11 -k MAC
+r -t 3.251088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 11 -k MAC
+r -t 3.252088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 11 -k AGT
++ -t 3.500000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 12 -k AGT 
+- -t 3.500000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 12 -k AGT
+h -t 3.500000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 12 -k AGT
++ -t 3.501000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 12 -k MAC 
+- -t 3.501000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 12 -k MAC
+h -t 3.501000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 12 -k MAC
+r -t 3.501088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 12 -k MAC
+r -t 3.502088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 12 -k AGT
++ -t 3.750000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 13 -k AGT 
+- -t 3.750000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 13 -k AGT
+h -t 3.750000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 13 -k AGT
++ -t 3.751000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 13 -k MAC 
+- -t 3.751000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 13 -k MAC
+h -t 3.751000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 13 -k MAC
+r -t 3.751088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 13 -k MAC
+r -t 3.752088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 13 -k AGT
++ -t 4.000000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 14 -k AGT 
+- -t 4.000000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 14 -k AGT
+h -t 4.000000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 14 -k AGT
++ -t 4.001000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 14 -k MAC 
+- -t 4.001000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 14 -k MAC
+h -t 4.001000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 14 -k MAC
+r -t 4.001088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 14 -k MAC
+r -t 4.002088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 14 -k AGT
++ -t 4.250000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 15 -k AGT 
+- -t 4.250000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 15 -k AGT
+h -t 4.250000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 15 -k AGT
++ -t 4.251000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 15 -k MAC 
+- -t 4.251000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 15 -k MAC
+h -t 4.251000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 15 -k MAC
+r -t 4.251088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 15 -k MAC
+r -t 4.252088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 15 -k AGT
++ -t 4.500000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 16 -k AGT 
+- -t 4.500000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 16 -k AGT
+h -t 4.500000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 16 -k AGT
++ -t 4.501000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 16 -k MAC 
+- -t 4.501000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 16 -k MAC
+h -t 4.501000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 16 -k MAC
+r -t 4.501088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 16 -k MAC
+r -t 4.502088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 16 -k AGT
++ -t 4.750000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 17 -k AGT 
+- -t 4.750000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 17 -k AGT
+h -t 4.750000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 17 -k AGT
++ -t 4.751000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 17 -k MAC 
+- -t 4.751000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 17 -k MAC
+h -t 4.751000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 17 -k MAC
+r -t 4.751088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 17 -k MAC
+r -t 4.752088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 17 -k AGT
++ -t 5.000000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 18 -k AGT 
+- -t 5.000000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 18 -k AGT
+h -t 5.000000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 18 -k AGT
++ -t 5.001000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 18 -k MAC 
+- -t 5.001000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 18 -k MAC
+h -t 5.001000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 18 -k MAC
+r -t 5.001088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 18 -k MAC
+r -t 5.002088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 18 -k AGT
++ -t 5.250000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 19 -k AGT 
+- -t 5.250000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 19 -k AGT
+h -t 5.250000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 19 -k AGT
++ -t 5.251000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 19 -k MAC 
+- -t 5.251000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 19 -k MAC
+h -t 5.251000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 19 -k MAC
+r -t 5.251088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 19 -k MAC
+r -t 5.252088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 19 -k AGT
++ -t 5.500000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 20 -k AGT 
+- -t 5.500000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 20 -k AGT
+h -t 5.500000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 20 -k AGT
++ -t 5.501000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 20 -k MAC 
+- -t 5.501000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 20 -k MAC
+h -t 5.501000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 20 -k MAC
+r -t 5.501088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 20 -k MAC
+r -t 5.502088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 20 -k AGT
++ -t 5.750000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 21 -k AGT 
+- -t 5.750000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 21 -k AGT
+h -t 5.750000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 21 -k AGT
++ -t 5.751000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 21 -k MAC 
+- -t 5.751000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 21 -k MAC
+h -t 5.751000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 21 -k MAC
+r -t 5.751088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 21 -k MAC
+r -t 5.752088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 21 -k AGT
++ -t 6.000000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 22 -k AGT 
+- -t 6.000000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 22 -k AGT
+h -t 6.000000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 22 -k AGT
++ -t 6.001000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 22 -k MAC 
+- -t 6.001000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 22 -k MAC
+h -t 6.001000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 22 -k MAC
+r -t 6.001088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 22 -k MAC
+r -t 6.002088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 22 -k AGT
++ -t 6.250000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 23 -k AGT 
+- -t 6.250000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 23 -k AGT
+h -t 6.250000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 23 -k AGT
++ -t 6.251000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 23 -k MAC 
+- -t 6.251000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 23 -k MAC
+h -t 6.251000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 23 -k MAC
+r -t 6.251088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 23 -k MAC
+r -t 6.252088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 23 -k AGT
++ -t 6.500000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 24 -k AGT 
+- -t 6.500000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 24 -k AGT
+h -t 6.500000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 24 -k AGT
++ -t 6.501000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 24 -k MAC 
+- -t 6.501000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 24 -k MAC
+h -t 6.501000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 24 -k MAC
+r -t 6.501088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 24 -k MAC
+r -t 6.502088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 24 -k AGT
++ -t 6.750000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 25 -k AGT 
+- -t 6.750000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 25 -k AGT
+h -t 6.750000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 25 -k AGT
++ -t 6.751000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 25 -k MAC 
+- -t 6.751000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 25 -k MAC
+h -t 6.751000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 25 -k MAC
+r -t 6.751088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 25 -k MAC
+r -t 6.752088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 25 -k AGT
++ -t 7.000000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 26 -k AGT 
+- -t 7.000000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 26 -k AGT
+h -t 7.000000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 26 -k AGT
++ -t 7.001000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 26 -k MAC 
+- -t 7.001000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 26 -k MAC
+h -t 7.001000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 26 -k MAC
+r -t 7.001088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 26 -k MAC
+r -t 7.002088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 26 -k AGT
++ -t 7.250000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 27 -k AGT 
+- -t 7.250000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 27 -k AGT
+h -t 7.250000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 27 -k AGT
++ -t 7.251000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 27 -k MAC 
+- -t 7.251000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 27 -k MAC
+h -t 7.251000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 27 -k MAC
+r -t 7.251088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 27 -k MAC
+r -t 7.252088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 27 -k AGT
++ -t 7.500000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 28 -k AGT 
+- -t 7.500000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 28 -k AGT
+h -t 7.500000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 28 -k AGT
++ -t 7.501000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 28 -k MAC 
+- -t 7.501000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 28 -k MAC
+h -t 7.501000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 28 -k MAC
+r -t 7.501088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 28 -k MAC
+r -t 7.502088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 28 -k AGT
++ -t 7.750000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 29 -k AGT 
+- -t 7.750000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 29 -k AGT
+h -t 7.750000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 29 -k AGT
++ -t 7.751000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 29 -k MAC 
+- -t 7.751000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 29 -k MAC
+h -t 7.751000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 29 -k MAC
+r -t 7.751088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 29 -k MAC
+r -t 7.752088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 29 -k AGT
++ -t 8.000000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 30 -k AGT 
+- -t 8.000000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 30 -k AGT
+h -t 8.000000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 30 -k AGT
++ -t 8.001000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 30 -k MAC 
+- -t 8.001000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 30 -k MAC
+h -t 8.001000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 30 -k MAC
+r -t 8.001088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 30 -k MAC
+r -t 8.002088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 30 -k AGT
++ -t 8.250000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 31 -k AGT 
+- -t 8.250000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 31 -k AGT
+h -t 8.250000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 31 -k AGT
++ -t 8.251000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 31 -k MAC 
+- -t 8.251000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 31 -k MAC
+h -t 8.251000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 31 -k MAC
+r -t 8.251088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 31 -k MAC
+r -t 8.252088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 31 -k AGT
++ -t 8.500000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 32 -k AGT 
+- -t 8.500000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 32 -k AGT
+h -t 8.500000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 32 -k AGT
++ -t 8.501000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 32 -k MAC 
+- -t 8.501000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 32 -k MAC
+h -t 8.501000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 32 -k MAC
+r -t 8.501088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 32 -k MAC
+r -t 8.502088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 32 -k AGT
++ -t 8.750000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 33 -k AGT 
+- -t 8.750000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 33 -k AGT
+h -t 8.750000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 33 -k AGT
++ -t 8.751000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 33 -k MAC 
+- -t 8.751000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 33 -k MAC
+h -t 8.751000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 33 -k MAC
+r -t 8.751088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 33 -k MAC
+r -t 8.752088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 33 -k AGT
++ -t 9.000000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 34 -k AGT 
+- -t 9.000000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 34 -k AGT
+h -t 9.000000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 34 -k AGT
++ -t 9.001000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 34 -k MAC 
+- -t 9.001000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 34 -k MAC
+h -t 9.001000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 34 -k MAC
+r -t 9.001088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 34 -k MAC
+r -t 9.002088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 34 -k AGT
++ -t 9.250000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 35 -k AGT 
+- -t 9.250000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 35 -k AGT
+h -t 9.250000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 35 -k AGT
++ -t 9.251000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 35 -k MAC 
+- -t 9.251000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 35 -k MAC
+h -t 9.251000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 35 -k MAC
+r -t 9.251088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 35 -k MAC
+r -t 9.252088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 35 -k AGT
++ -t 9.500000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 36 -k AGT 
+- -t 9.500000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 36 -k AGT
+h -t 9.500000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 36 -k AGT
++ -t 9.501000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 36 -k MAC 
+- -t 9.501000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 36 -k MAC
+h -t 9.501000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 36 -k MAC
+r -t 9.501088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 36 -k MAC
+r -t 9.502088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 36 -k AGT
++ -t 9.750000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 37 -k AGT 
+- -t 9.750000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 37 -k AGT
+h -t 9.750000000 -s 0 -d -1 -p raw -e 92 -c 2 -a 0 -i 37 -k AGT
++ -t 9.751000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 37 -k MAC 
+- -t 9.751000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 37 -k MAC
+h -t 9.751000000 -s 0 -d 3 -p raw -e 106 -c 2 -a 0 -i 37 -k MAC
+r -t 9.751088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 37 -k MAC
+r -t 9.752088800 -s 3 -d 3 -p raw -e 92 -c 2 -a 0 -i 37 -k AGT
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/tcl/ex/nsclick-simple-lan.tcl ns-2.30/tcl/ex/nsclick-simple-lan.tcl
--- ns-2.30-pure/tcl/ex/nsclick-simple-lan.tcl	1969-12-31 16:00:00.000000000 -0800
+++ ns-2.30/tcl/ex/nsclick-simple-lan.tcl	2007-09-11 21:04:07.000000000 -0700
@@ -0,0 +1,271 @@
+#
+#  Copyright 2002, Univerity of Colorado at Boulder.                        
+#                                                                            
+#                         All Rights Reserved                                
+#                                                                            
+#  Permission to use, copy, modify, and distribute this software and its    
+#  documentation for any purpose other than its incorporation into a        
+#  commercial product is hereby granted without fee, provided that the      
+#  above copyright notice appear in all copies and that both that           
+#  copyright notice and this permission notice appear in supporting         
+#  documentation, and that the name of the University not be used in        
+#  advertising or publicity pertaining to distribution of the software      
+#  without specific, written prior permission.                              
+#                                                                            
+#  UNIVERSITY OF COLORADO DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS      
+#  SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND        
+#  FITNESS FOR ANY PARTICULAR PURPOSE.  IN NO EVENT SHALL THE UNIVERSITY    
+#  OF COLORADO BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL         
+#  DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA      
+#  OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER       
+#  TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR         
+#  PERFORMANCE OF THIS SOFTWARE.                                            
+#
+# nsclick-simple-lan.tcl
+#
+# A sample nsclick script simulating a small LAN
+#
+
+#
+# Set some general simulation parameters
+#
+
+# 
+# Even though this is a wired simulation with non-moving nodes, nsclick
+# uses the mobile node type. This means we have to set the size of the
+# playing field and the topography even though it won't matter.
+#
+set xsize 100
+set ysize 100
+set wtopo	[new Topography]
+$wtopo load_flatgrid $xsize $ysize
+
+#
+# The network channel, physical layer, and MAC are all standard ns-2.
+#  
+set netchan	Channel
+set netphy	Phy/WiredPhy
+set netmac	Mac/802_3
+
+#
+# We have to use a special queue and link layer. This is so that
+# Click can have control over the network interface packet queue,
+# which is vital if we want to play with, e.g. QoS algorithms.
+#
+set netifq	Queue/ClickQueue
+set netll	LL/Ext
+LL set delay_			1ms
+
+#
+# These are pretty self-explanatory, just the number of nodes
+# and when we'll stop.
+#
+set nodecount   4
+set stoptime	10.0
+
+#
+# With nsclick, we have to worry about details like which network
+# port to use for communication. This sets the default ports to 5000.
+#
+Agent/Null set sport_		5000
+Agent/Null set dport_		5001
+
+Agent/CBR set sport_		5002
+Agent/CBR set dport_		5003
+
+#
+# Standard ns-2 stuff here - create the simulator object.
+#
+Simulator set MacTrace_ ON
+set ns_		[new Simulator]
+
+#
+# Create and activate trace files.
+#
+set tracefd	[open "nsclick-simple-lan.tr" w]
+set namtrace    [open "nsclick-simple-lan.nam" w]
+$ns_ trace-all $tracefd
+$ns_ namtrace-all-wireless $namtrace $xsize $ysize
+$ns_ use-newtrace
+
+
+#
+# Create the "god" object. This is another artifact of using
+# the mobile node type. We have to have this even though
+# we never use it.
+#
+set god_ [create-god $nodecount]
+
+#
+# Tell the simulator to create Click nodes.
+#
+Simulator set node_factory_ Node/MobileNode/ClickNode
+
+#
+# Create a network Channel for the nodes to use. One channel
+# per LAN.
+#
+set chan_1_ [new $netchan]
+
+#
+# In nsclick we have to worry about assigning IP and MAC addresses
+# to out network interfaces. Here we generate a list of IP and MAC
+# addresses, one per node since we've only got one network interface
+# per node in this case. Also note that this scheme only works for
+# fewer than 255 nodes, and we aren't worrying about subnet masks.
+#
+set iptemplate "192.168.1.%d"
+set mactemplate "00:03:47:70:89:%0x"
+for {set i 0} {$i < $nodecount} {incr i} {
+    set node_ip($i) [format $iptemplate [expr $i+1]]
+    set node_mac($i) [format $mactemplate [expr $i+1]]
+}
+
+#
+# We set the routing protocol to "Empty" so that ns-2 doesn't do
+# any packet routing. All of the routing will be done by the
+# Click script.
+#
+$ns_ rtproto Empty
+
+#
+# Here is where we actually create all of the nodes.
+#
+for {set i 0} {$i < $nodecount } {incr i} {
+    set node_($i) [$ns_ node]
+
+    #
+    # After creating the node, we add one wired network interface to
+    # it. By default, this interface will be named "eth0". If we
+    # added a second interface it would be named "eth1", a third
+    # "eth2" and so on.
+    #
+    $node_($i) add-wired-interface $chan_1_ $netll $netmac \
+	$netifq 1 $netphy
+
+    #
+    # Now configure the interface eth0
+    #
+    $node_($i) setip "eth0" $node_ip($i)
+    $node_($i) setmac "eth0" $node_mac($i)
+
+    #
+    # Set some node properties
+    #
+    $node_($i) random-motion 0
+    $node_($i) topography $wtopo
+    $node_($i) nodetrace $tracefd
+
+    #
+    # The node name is used by Click to distinguish information
+    # coming from different nodes. For example, a "Print" element
+    # prepends this to the printed string so it's clear exactly
+    # which node is doing the printing.
+    #
+    [$node_($i) set classifier_] setnodename "node$i-simplelan"
+    
+    #
+    # Load the appropriate Click router script for the node.
+    # All nodes in this simulation are using the same script,
+    # but there's no reason why each node couldn't use a different
+    # script.
+    #
+    [$node_($i) entry] loadclick "nsclick-simple-lan.click"
+}
+
+
+# 
+# Define node network traffic. There isn't a whole lot going on
+# in this simple test case, we're just going to have the first node
+# send packets to the last node, starting at 1 second, and ending at 10.
+# There are Perl scripts available to automatically generate network
+# traffic.
+#
+
+
+#
+# Start transmitting at $startxmittime, $xmitrate packets per second.
+#
+set startxmittime 1
+set xmitrate 4
+set xmitinterval 0.25
+set packetsize 64
+
+#
+# We use the "raw" packet type, which sends real packet data
+# down the pipe.
+#
+set raw_(0) [new Agent/Raw]
+$ns_ attach-agent $node_(0) $raw_(0)
+
+set lastnode [expr $nodecount-1]
+set null_(0) [new Agent/Null]
+$ns_ attach-agent $node_($lastnode) $null_(0)
+
+#
+# The CBR object is just the default ns-2 CBR object, so
+# no change in the meaning of the parameters.
+#
+set cbr_(0) [new Application/Traffic/CBR]
+$cbr_(0) set packetSize_ $packetsize
+$cbr_(0) set interval_ $xmitinterval
+$cbr_(0) set random_ 0
+$cbr_(0) set maxpkts_ [expr ($stoptime - $startxmittime)*$xmitrate]
+$cbr_(0) attach-agent $raw_(0)
+
+#
+# The Raw agent creates real UDP packets, so it has to know
+# the source and destination IP addresses and port numberes.
+#
+$raw_(0) set-srcip [$node_(0) getip eth0]
+$raw_(0) set-srcport 5000
+$raw_(0) set-destport 5001
+$raw_(0) set-destip [$node_($lastnode) getip eth0]
+
+$ns_ at $startxmittime "$cbr_(0) start"
+
+#
+# Set node positions. For wired networks, these are only used
+# when looking at nam traces.
+#
+$node_(0) set X_ 10
+$node_(0) set Y_ 50
+$node_(0) set Z_ 0
+
+$node_(1) set X_ 50
+$node_(1) set Y_ 50
+$node_(1) set Z_ 0
+
+$node_(2) set X_ 90
+$node_(2) set Y_ 50
+$node_(2) set Z_ 0
+
+$node_(3) set X_ 50
+$node_(3) set Y_ 10
+$node_(3) set Z_ 0
+
+#
+# This sizes the nodes for use in nam.
+#
+for {set i 0} {$i < $nodecount} {incr i} {
+    $ns_ initial_node_pos $node_($i) 20
+    [$node_($i) entry] runclick
+}
+
+#
+# Stop the simulation
+#
+$ns_ at  $stoptime.000000001 "puts \"NS EXITING...\" ; $ns_ halt"
+
+#
+# Let nam know that the simulation is done.
+#
+$ns_ at  $stoptime	"$ns_ nam-end-wireless $stoptime"
+
+
+puts "Starting Simulation..."
+$ns_ run
+
+
+
+
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/tcl/ex/nsclick-simple-lan.tr ns-2.30/tcl/ex/nsclick-simple-lan.tr
--- ns-2.30-pure/tcl/ex/nsclick-simple-lan.tr	1969-12-31 16:00:00.000000000 -0800
+++ ns-2.30/tcl/ex/nsclick-simple-lan.tr	2007-09-11 23:20:36.000000000 -0700
@@ -0,0 +1,150 @@
+s 1.000000000 _0_ AGT  --- 0 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+s 1.001000000 _0_ MAC  --- 1 raw 64 [0 0 ffff0008 0] ------- [0:0 0:0 0 0] raw 
+r 1.001055200 _3_ MAC  --- 1 raw 28 [0 0 ffff0008 0] ------- [0:0 0:0 0 0] raw 
+r 1.001055200 _2_ MAC  --- 1 raw 28 [0 0 ffff0008 0] ------- [0:0 0:0 0 0] raw 
+r 1.001055200 _1_ MAC  --- 1 raw 28 [0 0 ffff0008 0] ------- [0:0 0:0 0 0] raw 
+s 1.003055200 _3_ MAC  --- 2 raw 64 [0 3000000 8 0] ------- [0:0 0:0 0 0] raw 
+r 1.003110400 _0_ MAC  --- 2 raw 28 [0 3000000 8 0] ------- [0:0 0:0 0 0] raw 
+s 1.005110400 _0_ MAC  --- 0 raw 106 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 1.005199200 _3_ MAC  --- 0 raw 92 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 1.006199200 _3_ AGT  --- 0 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 1.250000000 _0_ AGT  --- 3 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+s 1.251000000 _0_ MAC  --- 3 raw 106 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 1.251088800 _3_ MAC  --- 3 raw 92 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 1.252088800 _3_ AGT  --- 3 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 1.500000000 _0_ AGT  --- 4 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+s 1.501000000 _0_ MAC  --- 4 raw 106 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 1.501088800 _3_ MAC  --- 4 raw 92 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 1.502088800 _3_ AGT  --- 4 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 1.750000000 _0_ AGT  --- 5 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+s 1.751000000 _0_ MAC  --- 5 raw 106 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 1.751088800 _3_ MAC  --- 5 raw 92 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 1.752088800 _3_ AGT  --- 5 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 2.000000000 _0_ AGT  --- 6 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+s 2.001000000 _0_ MAC  --- 6 raw 106 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 2.001088800 _3_ MAC  --- 6 raw 92 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 2.002088800 _3_ AGT  --- 6 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 2.250000000 _0_ AGT  --- 7 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+s 2.251000000 _0_ MAC  --- 7 raw 106 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 2.251088800 _3_ MAC  --- 7 raw 92 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 2.252088800 _3_ AGT  --- 7 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 2.500000000 _0_ AGT  --- 8 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+s 2.501000000 _0_ MAC  --- 8 raw 106 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 2.501088800 _3_ MAC  --- 8 raw 92 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 2.502088800 _3_ AGT  --- 8 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 2.750000000 _0_ AGT  --- 9 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+s 2.751000000 _0_ MAC  --- 9 raw 106 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 2.751088800 _3_ MAC  --- 9 raw 92 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 2.752088800 _3_ AGT  --- 9 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 3.000000000 _0_ AGT  --- 10 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+s 3.001000000 _0_ MAC  --- 10 raw 106 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 3.001088800 _3_ MAC  --- 10 raw 92 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 3.002088800 _3_ AGT  --- 10 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 3.250000000 _0_ AGT  --- 11 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+s 3.251000000 _0_ MAC  --- 11 raw 106 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 3.251088800 _3_ MAC  --- 11 raw 92 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 3.252088800 _3_ AGT  --- 11 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 3.500000000 _0_ AGT  --- 12 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+s 3.501000000 _0_ MAC  --- 12 raw 106 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 3.501088800 _3_ MAC  --- 12 raw 92 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 3.502088800 _3_ AGT  --- 12 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 3.750000000 _0_ AGT  --- 13 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+s 3.751000000 _0_ MAC  --- 13 raw 106 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 3.751088800 _3_ MAC  --- 13 raw 92 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 3.752088800 _3_ AGT  --- 13 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 4.000000000 _0_ AGT  --- 14 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+s 4.001000000 _0_ MAC  --- 14 raw 106 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 4.001088800 _3_ MAC  --- 14 raw 92 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 4.002088800 _3_ AGT  --- 14 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 4.250000000 _0_ AGT  --- 15 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+s 4.251000000 _0_ MAC  --- 15 raw 106 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 4.251088800 _3_ MAC  --- 15 raw 92 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 4.252088800 _3_ AGT  --- 15 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 4.500000000 _0_ AGT  --- 16 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+s 4.501000000 _0_ MAC  --- 16 raw 106 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 4.501088800 _3_ MAC  --- 16 raw 92 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 4.502088800 _3_ AGT  --- 16 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 4.750000000 _0_ AGT  --- 17 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+s 4.751000000 _0_ MAC  --- 17 raw 106 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 4.751088800 _3_ MAC  --- 17 raw 92 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 4.752088800 _3_ AGT  --- 17 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 5.000000000 _0_ AGT  --- 18 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+s 5.001000000 _0_ MAC  --- 18 raw 106 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 5.001088800 _3_ MAC  --- 18 raw 92 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 5.002088800 _3_ AGT  --- 18 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 5.250000000 _0_ AGT  --- 19 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+s 5.251000000 _0_ MAC  --- 19 raw 106 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 5.251088800 _3_ MAC  --- 19 raw 92 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 5.252088800 _3_ AGT  --- 19 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 5.500000000 _0_ AGT  --- 20 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+s 5.501000000 _0_ MAC  --- 20 raw 106 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 5.501088800 _3_ MAC  --- 20 raw 92 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 5.502088800 _3_ AGT  --- 20 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 5.750000000 _0_ AGT  --- 21 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+s 5.751000000 _0_ MAC  --- 21 raw 106 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 5.751088800 _3_ MAC  --- 21 raw 92 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 5.752088800 _3_ AGT  --- 21 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 6.000000000 _0_ AGT  --- 22 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+s 6.001000000 _0_ MAC  --- 22 raw 106 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 6.001088800 _3_ MAC  --- 22 raw 92 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 6.002088800 _3_ AGT  --- 22 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 6.250000000 _0_ AGT  --- 23 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+s 6.251000000 _0_ MAC  --- 23 raw 106 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 6.251088800 _3_ MAC  --- 23 raw 92 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 6.252088800 _3_ AGT  --- 23 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 6.500000000 _0_ AGT  --- 24 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+s 6.501000000 _0_ MAC  --- 24 raw 106 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 6.501088800 _3_ MAC  --- 24 raw 92 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 6.502088800 _3_ AGT  --- 24 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 6.750000000 _0_ AGT  --- 25 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+s 6.751000000 _0_ MAC  --- 25 raw 106 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 6.751088800 _3_ MAC  --- 25 raw 92 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 6.752088800 _3_ AGT  --- 25 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 7.000000000 _0_ AGT  --- 26 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+s 7.001000000 _0_ MAC  --- 26 raw 106 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 7.001088800 _3_ MAC  --- 26 raw 92 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 7.002088800 _3_ AGT  --- 26 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 7.250000000 _0_ AGT  --- 27 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+s 7.251000000 _0_ MAC  --- 27 raw 106 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 7.251088800 _3_ MAC  --- 27 raw 92 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 7.252088800 _3_ AGT  --- 27 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 7.500000000 _0_ AGT  --- 28 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+s 7.501000000 _0_ MAC  --- 28 raw 106 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 7.501088800 _3_ MAC  --- 28 raw 92 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 7.502088800 _3_ AGT  --- 28 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 7.750000000 _0_ AGT  --- 29 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+s 7.751000000 _0_ MAC  --- 29 raw 106 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 7.751088800 _3_ MAC  --- 29 raw 92 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 7.752088800 _3_ AGT  --- 29 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 8.000000000 _0_ AGT  --- 30 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+s 8.001000000 _0_ MAC  --- 30 raw 106 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 8.001088800 _3_ MAC  --- 30 raw 92 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 8.002088800 _3_ AGT  --- 30 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 8.250000000 _0_ AGT  --- 31 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+s 8.251000000 _0_ MAC  --- 31 raw 106 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 8.251088800 _3_ MAC  --- 31 raw 92 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 8.252088800 _3_ AGT  --- 31 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 8.500000000 _0_ AGT  --- 32 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+s 8.501000000 _0_ MAC  --- 32 raw 106 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 8.501088800 _3_ MAC  --- 32 raw 92 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 8.502088800 _3_ AGT  --- 32 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 8.750000000 _0_ AGT  --- 33 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+s 8.751000000 _0_ MAC  --- 33 raw 106 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 8.751088800 _3_ MAC  --- 33 raw 92 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 8.752088800 _3_ AGT  --- 33 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 9.000000000 _0_ AGT  --- 34 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+s 9.001000000 _0_ MAC  --- 34 raw 106 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 9.001088800 _3_ MAC  --- 34 raw 92 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 9.002088800 _3_ AGT  --- 34 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 9.250000000 _0_ AGT  --- 35 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+s 9.251000000 _0_ MAC  --- 35 raw 106 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 9.251088800 _3_ MAC  --- 35 raw 92 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 9.252088800 _3_ AGT  --- 35 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 9.500000000 _0_ AGT  --- 36 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+s 9.501000000 _0_ MAC  --- 36 raw 106 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 9.501088800 _3_ MAC  --- 36 raw 92 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 9.502088800 _3_ AGT  --- 36 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
+s 9.750000000 _0_ AGT  --- 37 raw 92 [0 0 0 0] ------- [0:0 -1:-1 32 0] raw 
+s 9.751000000 _0_ MAC  --- 37 raw 106 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 9.751088800 _3_ MAC  --- 37 raw 92 [0 0 8 0] ------- [0:0 0:0 0 3] raw 
+r 9.752088800 _3_ AGT  --- 37 raw 92 [0 0 ffff0000 0] ------- [0:0 0:0 0 3] raw 
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/tcl/ex/nsclick-simple-wlan.tcl ns-2.30/tcl/ex/nsclick-simple-wlan.tcl
--- ns-2.30-pure/tcl/ex/nsclick-simple-wlan.tcl	1969-12-31 16:00:00.000000000 -0800
+++ ns-2.30/tcl/ex/nsclick-simple-wlan.tcl	2007-09-11 21:04:07.000000000 -0700
@@ -0,0 +1,295 @@
+#
+#  Copyright 2002, Univerity of Colorado at Boulder.                        
+#                                                                            
+#                         All Rights Reserved                                
+#                                                                            
+#  Permission to use, copy, modify, and distribute this software and its    
+#  documentation for any purpose other than its incorporation into a        
+#  commercial product is hereby granted without fee, provided that the      
+#  above copyright notice appear in all copies and that both that           
+#  copyright notice and this permission notice appear in supporting         
+#  documentation, and that the name of the University not be used in        
+#  advertising or publicity pertaining to distribution of the software      
+#  without specific, written prior permission.                              
+#                                                                            
+#  UNIVERSITY OF COLORADO DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS      
+#  SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND        
+#  FITNESS FOR ANY PARTICULAR PURPOSE.  IN NO EVENT SHALL THE UNIVERSITY    
+#  OF COLORADO BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL         
+#  DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA      
+#  OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER       
+#  TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR         
+#  PERFORMANCE OF THIS SOFTWARE.                                            
+#
+# nsclick-simple-lan.tcl
+#
+# A sample nsclick script simulating a small LAN
+#
+
+#
+# Set some general simulation parameters
+#
+
+#
+# Unity gain, omnidirectional antennas, centered 1.5m above each node.
+# These values are lifted from the ns-2 sample files.
+#
+Antenna/OmniAntenna set X_ 0
+Antenna/OmniAntenna set Y_ 0
+Antenna/OmniAntenna set Z_ 1.5
+Antenna/OmniAntenna set Gt_ 1.0
+Antenna/OmniAntenna set Gr_ 1.0
+
+#
+# Initialize the SharedMedia interface with parameters to make
+# it work like the 914MHz Lucent WaveLAN DSSS radio interface
+# These are taken directly from the ns-2 sample files.
+#
+Phy/WirelessPhy set CPThresh_ 10.0
+Phy/WirelessPhy set CSThresh_ 1.559e-11
+Phy/WirelessPhy set RXThresh_ 3.652e-10
+Phy/WirelessPhy set Rb_ 2*1e6
+Phy/WirelessPhy set Pt_ 0.2818
+Phy/WirelessPhy set freq_ 914e+6 
+Phy/WirelessPhy set L_ 1.0
+
+# 
+# Set the size of the playing field and the topography.
+#
+set xsize 100
+set ysize 100
+set wtopo	[new Topography]
+$wtopo load_flatgrid $xsize $ysize
+
+#
+# The network channel, physical layer, MAC, propagation model,
+# and antenna model are all standard ns-2.
+#  
+set netchan	Channel/WirelessChannel
+set netphy	Phy/WirelessPhy
+set netmac	Mac/802_11
+set netprop     Propagation/TwoRayGround
+set antenna     Antenna/OmniAntenna
+
+#
+# We have to use a special queue and link layer. This is so that
+# Click can have control over the network interface packet queue,
+# which is vital if we want to play with, e.g. QoS algorithms.
+#
+set netifq	Queue/ClickQueue
+set netll	LL/Ext
+LL set delay_			1ms
+
+#
+# These are pretty self-explanatory, just the number of nodes
+# and when we'll stop.
+#
+set nodecount   4
+set stoptime	10.0
+
+#
+# With nsclick, we have to worry about details like which network
+# port to use for communication. This sets the default ports to 5000.
+#
+Agent/Null set sport_		5000
+Agent/Null set dport_		5000
+
+Agent/CBR set sport_		5000
+Agent/CBR set dport_		5000
+
+#
+# Standard ns-2 stuff here - create the simulator object.
+#
+Simulator set MacTrace_ ON
+set ns_		[new Simulator]
+
+#
+# Create and activate trace files.
+#
+set tracefd	[open "nsclick-simple-wlan.tr" w]
+set namtrace    [open "nsclick-simple-wlan.nam" w]
+$ns_ trace-all $tracefd
+$ns_ namtrace-all-wireless $namtrace $xsize $ysize
+$ns_ use-newtrace
+
+
+#
+# Create the "god" object. This is another artifact of using
+# the mobile node type. We have to have this even though
+# we never use it.
+#
+set god_ [create-god $nodecount]
+
+#
+# Tell the simulator to create Click nodes.
+#
+Simulator set node_factory_ Node/MobileNode/ClickNode
+
+#
+# Create a network Channel for the nodes to use. One channel
+# per LAN. Also set the propagation model to be used.
+#
+set chan_1_ [new $netchan]
+set prop_ [new $netprop]
+
+#
+# In nsclick we have to worry about assigning IP and MAC addresses
+# to out network interfaces. Here we generate a list of IP and MAC
+# addresses, one per node since we've only got one network interface
+# per node in this case. Also note that this scheme only works for
+# fewer than 255 nodes, and we aren't worrying about subnet masks.
+#
+set iptemplate "192.168.1.%d"
+set mactemplate "00:03:47:70:89:%0x"
+for {set i 0} {$i < $nodecount} {incr i} {
+    set node_ip($i) [format $iptemplate [expr $i+1]]
+    set node_mac($i) [format $mactemplate [expr $i+1]]
+}
+
+#
+# We set the routing protocol to "Empty" so that ns-2 doesn't do
+# any packet routing. All of the routing will be done by the
+# Click script.
+#
+$ns_ rtproto Empty
+
+#
+# Here is where we actually create all of the nodes.
+#
+for {set i 0} {$i < $nodecount } {incr i} {
+    set node_($i) [$ns_ node]
+
+    #
+    # After creating the node, we add one wireless network interface to
+    # it. By default, this interface will be named "eth0". If we
+    # added a second interface it would be named "eth1", a third
+    # "eth2" and so on.
+    #
+    $node_($i) add-interface $chan_1_ $prop_ $netll $netmac \
+	$netifq 1 $netphy $antenna $wtopo
+
+    #
+    # Now configure the interface eth0
+    #
+    $node_($i) setip "eth0" $node_ip($i)
+    $node_($i) setmac "eth0" $node_mac($i)
+
+    #
+    # Set some node properties
+    #
+    $node_($i) random-motion 0
+    $node_($i) topography $wtopo
+    $node_($i) nodetrace $tracefd
+
+    #
+    # The node name is used by Click to distinguish information
+    # coming from different nodes. For example, a "Print" element
+    # prepends this to the printed string so it's clear exactly
+    # which node is doing the printing.
+    #
+    [$node_($i) set classifier_] setnodename "node$i-simplelan"
+    
+    #
+    # Load the appropriate Click router script for the node.
+    # All nodes in this simulation are using the same script,
+    # but there's no reason why each node couldn't use a different
+    # script.
+    #
+    [$node_($i) entry] loadclick "nsclick-simple-lan.click"
+}
+
+
+# 
+# Define node network traffic. There isn't a whole lot going on
+# in this simple test case, we're just going to have the first node
+# send packets to the last node, starting at 1 second, and ending at 10.
+# There are Perl scripts available to automatically generate network
+# traffic.
+#
+
+
+#
+# Start transmitting at $startxmittime, $xmitrate packets per second.
+#
+set startxmittime 1
+set xmitrate 4
+set xmitinterval 0.25
+set packetsize 64
+
+#
+# We use the "raw" packet type, which sends real packet data
+# down the pipe.
+#
+set raw_(0) [new Agent/Raw]
+$ns_ attach-agent $node_(0) $raw_(0)
+
+set lastnode [expr $nodecount-1]
+set null_(0) [new Agent/Null]
+$ns_ attach-agent $node_($lastnode) $null_(0)
+
+#
+# The CBR object is just the default ns-2 CBR object, so
+# no change in the meaning of the parameters.
+#
+set cbr_(0) [new Application/Traffic/CBR]
+$cbr_(0) set packetSize_ $packetsize
+$cbr_(0) set interval_ $xmitinterval
+$cbr_(0) set random_ 0
+$cbr_(0) set maxpkts_ [expr ($stoptime - $startxmittime)*$xmitrate]
+$cbr_(0) attach-agent $raw_(0)
+
+#
+# The Raw agent creates real UDP packets, so it has to know
+# the source and destination IP addresses and port numberes.
+#
+$raw_(0) set-srcip [$node_(0) getip eth0]
+$raw_(0) set-srcport 5000
+$raw_(0) set-destport 5000
+$raw_(0) set-destip [$node_($lastnode) getip eth0]
+
+$ns_ at $startxmittime "$cbr_(0) start"
+
+
+$node_(0) set X_ 10
+$node_(0) set Y_ 50
+$node_(0) set Z_ 0
+
+$node_(1) set X_ 50
+$node_(1) set Y_ 50
+$node_(1) set Z_ 0
+
+$node_(2) set X_ 90
+$node_(2) set Y_ 50
+$node_(2) set Z_ 0
+
+$node_(3) set X_ 50
+$node_(3) set Y_ 10
+$node_(3) set Z_ 0
+
+
+#
+# This sizes the nodes for use in nam. Currently, the trace files
+# produced by nsclick don't really work in nam.
+#
+for {set i 0} {$i < $nodecount} {incr i} {
+    $ns_ initial_node_pos $node_($i) 20
+    [$node_($i) entry] runclick
+}
+
+#
+# Stop the simulation
+#
+$ns_ at  $stoptime.000000001 "puts \"NS EXITING...\" ; $ns_ halt"
+
+#
+# Let nam know that the simulation is done.
+#
+$ns_ at  $stoptime	"$ns_ nam-end-wireless $stoptime"
+
+
+puts "Starting Simulation..."
+$ns_ run
+
+
+
+
Binary files ns-2.30-pure/tcl/ex/wirednode0-hybrid_discard and ns-2.30/tcl/ex/wirednode0-hybrid_discard differ
Binary files ns-2.30-pure/tcl/ex/wirednode0-hybrid_fromkernel and ns-2.30/tcl/ex/wirednode0-hybrid_fromkernel differ
Binary files ns-2.30-pure/tcl/ex/wirednode0-hybrid_in_eth0 and ns-2.30/tcl/ex/wirednode0-hybrid_in_eth0 differ
Binary files ns-2.30-pure/tcl/ex/wirednode0-hybrid_out_arpquery and ns-2.30/tcl/ex/wirednode0-hybrid_out_arpquery differ
Binary files ns-2.30-pure/tcl/ex/wirednode0-hybrid_out_arprespond and ns-2.30/tcl/ex/wirednode0-hybrid_out_arprespond differ
Binary files ns-2.30-pure/tcl/ex/wirednode0-hybrid_tokernel and ns-2.30/tcl/ex/wirednode0-hybrid_tokernel differ
Binary files ns-2.30-pure/tcl/ex/wirednode1-hybrid_discard and ns-2.30/tcl/ex/wirednode1-hybrid_discard differ
Binary files ns-2.30-pure/tcl/ex/wirednode1-hybrid_fromkernel and ns-2.30/tcl/ex/wirednode1-hybrid_fromkernel differ
Binary files ns-2.30-pure/tcl/ex/wirednode1-hybrid_in_eth0 and ns-2.30/tcl/ex/wirednode1-hybrid_in_eth0 differ
Binary files ns-2.30-pure/tcl/ex/wirednode1-hybrid_out_arpquery and ns-2.30/tcl/ex/wirednode1-hybrid_out_arpquery differ
Binary files ns-2.30-pure/tcl/ex/wirednode1-hybrid_out_arprespond and ns-2.30/tcl/ex/wirednode1-hybrid_out_arprespond differ
Binary files ns-2.30-pure/tcl/ex/wirednode1-hybrid_tokernel and ns-2.30/tcl/ex/wirednode1-hybrid_tokernel differ
Binary files ns-2.30-pure/tcl/ex/wirednode2-hybrid_discard and ns-2.30/tcl/ex/wirednode2-hybrid_discard differ
Binary files ns-2.30-pure/tcl/ex/wirednode2-hybrid_fromkernel and ns-2.30/tcl/ex/wirednode2-hybrid_fromkernel differ
Binary files ns-2.30-pure/tcl/ex/wirednode2-hybrid_in_eth0 and ns-2.30/tcl/ex/wirednode2-hybrid_in_eth0 differ
Binary files ns-2.30-pure/tcl/ex/wirednode2-hybrid_out_arpquery and ns-2.30/tcl/ex/wirednode2-hybrid_out_arpquery differ
Binary files ns-2.30-pure/tcl/ex/wirednode2-hybrid_out_arprespond and ns-2.30/tcl/ex/wirednode2-hybrid_out_arprespond differ
Binary files ns-2.30-pure/tcl/ex/wirednode2-hybrid_tokernel and ns-2.30/tcl/ex/wirednode2-hybrid_tokernel differ
Binary files ns-2.30-pure/tcl/ex/wirelessnode0-hybrid_discard and ns-2.30/tcl/ex/wirelessnode0-hybrid_discard differ
Binary files ns-2.30-pure/tcl/ex/wirelessnode0-hybrid_fromkernel and ns-2.30/tcl/ex/wirelessnode0-hybrid_fromkernel differ
Binary files ns-2.30-pure/tcl/ex/wirelessnode0-hybrid_in_eth0 and ns-2.30/tcl/ex/wirelessnode0-hybrid_in_eth0 differ
Binary files ns-2.30-pure/tcl/ex/wirelessnode0-hybrid_out_arpquery and ns-2.30/tcl/ex/wirelessnode0-hybrid_out_arpquery differ
Binary files ns-2.30-pure/tcl/ex/wirelessnode0-hybrid_out_arprespond and ns-2.30/tcl/ex/wirelessnode0-hybrid_out_arprespond differ
Binary files ns-2.30-pure/tcl/ex/wirelessnode0-hybrid_tokernel and ns-2.30/tcl/ex/wirelessnode0-hybrid_tokernel differ
Binary files ns-2.30-pure/tcl/ex/wirelessnode1-hybrid_discard and ns-2.30/tcl/ex/wirelessnode1-hybrid_discard differ
Binary files ns-2.30-pure/tcl/ex/wirelessnode1-hybrid_fromkernel and ns-2.30/tcl/ex/wirelessnode1-hybrid_fromkernel differ
Binary files ns-2.30-pure/tcl/ex/wirelessnode1-hybrid_in_eth0 and ns-2.30/tcl/ex/wirelessnode1-hybrid_in_eth0 differ
Binary files ns-2.30-pure/tcl/ex/wirelessnode1-hybrid_out_arpquery and ns-2.30/tcl/ex/wirelessnode1-hybrid_out_arpquery differ
Binary files ns-2.30-pure/tcl/ex/wirelessnode1-hybrid_out_arprespond and ns-2.30/tcl/ex/wirelessnode1-hybrid_out_arprespond differ
Binary files ns-2.30-pure/tcl/ex/wirelessnode1-hybrid_tokernel and ns-2.30/tcl/ex/wirelessnode1-hybrid_tokernel differ
Binary files ns-2.30-pure/tcl/ex/wirelessnode2-hybrid_discard and ns-2.30/tcl/ex/wirelessnode2-hybrid_discard differ
Binary files ns-2.30-pure/tcl/ex/wirelessnode2-hybrid_fromkernel and ns-2.30/tcl/ex/wirelessnode2-hybrid_fromkernel differ
Binary files ns-2.30-pure/tcl/ex/wirelessnode2-hybrid_in_eth0 and ns-2.30/tcl/ex/wirelessnode2-hybrid_in_eth0 differ
Binary files ns-2.30-pure/tcl/ex/wirelessnode2-hybrid_out_arpquery and ns-2.30/tcl/ex/wirelessnode2-hybrid_out_arpquery differ
Binary files ns-2.30-pure/tcl/ex/wirelessnode2-hybrid_out_arprespond and ns-2.30/tcl/ex/wirelessnode2-hybrid_out_arprespond differ
Binary files ns-2.30-pure/tcl/ex/wirelessnode2-hybrid_tokernel and ns-2.30/tcl/ex/wirelessnode2-hybrid_tokernel differ
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/tcl/lib/ns-clicknode.tcl ns-2.30/tcl/lib/ns-clicknode.tcl
--- ns-2.30-pure/tcl/lib/ns-clicknode.tcl	1969-12-31 16:00:00.000000000 -0800
+++ ns-2.30/tcl/lib/ns-clicknode.tcl	2007-09-11 21:04:07.000000000 -0700
@@ -0,0 +1,352 @@
+#
+#  Copyright 2002, Univerity of Colorado at Boulder.                        
+#                                                                            
+#                         All Rights Reserved                                
+#                                                                            
+#  Permission to use, copy, modify, and distribute this software and its    
+#  documentation for any purpose other than its incorporation into a        
+#  commercial product is hereby granted without fee, provided that the      
+#  above copyright notice appear in all copies and that both that           
+#  copyright notice and this permission notice appear in supporting         
+#  documentation, and that the name of the University not be used in        
+#  advertising or publicity pertaining to distribution of the software      
+#  without specific, written prior permission.                              
+#                                                                            
+#  UNIVERSITY OF COLORADO DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS      
+#  SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND        
+#  FITNESS FOR ANY PARTICULAR PURPOSE.  IN NO EVENT SHALL THE UNIVERSITY    
+#  OF COLORADO BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL         
+#  DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA      
+#  OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER       
+#  TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR         
+#  PERFORMANCE OF THIS SOFTWARE.                                            
+#
+#
+
+Class ClickNode -superclass Node/MobileNode
+
+Node/MobileNode/ClickNode instproc init args {
+    $self instvar nifs_ netif_ mac_ ifq_ ll_ dmux_
+    set ns [Simulator instance]
+    eval $self next $args
+    set nifs_ 0
+    $self register-module [new RtModule/Click]
+
+    #
+    # This Trace Target is used to log changes in direction
+    # and velocity for the mobile node.
+    #
+    set tracefd [$ns get-ns-traceall]
+    if {$tracefd != "" } {
+	$self nodetrace $tracefd
+	#$self agenttrace $tracefd
+    }
+
+    set namtracefd [$ns get-nam-traceall]
+    if {$namtracefd != "" } {
+	$self namattach $namtracefd
+    }
+
+}
+
+Node/MobileNode/ClickNode instproc getip { ifname } {
+    [$self entry] getip $ifname
+}
+
+Node/MobileNode/ClickNode instproc getmac { ifname } {
+    [$self entry] getmac $ifname
+}
+
+Node/MobileNode/ClickNode instproc setip { ifname ipaddr } {
+    [$self entry] setip $ifname $ipaddr
+}
+
+Node/MobileNode/ClickNode instproc setmac { ifname macaddr } {
+    [$self entry] setmac $ifname $macaddr
+}
+
+Node/MobileNode/ClickNode instproc add-route { dst target } {
+    #puts "ClickNode does routing via Click - not ns."
+}
+
+Node/MobileNode/ClickNode instproc delete-route args {
+    #puts "ClickNode does routing via Click - not ns."
+}
+
+Node/MobileNode/ClickNode instproc route-notify { module } {
+    #puts "ClickNode does routing via Click - not ns."
+}
+
+#
+# The following setups up link layer, mac layer, network interface
+# and physical layer structures for the click node. Stolen from
+# the MobileNode code, and then modified a bit, e.g. the ARP
+# stuff got removed.
+#
+Node/MobileNode/ClickNode instproc add-interface { channel pmodel lltype mactype \
+					    qtype qlen iftype anttype topo} {
+
+    $self instvar nifs_ netif_ mac_ ifq_ ll_
+    set ns [Simulator instance]
+    set t $nifs_
+    incr nifs_
+
+    set netif_($t)	[new $iftype]		;# interface
+    set mac_($t)	[new $mactype]		;# mac layer
+    set ifq_($t)	[new $qtype]		;# interface queue
+    set ll_($t)	[new $lltype]		;# link layer
+    set ant_($t)    [new $anttype]
+
+    set namfp [$ns get-nam-traceall]
+
+    #
+    # Local Variables
+    #
+    set nullAgent_ [$ns set nullAgent_]
+    set netif $netif_($t)
+    set mac $mac_($t)
+    set ifq $ifq_($t)
+    set ll $ll_($t)
+
+    #
+    # Link Layer
+    #
+    $ll mac $mac
+    $ll down-target $ifq
+    $ll up-target [$self entry]
+    # Stuff the link layer into the next available classifier slot, and
+    # use that slot number as the network id
+    $ll setid [[$self entry] installNext $ll]
+    # Set the associated MAC layer address
+    $ll set macDA_ [$mac id]
+
+    #
+    # Interface Queue
+    #
+    $ifq target $mac
+    $ifq set limit_ $qlen
+    set drpT [cmu-trace Drop "IFQ" $self]
+    $ifq drop-target $drpT
+    if { $namfp != "" } {
+	$drpT namattach $namfp
+    }
+    if {$qtype == "Queue/ClickQueue"} {
+	$ifq setclickclassifier [$self entry]
+	$ll ifq $ifq
+    }
+
+    #
+    # Mac Layer
+    #
+    $mac netif $netif
+    $mac up-target $ll
+    $mac down-target $netif
+    set god_ [God instance]
+    if {$mactype == "Mac/802_11"} {
+	# XXX this is a hack to handle multiple interfaces per node.
+	$mac nodes [expr 4*[$god_ num_nodes]]
+    }
+    #
+    # Network Interface
+    #
+    $netif channel $channel
+    $netif up-target $mac
+    $netif propagation $pmodel	;# Propagation Model
+    $netif node $self		;# Bind node <---> interface
+    $netif antenna $ant_($t)
+    #
+    # Physical Channel
+    #
+    $channel addif $netif
+
+        # List-based improvement
+	# For nodes talking to multiple channels this should
+	# be called multiple times for each channel
+	$channel add-node $self		
+
+	# let topo keep handle of channel
+	$topo channel $channel	
+
+    
+    # ============================================================
+    
+    if { [Simulator set MacTrace_] == "ON" } {
+	#
+	# Trace RTS/CTS/ACK Packets
+	#
+	set rcvT [cmu-trace Recv "MAC" $self]
+	$mac log-target $rcvT
+	if { $namfp != "" } {
+	    $rcvT namattach $namfp
+	}
+	#
+	# Trace Sent Packets
+	#
+	set sndT [cmu-trace Send "MAC" $self]
+	$sndT target [$mac down-target]
+	$mac down-target $sndT
+	if { $namfp != "" } {
+	    $sndT namattach $namfp
+	}
+	#
+	# Trace Received Packets
+	#
+	set rcvT [cmu-trace Recv "MAC" $self]
+	$rcvT target [$mac up-target]
+	$mac up-target $rcvT
+	if { $namfp != "" } {
+	    $rcvT namattach $namfp
+	}
+	#
+	# Trace Dropped Packets
+	#
+	set drpT [cmu-trace Drop "MAC" $self]
+	$mac drop-target $drpT
+	if { $namfp != "" } {
+	    $drpT namattach $namfp
+	}
+    } else {
+	$mac log-target [$ns set nullAgent_]
+	$mac drop-target [$ns set nullAgent_]
+    }
+    
+    # ============================================================
+    
+    $self addif $netif
+}
+
+
+#
+# The following setups up link layer, mac layer, network interface
+# and physical layer structures for the click node. Stolen from
+# the MobileNode code, and then modified a bit, e.g. the ARP
+# stuff got removed.
+#
+Node/MobileNode/ClickNode instproc add-wired-interface { channel lltype mactype qtype qlen iftype} {
+
+    $self instvar nifs_ netif_ mac_ ifq_ ll_
+    set ns [Simulator instance]
+    set t $nifs_
+    incr nifs_
+
+    set netif_($t)	[new $iftype]		;# interface
+    set mac_($t)	[new $mactype]		;# mac layer
+    set ifq_($t)	[new $qtype]		;# interface queue
+    set ll_($t)	[new $lltype]		;# link layer
+
+
+    set namfp [$ns get-nam-traceall]
+
+    #
+    # Local Variables
+    #
+    set nullAgent_ [$ns set nullAgent_]
+    set netif $netif_($t)
+    set mac $mac_($t)
+    set ifq $ifq_($t)
+    set ll $ll_($t)
+
+    #
+    # Link Layer
+    #
+    $ll mac $mac
+    $ll down-target $ifq
+     $ll up-target [$self entry]
+    # Stuff the link layer into the next available classifier slot, and
+    # use that slot number as the network id
+    $ll setid [[$self entry] installNext $ll]
+    # Set the associated MAC layer address
+    $ll set macDA_ [$mac id]
+
+    #
+    # Interface Queue
+    #
+    $ifq target $mac
+    $ifq set limit_ $qlen
+    set drpT [cmu-trace Drop "IFQ" $self]
+    $ifq drop-target $drpT
+    if { $namfp != "" } {
+	$drpT namattach $namfp
+    }
+    if {$qtype == "Queue/ClickQueue"} {
+	$ifq setclickclassifier [$self entry]
+	$ll ifq $ifq
+    }
+
+    #
+    # Mac Layer
+    #
+    $mac netif $netif
+    $mac up-target $ll
+    $mac down-target $netif
+    set god_ [God instance]
+    if {$mactype == "Mac/802_11"} {
+	$mac nodes [$god_ num_nodes]
+    }
+    #
+    # Network Interface
+    #
+    $netif channel $channel
+    $netif up-target $mac
+    $netif node $self		;# Bind node <---> interface
+    #
+    # Physical Channel
+    #
+    $channel addif $netif
+    
+    # ============================================================
+    
+    if { [Simulator set MacTrace_] == "ON" } {
+	#
+	# Trace RTS/CTS/ACK Packets
+	#
+	set rcvT [cmu-trace Recv "MAC" $self]
+	$mac log-target $rcvT
+	if { $namfp != "" } {
+	    $rcvT namattach $namfp
+	}
+	#
+	# Trace Sent Packets
+	#
+	set sndT [cmu-trace Send "MAC" $self]
+	$sndT target [$mac down-target]
+	$mac down-target $sndT
+	if { $namfp != "" } {
+	    $sndT namattach $namfp
+	}
+	#
+	# Trace Received Packets
+	#
+	set rcvT [cmu-trace Recv "MAC" $self]
+	$rcvT target [$mac up-target]
+	$mac up-target $rcvT
+	if { $namfp != "" } {
+	    $rcvT namattach $namfp
+	}
+	#
+	# Trace Dropped Packets
+	#
+	set drpT [cmu-trace Drop "MAC" $self]
+	$mac drop-target $drpT
+	if { $namfp != "" } {
+	    $drpT namattach $namfp
+	}
+    } else {
+	$mac log-target [$ns set nullAgent_]
+	$mac drop-target [$ns set nullAgent_]
+    }
+    
+    # ============================================================
+    
+    $self addif $netif
+}
+
+Node/MobileNode/ClickNode instproc setpromiscuous { whichif ispromisc } {
+    $self instvar ll_
+    set thell $ll_($whichif)
+    $thell setpromiscuous $ispromisc
+}
+
+Node/MobileNode/ClickNode instproc dump-namconfig {} {
+# Do nothing
+}
\ No newline at end of file
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/tcl/lib/ns-default.tcl ns-2.30/tcl/lib/ns-default.tcl
--- ns-2.30-pure/tcl/lib/ns-default.tcl	2006-09-24 22:11:03.000000000 -0700
+++ ns-2.30/tcl/lib/ns-default.tcl	2007-09-11 21:04:07.000000000 -0700
@@ -722,6 +722,19 @@
 Phy/WirelessPhy set Pt_ 0.28183815
 Phy/WirelessPhy set freq_ 914e+6
 Phy/WirelessPhy set L_ 1.0  
+# Madwifi multirate support
+# Number of rates
+# Set 0 to disable multirate
+Phy/WirelessPhy set RateCount_ 0
+
+# Placeholder SwitchChannel function
+# This allows the WirelessInfo element in the Click router
+# to trigger a channel change.
+# Override this in your simulation script to effectively 
+# change the channel of wireless interface.
+proc SwitchChannel { i whichif whichnewchannel } {
+
+}
 
 Phy/WiredPhy set bandwidth_ 10e6
 
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/tcl/lib/ns-lib.tcl ns-2.30/tcl/lib/ns-lib.tcl
--- ns-2.30-pure/tcl/lib/ns-lib.tcl	2006-09-24 22:11:03.000000000 -0700
+++ ns-2.30/tcl/lib/ns-lib.tcl	2007-09-11 21:04:07.000000000 -0700
@@ -208,6 +208,8 @@
 source ns-default.tcl
 source ../emulate/ns-emulate.tcl
 
+source ns-clicknode.tcl
+
 #pushback
 source ns-pushback.tcl
 
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/tcl/lib/ns-mobilenode.tcl ns-2.30/tcl/lib/ns-mobilenode.tcl
--- ns-2.30-pure/tcl/lib/ns-mobilenode.tcl	2006-09-24 22:11:03.000000000 -0700
+++ ns-2.30/tcl/lib/ns-mobilenode.tcl	2007-09-11 21:04:07.000000000 -0700
@@ -660,6 +660,7 @@
 
 
 
+
 Node/MobileNode instproc mobility-trace { ttype atype } {
 	set ns [Simulator instance]
         set tracefd [$ns get-ns-traceall]
@@ -788,6 +789,21 @@
 }
 # </zheng: add>
 
+# change interface channel
+Node/MobileNode instproc changechannel { whichif newchan } {
+	$self instvar netif_
+	[$netif_($whichif) getchannel] delif $netif_($whichif)
+	$netif_($whichif) channel $newchan
+	$newchan addif $netif_($whichif)
+}
+
+# aim a steerable antenna
+Node/MobileNode instproc aimantenna { whichif newdir } {
+	$self instvar netif_
+	set theant [$netif_($whichif) getantenna]
+	$theant set Dir_ $newdir
+}
+
 Class SRNodeNew -superclass Node/MobileNode
 
 SRNodeNew instproc init args {
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/tcl/lib/ns-packet.tcl ns-2.30/tcl/lib/ns-packet.tcl
--- ns-2.30-pure/tcl/lib/ns-packet.tcl	2006-09-24 22:11:03.000000000 -0700
+++ ns-2.30/tcl/lib/ns-packet.tcl	2007-09-11 21:04:07.000000000 -0700
@@ -115,6 +115,7 @@
 	Common 
 	Flags
 	IP 	# IP
+	Raw	# nsclick: raw packet type
 # Routing Protocols:
 	NV 	# NixVector classifier for stateless routing 
 	rtProtoDV 	# distance vector routing protocol
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/tcl/lib/ns-rtmodule.tcl ns-2.30/tcl/lib/ns-rtmodule.tcl
--- ns-2.30-pure/tcl/lib/ns-rtmodule.tcl	2006-09-24 22:11:03.000000000 -0700
+++ ns-2.30/tcl/lib/ns-rtmodule.tcl	2007-09-11 21:04:07.000000000 -0700
@@ -340,6 +340,43 @@
 RtModule/VC instproc add-route { dst target } {
 }
 
+
+#
+# Click routing module. Intended to subvert the normal routing process
+# and defer to Click.
+#
+RtModule/Click instproc init {} {
+        $self next
+}
+
+RtModule/Click instproc register { node } {
+        $self next $node
+        $self make-classifier
+}
+
+RtModule/Click instproc make-classifier {} {
+        $self instvar classifier_
+        set classifier_ [new Classifier/Ext/Click]
+        [$self node] install-entry $self $classifier_
+        $classifier_ setnodename [format "node%d" [[$self node] set id_]]
+        $classifier_ setnodeaddr [[$self node] set address_]
+        [$self node] set dmux_ [new Classifier/Port]
+
+        # Always stick the kernel tap interface into slot 0
+        $classifier_ install 0 [[$self node] set dmux_]
+}
+
+RtModule/Click instproc attach { agent port } {
+        # Send target
+        $agent target [[$self node] entry]
+        # Recv target
+        [[$self node] demux] install $port $agent
+}
+
+RtModule/Click instproc detach { agent nullagent } {
+        # Empty method
+}
+
 Classifier/Virtual instproc find dst {
 	$self instvar node_
 	if {[$node_ id] == $dst} {
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/tcl/rtglib/route-proto.tcl ns-2.30/tcl/rtglib/route-proto.tcl
--- ns-2.30-pure/tcl/rtglib/route-proto.tcl	2006-09-24 22:11:04.000000000 -0700
+++ ns-2.30/tcl/rtglib/route-proto.tcl	2007-09-11 21:04:07.000000000 -0700
@@ -739,6 +739,15 @@
 Agent/rtProto/Manual proc init-all args {
     # The user will do all routing.
 }
+#
+# Empty. Does NOTHING - even less than the Manual routing.
+#
+Class Agent/rtProto/Empty -superclass Agent/rtProto
+
+Agent/rtProto/Empty proc init-all args {
+    # Do nothing
+}
+
 
 ### Local Variables:
 ### mode: tcl
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/tools/random.cc ns-2.30/tools/random.cc
--- ns-2.30-pure/tools/random.cc	2006-09-24 22:11:00.000000000 -0700
+++ ns-2.30/tools/random.cc	2007-09-11 21:04:07.000000000 -0700
@@ -34,7 +34,7 @@
  * "@(#) $Header: /cvsroot/nsnam/ns-2/tools/random.cc,v 1.20 2003/12/10 17:19:56 johnh Exp $ (LBL)";
  */
 
-#ifndef WIN32
+#if !defined(WIN32) && !defined(ALLOW_RANDOM)
 
 #include <sys/time.h>
 #include "config.h"
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/trace/cmu-trace.cc ns-2.30/trace/cmu-trace.cc
--- ns-2.30-pure/trace/cmu-trace.cc	2006-09-24 22:10:59.000000000 -0700
+++ ns-2.30/trace/cmu-trace.cc	2007-09-11 21:04:07.000000000 -0700
@@ -53,6 +53,7 @@
 #include <aodv/aodv_packet.h> //AODV
 #include <cmu-trace.h>
 #include <mobilenode.h>
+#include <rawpacket.h>
 #include <simulator.h>
 //<zheng: add for 802.15.4>
 #include "wpan/p802_15_4pkt.h"
@@ -886,6 +887,20 @@
         }
 }
 
+// XXX Fix this
+void
+CMUTrace::format_raw(Packet *p, int offset)
+{
+        struct hdr_cmn *ch = HDR_CMN(p);
+        struct hdr_tcp *th = HDR_TCP(p);
+        
+        if( newtrace_ ) {
+                sprintf(pt_->buffer() + offset,"raw ");
+        } else {
+                sprintf(pt_->buffer() + offset,"raw ");
+        }
+}
+
 void
 CMUTrace::nam_format(Packet *p, int offset)
 {
@@ -1128,6 +1143,12 @@
 	hdr_cmn *ch = HDR_CMN(p);
 	int offset = 0;
 
+	int israw = (PT_RAW == ch->ptype());
+ 	hdr_raw* rhdr = hdr_raw::access(p);	
+	if (israw) {
+	    ch->ptype() = (packet_t) rhdr->ns_type;
+	}
+
 	/*
 	 * Log the MAC Header
 	 */
@@ -1136,6 +1157,8 @@
 	if (pt_->namchannel()) 
 		nam_format(p, offset);
 	offset = strlen(pt_->buffer());
+
+
 	switch(ch->ptype()) {
 	case PT_MAC:
 	case PT_SMAC:
@@ -1147,6 +1170,9 @@
 		format_ip(p, offset);
 		offset = strlen(pt_->buffer());
 		switch(ch->ptype()) {
+		case PT_RAW:
+			format_raw(p, offset);
+			break;
 		case PT_AODV:
 			format_aodv(p, offset);
 			break;
@@ -1189,6 +1215,9 @@
 			break;		//zheng: add
 		}
 	}
+	if (israw) {
+	    ch->ptype() = PT_RAW;
+	}
 }
 
 int
diff -ruN --exclude='*.o' --exclude='autom4*' ns-2.30-pure/trace/cmu-trace.h ns-2.30/trace/cmu-trace.h
--- ns-2.30-pure/trace/cmu-trace.h	2006-09-24 22:10:59.000000000 -0700
+++ ns-2.30/trace/cmu-trace.h	2007-09-11 21:04:07.000000000 -0700
@@ -133,6 +133,7 @@
 	void	format_tora(Packet *p, int offset);
         void    format_imep(Packet *p, int offset);
         void    format_aodv(Packet *p, int offset);
+	void    format_raw(Packet *p, int offset);
 };
 
 #endif /* __cmu_trace__ */
